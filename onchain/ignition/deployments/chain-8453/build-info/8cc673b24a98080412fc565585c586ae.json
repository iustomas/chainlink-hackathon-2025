{
  "id": "8cc673b24a98080412fc565585c586ae",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function _preventExecution() internal view {\n    // solhint-disable-next-line avoid-tx-origin\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    _preventExecution();\n    _;\n  }\n}\n"
      },
      "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AutomationBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"
      },
      "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"
      },
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/TomasSubscription.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n// Chainlink Price Feed imports\nimport \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\n\n// Chainlink Automation imports (for monthly billing)\nimport \"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\";\n\n// OpenZeppelin imports\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title TomasSubscription\n * @author Cristian Valdivia\n * @notice Contract for handling monthly subscriptions in WETH for Tomas web3 legal agent\n * @dev Uses Chainlink Automations for monthly billing (every 30 days), Chainlink Price Feeds for ETH/USD conversion, and WETH for automatic payments\n */\n\ncontract TomasSubscription is Ownable, AutomationCompatibleInterface, ReentrancyGuard {\n    // Chainlink Price Feed for ETH/USD\n    AggregatorV3Interface private priceFeed;\n    \n    // WETH token contract\n    IERC20 public immutable wethToken;\n    \n    // Subscription cost in USD (with 8 decimals) - every 30 days\n    uint256 public constant SUBSCRIPTION_COST_USD = 100 * 1e8; // $100 USD\n    \n    // Maximum allowed price in USD for safety\n    uint256 public constant MAX_PRICE_USD = 10000 * 1e8; // $10,000 USD\n    \n    // Billing cycle in seconds (30 days)\n    uint256 public constant BILLING_CYCLE = 30 days;\n    \n    // Grace period before subscription expires (3 days)\n    uint256 public constant GRACE_PERIOD = 3 days;\n    \n    // Price feed staleness threshold (1 hour)\n    uint256 public constant PRICE_STALENESS_THRESHOLD = 3600; \n    \n    // Subscription tracking\n    struct Subscription {\n        uint256 lastPaymentTimestamp;  // When last payment was made\n        uint256 nextBillingTimestamp;  // When next payment is due\n        bool isActive;\n        uint256 lastPaymentAmount;     // Amount paid in last transaction\n        bool hasWETHApproval;          // Whether user has approved WETH spending\n    }\n    \n    // Mapping to track user subscriptions\n    mapping(address => Subscription) public subscriptions;\n    \n    // Array to track all active users for automation processing\n    address[] public activeUsers;\n    mapping(address => uint256) public userIndex; // Index in activeUsers array\n    mapping(address => bool) public isUserTracked; // Whether user is in the array\n    \n    // Whitelist for users who don't need to pay\n    mapping(address => bool) public whitelist;\n    \n    // Events\n    event SubscriptionPaid(address indexed user, uint256 amountWETH, uint256 nextBilling);\n    event SubscriptionExpired(address indexed user, uint256 timestamp);\n    event SubscriptionCanceled(address indexed user, uint256 timestamp);\n    event UserWhitelisted(address indexed user, bool isWhitelisted);\n    event AutomationTriggered(uint256 timestamp, uint256 usersProcessed);\n    event WETHApprovalUpdated(address indexed user, bool approved);\n    event AutomaticPaymentFailed(address indexed user, string reason);\n    event UserAddedToTracking(address indexed user);\n    event UserRemovedFromTracking(address indexed user);\n    \n    // Automation variables\n    uint256 public lastAutomationTime;\n    uint256 public constant AUTOMATION_INTERVAL = 1 days; // Check daily for due subscriptions\n    \n    // Gas optimization for automation\n    uint256 public constant MAX_USERS_PER_UPKEEP = 20; // Process max 20 users per upkeep call\n    \n    constructor(address _priceFeed, address _wethToken) Ownable(msg.sender) {\n        require(_priceFeed != address(0), \"Invalid price feed address\");\n        require(_wethToken != address(0), \"Invalid WETH address\");\n        \n        priceFeed = AggregatorV3Interface(_priceFeed);\n        wethToken = IERC20(_wethToken);\n        lastAutomationTime = block.timestamp;\n    }\n    \n    /**\n     * @notice Get the latest ETH/USD price from Chainlink with staleness checks\n     * @return The latest price with 8 decimals\n     */\n    function getLatestPrice() public view returns (uint256) {\n        (\n            uint80 roundId,\n            int256 price,\n            ,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        ) = priceFeed.latestRoundData();\n        \n        require(price > 0, \"Invalid price feed\");\n        require(updatedAt > 0, \"Round not complete\");\n        require(block.timestamp - updatedAt <= PRICE_STALENESS_THRESHOLD, \"Price data too old\");\n        require(answeredInRound >= roundId, \"Stale price data\");\n        require(uint256(price) <= MAX_PRICE_USD, \"Price too high\");\n        \n        return uint256(price);\n    }\n    \n    /**\n     * @notice Calculate the required WETH amount based on USD price with overflow protection\n     * @return The amount of WETH required with 18 decimals\n     */\n    function getRequiredWETHAmount() public view returns (uint256) {\n        uint256 ethPrice = getLatestPrice();\n        \n        // Overflow protection\n        uint256 numerator = SUBSCRIPTION_COST_USD * 1e18;\n        require(numerator / 1e18 == SUBSCRIPTION_COST_USD, \"Overflow detected\");\n        require(ethPrice > 0, \"Invalid ETH price\");\n        \n        return numerator / ethPrice;\n    }\n    \n    /**\n     * @notice Add user to tracking array\n     * @param user Address to add\n     */\n    function _addUser(address user) internal {\n        if (!isUserTracked[user]) {\n            activeUsers.push(user);\n            userIndex[user] = activeUsers.length - 1;\n            isUserTracked[user] = true;\n            emit UserAddedToTracking(user);\n        }\n    }\n    \n    /**\n     * @notice Remove user from tracking array\n     * @param user Address to remove\n     */\n    function _removeUser(address user) internal {\n        if (isUserTracked[user]) {\n            uint256 index = userIndex[user];\n            uint256 lastIndex = activeUsers.length - 1;\n            \n            if (index != lastIndex) {\n                address lastUser = activeUsers[lastIndex];\n                activeUsers[index] = lastUser;\n                userIndex[lastUser] = index;\n            }\n            \n            activeUsers.pop();\n            delete userIndex[user];\n            isUserTracked[user] = false;\n            emit UserRemovedFromTracking(user);\n        }\n    }\n    \n    /**\n     * @notice Pay for subscription with ETH (manual payment)\n     */\n    function payWithETH() external payable nonReentrant {\n        require(!whitelist[msg.sender], \"User is whitelisted\");\n        \n        // Check if user already has an active subscription\n        if (!subscriptions[msg.sender].isActive) {\n            require(activeUsers.length < MAX_USERS_PER_UPKEEP, \"Maximum users reached\");\n        }\n        \n        uint256 requiredAmount = getRequiredWETHAmount();\n        require(msg.value >= requiredAmount, \"Insufficient payment\");\n        \n        // Calculate refund amount\n        uint256 refundAmount = 0;\n        if (msg.value > requiredAmount) {\n            refundAmount = msg.value - requiredAmount;\n        }\n        \n        uint256 nextBilling = block.timestamp + BILLING_CYCLE;\n        \n        // Update state first (checks-effects-interactions pattern)\n        subscriptions[msg.sender] = Subscription({\n            lastPaymentTimestamp: block.timestamp,\n            nextBillingTimestamp: nextBilling,\n            isActive: true,\n            lastPaymentAmount: msg.value - refundAmount, // Store actual payment amount\n            hasWETHApproval: false // User paid with ETH, not using auto-pay\n        });\n        \n        // Add user to tracking for future automation (in case they set up WETH later)\n        _addUser(msg.sender);\n        \n        emit SubscriptionPaid(msg.sender, msg.value - refundAmount, nextBilling);\n        \n        // Refund excess ETH if any (interactions last)\n        if (refundAmount > 0) {\n            (bool success, ) = payable(msg.sender).call{value: refundAmount}(\"\");\n            require(success, \"Refund failed\");\n        }\n    }\n    \n    /**\n     * @notice Set up subscription with WETH for automatic payments\n     */\n    function setupWETHSubscription() external nonReentrant {\n        require(!whitelist[msg.sender], \"User is whitelisted\");\n        \n        // Check if user already has an active subscription\n        if (!subscriptions[msg.sender].isActive) {\n            require(activeUsers.length < MAX_USERS_PER_UPKEEP, \"Maximum users reached\");\n        }\n        \n        uint256 requiredAmount = getRequiredWETHAmount();\n        \n        // Check if user has enough WETH\n        require(wethToken.balanceOf(msg.sender) >= requiredAmount, \"Insufficient WETH balance\");\n        \n        // Check if user has approved this contract to spend WETH\n        require(wethToken.allowance(msg.sender, address(this)) >= requiredAmount, \"WETH approval required\");\n        \n        // Transfer WETH for first payment\n        require(wethToken.transferFrom(msg.sender, address(this), requiredAmount), \"WETH transfer failed\");\n        \n        uint256 nextBilling = block.timestamp + BILLING_CYCLE;\n        \n        // Update subscription\n        subscriptions[msg.sender] = Subscription({\n            lastPaymentTimestamp: block.timestamp,\n            nextBillingTimestamp: nextBilling,\n            isActive: true,\n            lastPaymentAmount: requiredAmount,\n            hasWETHApproval: true\n        });\n        \n        // Add user to tracking for automation\n        _addUser(msg.sender);\n        \n        emit SubscriptionPaid(msg.sender, requiredAmount, nextBilling);\n        emit WETHApprovalUpdated(msg.sender, true);\n    }\n    \n    /**\n     * @notice Enable WETH automatic payments for existing subscription\n     */\n    function enableWETHAutoPay() external {\n        require(subscriptions[msg.sender].isActive, \"No active subscription\");\n        require(!subscriptions[msg.sender].hasWETHApproval, \"Already enabled\");\n        \n        uint256 requiredAmount = getRequiredWETHAmount();\n        \n        // Check if user has approved this contract to spend WETH\n        require(wethToken.allowance(msg.sender, address(this)) >= requiredAmount, \"WETH approval required\");\n        \n        subscriptions[msg.sender].hasWETHApproval = true;\n        _addUser(msg.sender); // Ensure user is tracked for automation\n        \n        emit WETHApprovalUpdated(msg.sender, true);\n    }\n    \n    /**\n     * @notice Disable WETH automatic payments\n     */\n    function disableWETHAutoPay() external {\n        subscriptions[msg.sender].hasWETHApproval = false;\n        emit WETHApprovalUpdated(msg.sender, false);\n    }\n    \n    /**\n     * @notice Cancel subscription\n     */\n    function cancelSubscription() external {\n        require(subscriptions[msg.sender].isActive, \"No active subscription\");\n        \n        subscriptions[msg.sender].isActive = false;\n        subscriptions[msg.sender].hasWETHApproval = false;\n        _removeUser(msg.sender);\n        \n        emit SubscriptionCanceled(msg.sender, block.timestamp);\n    }\n    \n    /**\n     * @notice Check if user has active subscription\n     * @param user Address to check\n     * @return True if user has active subscription (not expired)\n     */\n    function hasActiveSubscription(address user) external view returns (bool) {\n        if (whitelist[user]) {\n            return true;\n        }\n        \n        Subscription memory sub = subscriptions[user];\n        if (!sub.isActive) {\n            return false;\n        }\n        \n        // Check if subscription hasn't expired (including grace period)\n        return block.timestamp <= (sub.nextBillingTimestamp + GRACE_PERIOD);\n    }\n    \n    /**\n     * @notice Check if user's subscription is due for payment\n     * @param user Address to check\n     * @return True if payment is due\n     */\n    function isPaymentDue(address user) public view returns (bool) {\n        Subscription memory sub = subscriptions[user];\n        \n        if (!sub.isActive || whitelist[user]) {\n            return false;\n        }\n        \n        return block.timestamp >= sub.nextBillingTimestamp;\n    }\n    \n    /**\n     * @notice Check if user's subscription has expired\n     * @param user Address to check\n     * @return True if subscription has expired\n     */\n    function isSubscriptionExpired(address user) public view returns (bool) {\n        Subscription memory sub = subscriptions[user];\n        \n        if (!sub.isActive || whitelist[user]) {\n            return false;\n        }\n        \n        return block.timestamp > (sub.nextBillingTimestamp + GRACE_PERIOD);\n    }\n    \n    /**\n     * @notice Get subscription details for a user\n     * @param user Address to check\n     * @return lastPayment When the last payment was made\n     * @return nextBilling When next payment is due\n     * @return isActive If subscription is currently active\n     * @return lastAmount The last payment amount\n     * @return isWhitelisted If user is whitelisted\n     * @return paymentDue If payment is currently due\n     * @return hasExpired If subscription has expired\n     * @return hasWETHApproval If user has enabled auto-pay\n     */\n    function getSubscriptionDetails(address user) external view returns (\n        uint256 lastPayment,\n        uint256 nextBilling,\n        bool isActive,\n        uint256 lastAmount,\n        bool isWhitelisted,\n        bool paymentDue,\n        bool hasExpired,\n        bool hasWETHApproval\n    ) {\n        Subscription memory sub = subscriptions[user];\n        return (\n            sub.lastPaymentTimestamp,\n            sub.nextBillingTimestamp,\n            sub.isActive,\n            sub.lastPaymentAmount,\n            whitelist[user],\n            isPaymentDue(user),\n            isSubscriptionExpired(user),\n            sub.hasWETHApproval\n        );\n    }\n    \n    /**\n     * @notice Add or remove user from whitelist (only owner)\n     * @param user Address to modify\n     * @param isWhitelisted True to whitelist, false to remove\n     */\n    function setWhitelist(address user, bool isWhitelisted) external onlyOwner {\n        whitelist[user] = isWhitelisted;\n        \n        // Remove from tracking if whitelisted\n        if (isWhitelisted) {\n            _removeUser(user);\n        }\n        \n        emit UserWhitelisted(user, isWhitelisted);\n    }\n    \n    /**\n     * @notice Batch whitelist operations (only owner)\n     * @param users Array of addresses to modify\n     * @param isWhitelisted True to whitelist, false to remove\n     */\n    function batchSetWhitelist(address[] calldata users, bool isWhitelisted) external onlyOwner {\n        for (uint256 i = 0; i < users.length; i++) {\n            whitelist[users[i]] = isWhitelisted;\n            \n            if (isWhitelisted) {\n                _removeUser(users[i]);\n            }\n            \n            emit UserWhitelisted(users[i], isWhitelisted);\n        }\n    }\n    \n    /**\n     * @notice Withdraw collected WETH (only owner)\n     */\n    function withdrawWETH() external onlyOwner {\n        uint256 balance = wethToken.balanceOf(address(this));\n        require(balance > 0, \"No WETH to withdraw\");\n        require(wethToken.transfer(owner(), balance), \"WETH transfer failed\");\n    }\n    \n    /**\n     * @notice Withdraw collected ETH (only owner)\n     */\n    function withdrawETH() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No ETH to withdraw\");\n        \n        (bool success, ) = payable(owner()).call{value: balance}(\"\");\n        require(success, \"ETH transfer failed\");\n    }\n\n    // allow ETH to be sent to the contract\n    receive() external payable {}\n    \n    /**\n     * @notice Get current pricing information\n     * @return usdPrice The subscription price in USD\n     * @return wethAmount The required amount in WETH\n     * @return ethPrice Current ETH price in USD\n     */\n    function getPricingInfo() external view returns (\n        uint256 usdPrice,\n        uint256 wethAmount,\n        uint256 ethPrice\n    ) {\n        uint256 currentEthPrice = getLatestPrice();\n        return (\n            SUBSCRIPTION_COST_USD,\n            getRequiredWETHAmount(),\n            currentEthPrice\n        );\n    }\n    \n    /**\n     * @notice Get comprehensive service details including pricing, billing cycle, and contract info\n     * @return usdPrice The subscription price in USD\n     * @return wethAmount The required amount in WETH\n     * @return ethPrice Current ETH price in USD\n     * @return billingCycle The billing cycle in seconds (30 days)\n     * @return gracePeriod The grace period in seconds (3 days)\n     * @return maxUsers The maximum number of users allowed\n     * @return currentUsers The current number of active users\n     * @return contractAddress The address of this contract\n     */\n    function getServiceDetails() external view returns (\n        uint256 usdPrice,\n        uint256 wethAmount,\n        uint256 ethPrice,\n        uint256 billingCycle,\n        uint256 gracePeriod,\n        uint256 maxUsers,\n        uint256 currentUsers,\n        address contractAddress\n    ) {\n        uint256 currentEthPrice = getLatestPrice();\n        return (\n            SUBSCRIPTION_COST_USD,\n            getRequiredWETHAmount(),\n            currentEthPrice,\n            BILLING_CYCLE,\n            GRACE_PERIOD,\n            MAX_USERS_PER_UPKEEP,\n            activeUsers.length,\n            address(this)\n        );\n    }\n    \n    /**\n     * @notice Get total number of tracked users\n     * @return Total number of active users\n     */\n    function getTotalActiveUsers() external view returns (uint256) {\n        return activeUsers.length;\n    }\n    \n    /**\n     * @notice Get user at specific index\n     * @param index Index of user to get\n     * @return User address\n     */\n    function getActiveUserAtIndex(uint256 index) external view returns (address) {\n        require(index < activeUsers.length, \"Index out of bounds\");\n        return activeUsers[index];\n    }\n    \n    // ============ CHAINLINK AUTOMATION FUNCTIONS ============\n    \n    /**\n     * @notice Check if automation should be triggered\n     * @return upkeepNeeded True if automation should run\n     * @return performData Data to pass to performUpkeep\n     */\n    function checkUpkeep(\n        bytes calldata /* checkData */\n    ) external view override returns (bool upkeepNeeded, bytes memory performData) {\n        // Check if it's time to run automation\n        bool timeCondition = (block.timestamp - lastAutomationTime) >= AUTOMATION_INTERVAL;\n        \n        // Check if there are users with due payments\n        bool hasWork = false;\n        uint256 totalUsers = activeUsers.length;\n        \n        for (uint256 i = 0; i < totalUsers && i < MAX_USERS_PER_UPKEEP; i++) {\n            address user = activeUsers[i];\n            if (isPaymentDue(user) && subscriptions[user].hasWETHApproval) {\n                hasWork = true;\n                break;\n            }\n        }\n        \n        upkeepNeeded = timeCondition && hasWork;\n        performData = \"\";\n    }\n    \n    /**\n     * @notice Execute automation logic - process due payments with gas control\n     */\n    function performUpkeep(bytes calldata) external override {\n    require((block.timestamp - lastAutomationTime) >= AUTOMATION_INTERVAL, \"Too early\");\n    \n    lastAutomationTime = block.timestamp;\n    uint256 requiredAmount = getRequiredWETHAmount();\n    uint256 processedCount = 0;\n    \n    // Crear snapshot del array para evitar modificaciones durante iteración\n    address[] memory usersSnapshot = new address[](activeUsers.length);\n    uint256 snapshotLength = 0;\n    \n    // Llenar snapshot con usuarios que necesitan procesamiento\n    for (uint256 i = 0; i < activeUsers.length && snapshotLength < MAX_USERS_PER_UPKEEP; i++) {\n        address user = activeUsers[i];\n        if (isPaymentDue(user) && subscriptions[user].hasWETHApproval) {\n            usersSnapshot[snapshotLength] = user;\n            snapshotLength++;\n        }\n    }\n    \n    // Procesar snapshot\n    for (uint256 i = 0; i < snapshotLength; i++) {\n        if (gasleft() < 100000) break; // Gas safety buffer\n        \n        if (_processUserPayment(usersSnapshot[i], requiredAmount)) {\n            processedCount++;\n        }\n    }\n    \n    emit AutomationTriggered(block.timestamp, processedCount);\n}\n    \n    /**\n     * @notice Process payment for a specific user\n     * @param user Address of the user\n     * @param requiredAmount Amount required for payment\n     * @return success True if payment was processed successfully\n     */\n    function _processUserPayment(address user, uint256 requiredAmount) internal returns (bool) {\n        Subscription storage sub = subscriptions[user];\n        \n        // Check if user should be charged\n        if (!sub.isActive || whitelist[user] || !isPaymentDue(user)) {\n            return false;\n        }\n        \n        // Check if subscription has expired (past grace period)\n        if (isSubscriptionExpired(user)) {\n            // Expire the subscription\n            sub.isActive = false;\n            sub.hasWETHApproval = false;\n            _removeUser(user);\n            emit SubscriptionExpired(user, block.timestamp);\n            return false;\n        }\n        \n        // Check if user has WETH approval\n        if (!sub.hasWETHApproval) {\n            emit AutomaticPaymentFailed(user, \"No WETH approval\");\n            return false;\n        }\n        \n        // Check if user has enough WETH\n        if (wethToken.balanceOf(user) < requiredAmount) {\n            emit AutomaticPaymentFailed(user, \"Insufficient WETH balance\");\n            return false;\n        }\n        \n        // Check if allowance is still sufficient\n        if (wethToken.allowance(user, address(this)) < requiredAmount) {\n            emit AutomaticPaymentFailed(user, \"Insufficient WETH allowance\");\n            return false;\n        }\n        \n        // Transfer WETH from user to contract\n        if (!wethToken.transferFrom(user, address(this), requiredAmount)) {\n            emit AutomaticPaymentFailed(user, \"WETH transfer failed\");\n            return false;\n        }\n        \n        // Update subscription for next billing cycle\n        sub.lastPaymentTimestamp = block.timestamp;\n        sub.nextBillingTimestamp = block.timestamp + BILLING_CYCLE;\n        sub.lastPaymentAmount = requiredAmount;\n        \n        emit SubscriptionPaid(user, requiredAmount, sub.nextBillingTimestamp);\n        return true;\n    }\n    \n    /**\n     * @notice Emergency function to update automation time (only owner)\n     * @param newTime New automation time\n     */\n    function updateAutomationTime(uint256 newTime) external onlyOwner {\n        lastAutomationTime = newTime;\n    }\n    \n    /**\n     * @notice Emergency function to manually process a user's payment (only owner)\n     * @param user Address of user to process\n     */\n    function manuallyProcessPayment(address user) external onlyOwner {\n        uint256 requiredAmount = getRequiredWETHAmount();\n        require(_processUserPayment(user, requiredAmount), \"Payment processing failed\");\n    }\n}"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
          "exportedSymbols": {
            "AutomationBase": [
              37
            ]
          },
          "id": 38,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AutomationBase",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 37,
              "linearizedBaseContracts": [
                37
              ],
              "name": "AutomationBase",
              "nameLocation": "66:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "errorSelector": "b60ac5db",
                  "id": 3,
                  "name": "OnlySimulatedBackend",
                  "nameLocation": "91:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "111:2:0"
                  },
                  "src": "85:29:0"
                },
                {
                  "body": {
                    "id": 27,
                    "nodeType": "Block",
                    "src": "291:200:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 13,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 7,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "350:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 8,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "353:6:0",
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "350:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 11,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "371:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 10,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "363:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 9,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "363:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 12,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "363:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "350:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 20,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 14,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "377:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 15,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "380:6:0",
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "377:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "307831313131313131313131313131313131313131313131313131313131313131313131313131313131",
                                  "id": 18,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "398:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "value": "0x1111111111111111111111111111111111111111"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 17,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "390:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 16,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "390:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "390:51:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "377:64:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "350:91:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 26,
                        "nodeType": "IfStatement",
                        "src": "346:141:0",
                        "trueBody": {
                          "id": 25,
                          "nodeType": "Block",
                          "src": "443:44:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 22,
                                  "name": "OnlySimulatedBackend",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3,
                                  "src": "458:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 23,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "458:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 24,
                              "nodeType": "RevertStatement",
                              "src": "451:29:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4,
                    "nodeType": "StructuredDocumentation",
                    "src": "118:127:0",
                    "text": " @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."
                  },
                  "id": 28,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_preventExecution",
                  "nameLocation": "257:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "274:2:0"
                  },
                  "returnParameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "291:0:0"
                  },
                  "scope": 37,
                  "src": "248:243:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 35,
                    "nodeType": "Block",
                    "src": "652:37:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 31,
                            "name": "_preventExecution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "658:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "658:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33,
                        "nodeType": "ExpressionStatement",
                        "src": "658:19:0"
                      },
                      {
                        "id": 34,
                        "nodeType": "PlaceholderStatement",
                        "src": "683:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 29,
                    "nodeType": "StructuredDocumentation",
                    "src": "495:129:0",
                    "text": " @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."
                  },
                  "id": 36,
                  "name": "cannotExecute",
                  "nameLocation": "636:13:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "649:2:0"
                  },
                  "src": "627:62:0",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 38,
              "src": "57:634:0",
              "usedErrors": [
                3
              ],
              "usedEvents": []
            }
          ],
          "src": "32:660:0"
        },
        "id": 0
      },
      "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
          "exportedSymbols": {
            "AutomationBase": [
              37
            ],
            "AutomationCompatible": [
              48
            ],
            "AutomationCompatibleInterface": [
              67
            ]
          },
          "id": 49,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 39,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
              "file": "./AutomationBase.sol",
              "id": 41,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 49,
              "sourceUnit": 38,
              "src": "57:52:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 40,
                    "name": "AutomationBase",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "65:14:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
              "file": "./interfaces/AutomationCompatibleInterface.sol",
              "id": 43,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 49,
              "sourceUnit": 68,
              "src": "110:93:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 42,
                    "name": "AutomationCompatibleInterface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "118:29:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 44,
                    "name": "AutomationBase",
                    "nameLocations": [
                      "247:14:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 37,
                    "src": "247:14:1"
                  },
                  "id": 45,
                  "nodeType": "InheritanceSpecifier",
                  "src": "247:14:1"
                },
                {
                  "baseName": {
                    "id": 46,
                    "name": "AutomationCompatibleInterface",
                    "nameLocations": [
                      "263:29:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 67,
                    "src": "263:29:1"
                  },
                  "id": 47,
                  "nodeType": "InheritanceSpecifier",
                  "src": "263:29:1"
                }
              ],
              "canonicalName": "AutomationCompatible",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": false,
              "id": 48,
              "linearizedBaseContracts": [
                48,
                67,
                37
              ],
              "name": "AutomationCompatible",
              "nameLocation": "223:20:1",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 49,
              "src": "205:90:1",
              "usedErrors": [
                3
              ],
              "usedEvents": []
            }
          ],
          "src": "32:264:1"
        },
        "id": 1
      },
      "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
          "exportedSymbols": {
            "AutomationCompatibleInterface": [
              67
            ]
          },
          "id": 68,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 50,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AutomationCompatibleInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 67,
              "linearizedBaseContracts": [
                67
              ],
              "name": "AutomationCompatibleInterface",
              "nameLocation": "120:29:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "154:985:2",
                    "text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
                  },
                  "functionSelector": "6e04ff0d",
                  "id": 60,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkUpkeep",
                  "nameLocation": "1151:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "checkData",
                        "nameLocation": "1178:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 60,
                        "src": "1163:24:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1163:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1162:26:2"
                  },
                  "returnParameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "upkeepNeeded",
                        "nameLocation": "1212:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 60,
                        "src": "1207:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1207:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "performData",
                        "nameLocation": "1239:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 60,
                        "src": "1226:24:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1226:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1206:45:2"
                  },
                  "scope": 67,
                  "src": "1142:110:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 61,
                    "nodeType": "StructuredDocumentation",
                    "src": "1256:1003:2",
                    "text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
                  },
                  "functionSelector": "4585e33b",
                  "id": 66,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "performUpkeep",
                  "nameLocation": "2271:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "performData",
                        "nameLocation": "2300:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "2285:26:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2285:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2284:28:2"
                  },
                  "returnParameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2321:0:2"
                  },
                  "scope": 67,
                  "src": "2262:60:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 68,
              "src": "110:2214:2",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:2293:2"
        },
        "id": 2
      },
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
        "ast": {
          "absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
          "exportedSymbols": {
            "AggregatorV3Interface": [
              113
            ]
          },
          "id": 114,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 69,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AggregatorV3Interface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 113,
              "linearizedBaseContracts": [
                113
              ],
              "name": "AggregatorV3Interface",
              "nameLocation": "120:21:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "313ce567",
                  "id": 74,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "155:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "163:2:3"
                  },
                  "returnParameters": {
                    "id": 73,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 72,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 74,
                        "src": "189:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "189:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "188:7:3"
                  },
                  "scope": 113,
                  "src": "146:50:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7284e416",
                  "id": 79,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "description",
                  "nameLocation": "209:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "220:2:3"
                  },
                  "returnParameters": {
                    "id": 78,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 77,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 79,
                        "src": "246:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "246:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "245:15:3"
                  },
                  "scope": 113,
                  "src": "200:61:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "54fd4d50",
                  "id": 84,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "version",
                  "nameLocation": "274:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 80,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "281:2:3"
                  },
                  "returnParameters": {
                    "id": 83,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 82,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 84,
                        "src": "307:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 81,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "307:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "306:9:3"
                  },
                  "scope": 113,
                  "src": "265:51:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9a6fc8f5",
                  "id": 99,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoundData",
                  "nameLocation": "329:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "_roundId",
                        "nameLocation": "354:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 99,
                        "src": "347:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "347:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "341:25:3"
                  },
                  "returnParameters": {
                    "id": 98,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 89,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "397:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 99,
                        "src": "390:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "390:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "413:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 99,
                        "src": "406:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "429:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 99,
                        "src": "421:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "421:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "448:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 99,
                        "src": "440:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "440:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 97,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "466:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 99,
                        "src": "459:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "459:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "389:93:3"
                  },
                  "scope": 113,
                  "src": "320:163:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "feaf968c",
                  "id": 112,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRoundData",
                  "nameLocation": "496:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "511:2:3"
                  },
                  "returnParameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 102,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "556:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "549:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "549:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "572:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "565:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "565:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 106,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "588:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "580:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 105,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "580:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "607:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "599:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "599:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "625:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "618:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "618:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "548:93:3"
                  },
                  "scope": 113,
                  "src": "487:155:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 114,
              "src": "110:534:3",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:613:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              369
            ],
            "Ownable": [
              261
            ]
          },
          "id": 262,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 115,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 117,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 262,
              "sourceUnit": 370,
              "src": "128:45:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 116,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 369,
                    "src": "136:7:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 119,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 369,
                    "src": "692:7:4"
                  },
                  "id": 120,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:4"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 118,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:4",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 261,
              "linearizedBaseContracts": [
                261,
                369
              ],
              "name": "Ownable",
              "nameLocation": "681:7:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "706:22:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 123,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:4",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 127,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 125,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 127,
                        "src": "858:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 124,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:4"
                  },
                  "src": "825:50:4"
                },
                {
                  "documentation": {
                    "id": 128,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:4",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 132,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 130,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 132,
                        "src": "994:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:4"
                  },
                  "src": "968:41:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 138,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "1042:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 136,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "1073:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:4"
                  },
                  "src": "1015:84:4"
                },
                {
                  "body": {
                    "id": 163,
                    "nodeType": "Block",
                    "src": "1259:153:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 144,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "1273:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 145,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 158,
                        "nodeType": "IfStatement",
                        "src": "1269:95:4",
                        "trueBody": {
                          "id": 157,
                          "nodeType": "Block",
                          "src": "1301:63:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 152,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 151,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 150,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 132,
                                  "src": "1322:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 156,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 160,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "1392:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 159,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "1373:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 139,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:4",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 164,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "1237:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:4"
                  },
                  "returnParameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:4"
                  },
                  "scope": 261,
                  "src": "1225:187:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 171,
                    "nodeType": "Block",
                    "src": "1521:41:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 167,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "1531:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:4"
                      },
                      {
                        "id": 170,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:4",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 172,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:4"
                  },
                  "src": "1500:62:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 180,
                    "nodeType": "Block",
                    "src": "1693:30:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 178,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "1710:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 177,
                        "id": 179,
                        "nodeType": "Return",
                        "src": "1703:13:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 173,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:4",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 181,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 174,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:4"
                  },
                  "returnParameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "1684:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:4"
                  },
                  "scope": 261,
                  "src": "1638:85:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "1841:117:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 185,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "1855:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 187,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "1866:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 196,
                        "nodeType": "IfStatement",
                        "src": "1851:101:4",
                        "trueBody": {
                          "id": 195,
                          "nodeType": "Block",
                          "src": "1880:72:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 191,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 351,
                                      "src": "1928:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 192,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 190,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 127,
                                  "src": "1901:26:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 194,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 182,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:4",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 198,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 183,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:4"
                  },
                  "returnParameters": {
                    "id": 184,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:4"
                  },
                  "scope": 261,
                  "src": "1796:162:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 211,
                    "nodeType": "Block",
                    "src": "2347:47:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 205,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 204,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "2357:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 210,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 199,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:4",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 212,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 202,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 201,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 172,
                        "src": "2337:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:4"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 200,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:4"
                  },
                  "returnParameters": {
                    "id": 203,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:4"
                  },
                  "scope": 261,
                  "src": "2293:101:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 239,
                    "nodeType": "Block",
                    "src": "2613:145:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 220,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "2627:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 221,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 234,
                        "nodeType": "IfStatement",
                        "src": "2623:91:4",
                        "trueBody": {
                          "id": 233,
                          "nodeType": "Block",
                          "src": "2651:63:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 229,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 228,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 227,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 226,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 132,
                                  "src": "2672:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 232,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 236,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "2742:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 235,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "2723:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 238,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 213,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:4",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 240,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 218,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 217,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 172,
                        "src": "2603:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:4"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "2570:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:4"
                  },
                  "returnParameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:4"
                  },
                  "scope": 261,
                  "src": "2543:215:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 259,
                    "nodeType": "Block",
                    "src": "2975:124:4",
                    "statements": [
                      {
                        "assignments": [
                          247
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 247,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 259,
                            "src": "2985:16:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 246,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 249,
                        "initialValue": {
                          "id": 248,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "3004:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:4"
                      },
                      {
                        "expression": {
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 250,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "3020:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 251,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "3029:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 253,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 255,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "3073:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 256,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "3083:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 254,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "3052:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 258,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 241,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:4",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "2940:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:4"
                  },
                  "returnParameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:4"
                  },
                  "scope": 261,
                  "src": "2912:187:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 262,
              "src": "663:2438:4",
              "usedErrors": [
                127,
                132
              ],
              "usedEvents": [
                138
              ]
            }
          ],
          "src": "102:3000:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              339
            ]
          },
          "id": 340,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 263,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 264,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:5",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 339,
              "linearizedBaseContracts": [
                339
              ],
              "name": "IERC20",
              "nameLocation": "214:6:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 265,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:5",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 273,
                  "name": "Transfer",
                  "nameLocation": "396:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "405:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 269,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "427:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 271,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "447:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:5"
                  },
                  "src": "390:72:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 274,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:5",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 282,
                  "name": "Approval",
                  "nameLocation": "627:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 276,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "636:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 278,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "659:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 280,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 282,
                        "src": "684:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:5"
                  },
                  "src": "621:78:5"
                },
                {
                  "documentation": {
                    "id": 283,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:5",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 288,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:5"
                  },
                  "returnParameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 288,
                        "src": "821:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:5"
                  },
                  "scope": 339,
                  "src": "775:55:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 289,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:5",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 296,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 292,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 291,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "931:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:5"
                  },
                  "returnParameters": {
                    "id": 295,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 294,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "971:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:5"
                  },
                  "scope": 339,
                  "src": "912:68:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 297,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:5",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 306,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 299,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "1222:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "1234:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:5"
                  },
                  "returnParameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 304,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "1267:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:5"
                  },
                  "scope": 339,
                  "src": "1204:69:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 307,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:5",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 316,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "1567:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 311,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "1582:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:5"
                  },
                  "returnParameters": {
                    "id": 315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 314,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "1622:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 313,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:5"
                  },
                  "scope": 339,
                  "src": "1548:83:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 317,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:5",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 326,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 319,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "2326:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 318,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 321,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "2343:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 320,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:5"
                  },
                  "returnParameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "2376:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:5"
                  },
                  "scope": 339,
                  "src": "2309:73:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 327,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:5",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 338,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 329,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "2712:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "2726:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "2738:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:5"
                  },
                  "returnParameters": {
                    "id": 337,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "2771:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:5"
                  },
                  "scope": 339,
                  "src": "2690:87:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 340,
              "src": "204:2575:5",
              "usedErrors": [],
              "usedEvents": [
                273,
                282
              ]
            }
          ],
          "src": "106:2674:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              369
            ]
          },
          "id": 370,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 341,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:6"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 342,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:6",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 369,
              "linearizedBaseContracts": [
                369
              ],
              "name": "Context",
              "nameLocation": "642:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 350,
                    "nodeType": "Block",
                    "src": "718:34:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 347,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 346,
                        "id": 349,
                        "nodeType": "Return",
                        "src": "728:17:6"
                      }
                    ]
                  },
                  "id": 351,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:6"
                  },
                  "returnParameters": {
                    "id": 346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 345,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 351,
                        "src": "709:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 344,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:6"
                  },
                  "scope": 369,
                  "src": "656:96:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 359,
                    "nodeType": "Block",
                    "src": "825:32:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 356,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:6",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 355,
                        "id": 358,
                        "nodeType": "Return",
                        "src": "835:15:6"
                      }
                    ]
                  },
                  "id": 360,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:6"
                  },
                  "returnParameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 360,
                        "src": "809:14:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:6"
                  },
                  "scope": 369,
                  "src": "758:99:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 367,
                    "nodeType": "Block",
                    "src": "935:25:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 364,
                        "id": 366,
                        "nodeType": "Return",
                        "src": "945:8:6"
                      }
                    ]
                  },
                  "id": 368,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 361,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:6"
                  },
                  "returnParameters": {
                    "id": 364,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 363,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 368,
                        "src": "926:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 362,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:6"
                  },
                  "scope": 369,
                  "src": "863:97:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 370,
              "src": "624:338:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              438
            ]
          },
          "id": 439,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 371,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:7"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 372,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:7",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 438,
              "linearizedBaseContracts": [
                438
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 375,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "1818:40:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 378,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "1864:36:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "1907:23:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 381,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:7",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 383,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 382,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:7"
                  },
                  "src": "1994:37:7"
                },
                {
                  "body": {
                    "id": 390,
                    "nodeType": "Block",
                    "src": "2051:38:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 386,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 380,
                            "src": "2061:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 387,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "2071:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 389,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:7"
                      }
                    ]
                  },
                  "id": 391,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 384,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:7"
                  },
                  "returnParameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:7"
                  },
                  "scope": 438,
                  "src": "2037:52:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 401,
                    "nodeType": "Block",
                    "src": "2490:79:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 394,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "2500:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 396,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:7"
                      },
                      {
                        "id": 397,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:7"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 398,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "2542:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 400,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 392,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:7",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 402,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:7",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 393,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:7"
                  },
                  "src": "2466:103:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 417,
                    "nodeType": "Block",
                    "src": "2614:268:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 405,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 380,
                            "src": "2702:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 406,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "2713:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 412,
                        "nodeType": "IfStatement",
                        "src": "2698:86:7",
                        "trueBody": {
                          "id": 411,
                          "nodeType": "Block",
                          "src": "2722:62:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 408,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "2743:28:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 410,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 413,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 380,
                            "src": "2858:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 414,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "2868:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 416,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:7"
                      }
                    ]
                  },
                  "id": 418,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 403,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:7"
                  },
                  "returnParameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:7"
                  },
                  "scope": 438,
                  "src": "2575:307:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "2926:170:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 421,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 380,
                            "src": "3068:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 422,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "3078:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 424,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:7"
                      }
                    ]
                  },
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:7"
                  },
                  "returnParameters": {
                    "id": 420,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:7"
                  },
                  "scope": 438,
                  "src": "2888:208:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 436,
                    "nodeType": "Block",
                    "src": "3339:42:7",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 432,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 380,
                            "src": "3356:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 433,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "3367:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 431,
                        "id": 435,
                        "nodeType": "Return",
                        "src": "3349:25:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:7",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 437,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:7"
                  },
                  "returnParameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 437,
                        "src": "3333:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:7"
                  },
                  "scope": 438,
                  "src": "3275:106:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 439,
              "src": "1030:2353:7",
              "usedErrors": [
                383
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:7"
        },
        "id": 7
      },
      "contracts/TomasSubscription.sol": {
        "ast": {
          "absolutePath": "contracts/TomasSubscription.sol",
          "exportedSymbols": {
            "AggregatorV3Interface": [
              113
            ],
            "AutomationBase": [
              37
            ],
            "AutomationCompatible": [
              48
            ],
            "AutomationCompatibleInterface": [
              67
            ],
            "Context": [
              369
            ],
            "IERC20": [
              339
            ],
            "Ownable": [
              261
            ],
            "ReentrancyGuard": [
              438
            ],
            "TomasSubscription": [
              1998
            ]
          },
          "id": 1999,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 440,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:8"
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
              "file": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
              "id": 441,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1999,
              "sourceUnit": 114,
              "src": "90:83:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
              "file": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
              "id": 442,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1999,
              "sourceUnit": 49,
              "src": "229:75:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 443,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1999,
              "sourceUnit": 262,
              "src": "330:52:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 444,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1999,
              "sourceUnit": 340,
              "src": "383:56:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 445,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1999,
              "sourceUnit": 439,
              "src": "440:59:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 447,
                    "name": "Ownable",
                    "nameLocations": [
                      "837:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 261,
                    "src": "837:7:8"
                  },
                  "id": 448,
                  "nodeType": "InheritanceSpecifier",
                  "src": "837:7:8"
                },
                {
                  "baseName": {
                    "id": 449,
                    "name": "AutomationCompatibleInterface",
                    "nameLocations": [
                      "846:29:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 67,
                    "src": "846:29:8"
                  },
                  "id": 450,
                  "nodeType": "InheritanceSpecifier",
                  "src": "846:29:8"
                },
                {
                  "baseName": {
                    "id": 451,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "877:15:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 438,
                    "src": "877:15:8"
                  },
                  "id": 452,
                  "nodeType": "InheritanceSpecifier",
                  "src": "877:15:8"
                }
              ],
              "canonicalName": "TomasSubscription",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 446,
                "nodeType": "StructuredDocumentation",
                "src": "501:304:8",
                "text": " @title TomasSubscription\n @author Cristian Valdivia\n @notice Contract for handling monthly subscriptions in WETH for Tomas web3 legal agent\n @dev Uses Chainlink Automations for monthly billing (every 30 days), Chainlink Price Feeds for ETH/USD conversion, and WETH for automatic payments"
              },
              "fullyImplemented": true,
              "id": 1998,
              "linearizedBaseContracts": [
                1998,
                438,
                67,
                261,
                369
              ],
              "name": "TomasSubscription",
              "nameLocation": "816:17:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "priceFeed",
                  "nameLocation": "969:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "939:39:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
                    "typeString": "contract AggregatorV3Interface"
                  },
                  "typeName": {
                    "id": 454,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 453,
                      "name": "AggregatorV3Interface",
                      "nameLocations": [
                        "939:21:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 113,
                      "src": "939:21:8"
                    },
                    "referencedDeclaration": 113,
                    "src": "939:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "4b57b0be",
                  "id": 458,
                  "mutability": "immutable",
                  "name": "wethToken",
                  "nameLocation": "1040:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "1016:33:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$339",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 457,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 456,
                      "name": "IERC20",
                      "nameLocations": [
                        "1016:6:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 339,
                      "src": "1016:6:8"
                    },
                    "referencedDeclaration": 339,
                    "src": "1016:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$339",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "67aa682b",
                  "id": 463,
                  "mutability": "constant",
                  "name": "SUBSCRIPTION_COST_USD",
                  "nameLocation": "1150:21:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "1126:57:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_10000000000_by_1",
                      "typeString": "int_const 10000000000"
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "313030",
                      "id": 460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1174:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "316538",
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1180:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      },
                      "value": "1e8"
                    },
                    "src": "1174:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000_by_1",
                      "typeString": "int_const 10000000000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "bfd97cd6",
                  "id": 468,
                  "mutability": "constant",
                  "name": "MAX_PRICE_USD",
                  "nameLocation": "1277:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "1253:51:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130303030",
                      "id": 465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1293:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "316538",
                      "id": 466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1301:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      },
                      "value": "1e8"
                    },
                    "src": "1293:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "544af5f2",
                  "id": 471,
                  "mutability": "constant",
                  "name": "BILLING_CYCLE",
                  "nameLocation": "1396:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "1372:47:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3330",
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1412:7:8",
                    "subdenomination": "days",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2592000_by_1",
                      "typeString": "int_const 2592000"
                    },
                    "value": "30"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "c1a287e2",
                  "id": 474,
                  "mutability": "constant",
                  "name": "GRACE_PERIOD",
                  "nameLocation": "1511:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "1487:45:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "33",
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1526:6:8",
                    "subdenomination": "days",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_259200_by_1",
                      "typeString": "int_const 259200"
                    },
                    "value": "3"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "f25b9caa",
                  "id": 477,
                  "mutability": "constant",
                  "name": "PRICE_STALENESS_THRESHOLD",
                  "nameLocation": "1614:25:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "1590:56:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "33363030",
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1642:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3600_by_1",
                      "typeString": "int_const 3600"
                    },
                    "value": "3600"
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "TomasSubscription.Subscription",
                  "id": 488,
                  "members": [
                    {
                      "constant": false,
                      "id": 479,
                      "mutability": "mutable",
                      "name": "lastPaymentTimestamp",
                      "nameLocation": "1725:20:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 488,
                      "src": "1717:28:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 478,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1717:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 481,
                      "mutability": "mutable",
                      "name": "nextBillingTimestamp",
                      "nameLocation": "1794:20:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 488,
                      "src": "1786:28:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 480,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1786:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 483,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "1858:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 488,
                      "src": "1853:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 482,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1853:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 485,
                      "mutability": "mutable",
                      "name": "lastPaymentAmount",
                      "nameLocation": "1884:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 488,
                      "src": "1876:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 484,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1876:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 487,
                      "mutability": "mutable",
                      "name": "hasWETHApproval",
                      "nameLocation": "1955:15:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 488,
                      "src": "1950:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 486,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1950:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Subscription",
                  "nameLocation": "1694:12:8",
                  "nodeType": "StructDefinition",
                  "scope": 1998,
                  "src": "1687:342:8",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f046395a",
                  "id": 493,
                  "mutability": "mutable",
                  "name": "subscriptions",
                  "nameLocation": "2122:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "2082:53:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                    "typeString": "mapping(address => struct TomasSubscription.Subscription)"
                  },
                  "typeName": {
                    "id": 492,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 489,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2090:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2082:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                      "typeString": "mapping(address => struct TomasSubscription.Subscription)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 491,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 490,
                        "name": "Subscription",
                        "nameLocations": [
                          "2101:12:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 488,
                        "src": "2101:12:8"
                      },
                      "referencedDeclaration": 488,
                      "src": "2101:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                        "typeString": "struct TomasSubscription.Subscription"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "803ae518",
                  "id": 496,
                  "mutability": "mutable",
                  "name": "activeUsers",
                  "nameLocation": "2228:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "2211:28:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 494,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2211:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 495,
                    "nodeType": "ArrayTypeName",
                    "src": "2211:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c96679fe",
                  "id": 500,
                  "mutability": "mutable",
                  "name": "userIndex",
                  "nameLocation": "2280:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "2245:44:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 499,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 497,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2253:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2245:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 498,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2264:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1ec249a1",
                  "id": 504,
                  "mutability": "mutable",
                  "name": "isUserTracked",
                  "nameLocation": "2357:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "2325:45:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 503,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 501,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2333:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2325:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 502,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2344:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9b19251a",
                  "id": 508,
                  "mutability": "mutable",
                  "name": "whitelist",
                  "nameLocation": "2494:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "2462:41:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 507,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 505,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2470:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2462:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 506,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2481:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "6cd9d6bebf8cc2076dd424f83deb0559d8774d1c44178b4f676f9d50709fb1be",
                  "id": 516,
                  "name": "SubscriptionPaid",
                  "nameLocation": "2534:16:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2567:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "2551:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2551:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 512,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountWETH",
                        "nameLocation": "2581:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "2573:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2573:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 514,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nextBilling",
                        "nameLocation": "2601:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "2593:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2593:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2550:63:8"
                  },
                  "src": "2528:86:8"
                },
                {
                  "anonymous": false,
                  "eventSelector": "aeab0094d0f4ba2e37ab9c32d5eae0cbc49edafca1f7366f8ee1b6946c6dacfe",
                  "id": 522,
                  "name": "SubscriptionExpired",
                  "nameLocation": "2625:19:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 518,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2661:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 522,
                        "src": "2645:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 517,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2645:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 520,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "2675:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 522,
                        "src": "2667:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 519,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2667:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2644:41:8"
                  },
                  "src": "2619:67:8"
                },
                {
                  "anonymous": false,
                  "eventSelector": "75703d723c382baf9126c0b27310a322412b9e2bbaf52e74afcf50b107a7905f",
                  "id": 528,
                  "name": "SubscriptionCanceled",
                  "nameLocation": "2697:20:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 527,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 524,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2734:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "2718:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2718:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 526,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "2748:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "2740:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 525,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2740:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2717:41:8"
                  },
                  "src": "2691:68:8"
                },
                {
                  "anonymous": false,
                  "eventSelector": "995d2434d36c9bceaab42c56efe51e8ffe41fd11cabefd9e2cb83700d8b2035e",
                  "id": 534,
                  "name": "UserWhitelisted",
                  "nameLocation": "2770:15:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2802:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "2786:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2786:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 532,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "isWhitelisted",
                        "nameLocation": "2813:13:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "2808:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2808:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2785:42:8"
                  },
                  "src": "2764:64:8"
                },
                {
                  "anonymous": false,
                  "eventSelector": "37aeb7a78769e88660e2546f8ac9047631d3969faaa2dce0188f6a220ac99c17",
                  "id": 540,
                  "name": "AutomationTriggered",
                  "nameLocation": "2839:19:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 536,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "2867:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "2859:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2859:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 538,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "usersProcessed",
                        "nameLocation": "2886:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "2878:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 537,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2878:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2858:43:8"
                  },
                  "src": "2833:69:8"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b347c6bf445109e788a01515e0dba872723ddf737844d1e8bffb97c1fc2f3c22",
                  "id": 546,
                  "name": "WETHApprovalUpdated",
                  "nameLocation": "2913:19:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 542,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2949:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "2933:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2933:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 544,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "2960:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 546,
                        "src": "2955:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 543,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2955:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2932:37:8"
                  },
                  "src": "2907:63:8"
                },
                {
                  "anonymous": false,
                  "eventSelector": "87951482dc5c1eb7f32ab93cd897d85fccfa58819bd33c0aecda71c42cd8898a",
                  "id": 552,
                  "name": "AutomaticPaymentFailed",
                  "nameLocation": "2981:22:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 548,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3020:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "3004:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 547,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 550,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reason",
                        "nameLocation": "3033:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 552,
                        "src": "3026:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3026:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:37:8"
                  },
                  "src": "2975:66:8"
                },
                {
                  "anonymous": false,
                  "eventSelector": "bff36ab077310ef747dcab7b87de0a2be21ee4ad9c8ed40251ffd3ff744235e7",
                  "id": 556,
                  "name": "UserAddedToTracking",
                  "nameLocation": "3052:19:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 555,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 554,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3088:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "3072:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 553,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3072:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3071:22:8"
                  },
                  "src": "3046:48:8"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8a52807acd44f50b6e4823de532df8cb7e684378369a85e00c4fd8da2bfd32c6",
                  "id": 560,
                  "name": "UserRemovedFromTracking",
                  "nameLocation": "3105:23:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 559,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 558,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3145:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 560,
                        "src": "3129:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 557,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3129:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3128:22:8"
                  },
                  "src": "3099:52:8"
                },
                {
                  "constant": false,
                  "functionSelector": "511671ee",
                  "id": 562,
                  "mutability": "mutable",
                  "name": "lastAutomationTime",
                  "nameLocation": "3204:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "3189:33:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "507b1e4e",
                  "id": 565,
                  "mutability": "constant",
                  "name": "AUTOMATION_INTERVAL",
                  "nameLocation": "3252:19:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "3228:52:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3228:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3274:6:8",
                    "subdenomination": "days",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_86400_by_1",
                      "typeString": "int_const 86400"
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "5051a05f",
                  "id": 568,
                  "mutability": "constant",
                  "name": "MAX_USERS_PER_UPKEEP",
                  "nameLocation": "3391:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1998,
                  "src": "3367:49:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3367:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3414:2:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 616,
                    "nodeType": "Block",
                    "src": "3539:297:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 580,
                                "name": "_priceFeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 570,
                                "src": "3557:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 583,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3579:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 582,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3571:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 581,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3571:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3571:10:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3557:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420707269636520666565642061646472657373",
                              "id": 586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3583:28:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
                                "typeString": "literal_string \"Invalid price feed address\""
                              },
                              "value": "Invalid price feed address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
                                "typeString": "literal_string \"Invalid price feed address\""
                              }
                            ],
                            "id": 579,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3549:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3549:63:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 588,
                        "nodeType": "ExpressionStatement",
                        "src": "3549:63:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 590,
                                "name": "_wethToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 572,
                                "src": "3630:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 593,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3652:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3644:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 591,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3644:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3644:10:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3630:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420574554482061646472657373",
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3656:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ee4a6a82d9278f95be513daf11d69bad25e4ed692a006dbaab59533918f05b7",
                                "typeString": "literal_string \"Invalid WETH address\""
                              },
                              "value": "Invalid WETH address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ee4a6a82d9278f95be513daf11d69bad25e4ed692a006dbaab59533918f05b7",
                                "typeString": "literal_string \"Invalid WETH address\""
                              }
                            ],
                            "id": 589,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3622:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3622:57:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 598,
                        "nodeType": "ExpressionStatement",
                        "src": "3622:57:8"
                      },
                      {
                        "expression": {
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 599,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "3698:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 601,
                                "name": "_priceFeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 570,
                                "src": "3732:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 600,
                              "name": "AggregatorV3Interface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "3710:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$113_$",
                                "typeString": "type(contract AggregatorV3Interface)"
                              }
                            },
                            "id": 602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3710:33:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "src": "3698:45:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 604,
                        "nodeType": "ExpressionStatement",
                        "src": "3698:45:8"
                      },
                      {
                        "expression": {
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 605,
                            "name": "wethToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "3753:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$339",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 607,
                                "name": "_wethToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 572,
                                "src": "3772:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 606,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "3765:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$339_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3765:18:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$339",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3753:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$339",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 610,
                        "nodeType": "ExpressionStatement",
                        "src": "3753:30:8"
                      },
                      {
                        "expression": {
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 611,
                            "name": "lastAutomationTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "3793:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 612,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3814:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3820:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3814:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3793:36:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 615,
                        "nodeType": "ExpressionStatement",
                        "src": "3793:36:8"
                      }
                    ]
                  },
                  "id": 617,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 575,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3527:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3531:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3527:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 577,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 574,
                        "name": "Ownable",
                        "nameLocations": [
                          "3519:7:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 261,
                        "src": "3519:7:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3519:19:8"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 570,
                        "mutability": "mutable",
                        "name": "_priceFeed",
                        "nameLocation": "3487:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 617,
                        "src": "3479:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 569,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3479:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 572,
                        "mutability": "mutable",
                        "name": "_wethToken",
                        "nameLocation": "3507:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 617,
                        "src": "3499:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3499:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3478:40:8"
                  },
                  "returnParameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3539:0:8"
                  },
                  "scope": 1998,
                  "src": "3467:369:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 681,
                    "nodeType": "Block",
                    "src": "4047:575:8",
                    "statements": [
                      {
                        "assignments": [
                          624,
                          626,
                          null,
                          628,
                          630
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 624,
                            "mutability": "mutable",
                            "name": "roundId",
                            "nameLocation": "4078:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 681,
                            "src": "4071:14:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 623,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "4071:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 626,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "4106:5:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 681,
                            "src": "4099:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 625,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4099:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          {
                            "constant": false,
                            "id": 628,
                            "mutability": "mutable",
                            "name": "updatedAt",
                            "nameLocation": "4147:9:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 681,
                            "src": "4139:17:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 627,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4139:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 630,
                            "mutability": "mutable",
                            "name": "answeredInRound",
                            "nameLocation": "4177:15:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 681,
                            "src": "4170:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            },
                            "typeName": {
                              "id": 629,
                              "name": "uint80",
                              "nodeType": "ElementaryTypeName",
                              "src": "4170:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 634,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 631,
                              "name": "priceFeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "4205:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$113",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4215:15:8",
                            "memberName": "latestRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 112,
                            "src": "4205:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4205:27:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4057:175:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 636,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 626,
                                "src": "4259:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4267:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4259:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642070726963652066656564",
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4270:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
                                "typeString": "literal_string \"Invalid price feed\""
                              },
                              "value": "Invalid price feed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
                                "typeString": "literal_string \"Invalid price feed\""
                              }
                            ],
                            "id": 635,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4251:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4251:40:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 641,
                        "nodeType": "ExpressionStatement",
                        "src": "4251:40:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 643,
                                "name": "updatedAt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 628,
                                "src": "4309:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4321:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4309:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526f756e64206e6f7420636f6d706c657465",
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4324:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                                "typeString": "literal_string \"Round not complete\""
                              },
                              "value": "Round not complete"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                                "typeString": "literal_string \"Round not complete\""
                              }
                            ],
                            "id": 642,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4301:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4301:44:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 648,
                        "nodeType": "ExpressionStatement",
                        "src": "4301:44:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 650,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4363:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 651,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4369:9:8",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4363:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 652,
                                  "name": "updatedAt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 628,
                                  "src": "4381:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4363:27:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 654,
                                "name": "PRICE_STALENESS_THRESHOLD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 477,
                                "src": "4394:25:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4363:56:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206461746120746f6f206f6c64",
                              "id": 656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4421:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_86f0e01134207a6acb730827f425f2f40c8e7494530e4b135179b070abef2330",
                                "typeString": "literal_string \"Price data too old\""
                              },
                              "value": "Price data too old"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_86f0e01134207a6acb730827f425f2f40c8e7494530e4b135179b070abef2330",
                                "typeString": "literal_string \"Price data too old\""
                              }
                            ],
                            "id": 649,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4355:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4355:87:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 658,
                        "nodeType": "ExpressionStatement",
                        "src": "4355:87:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint80",
                                "typeString": "uint80"
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 660,
                                "name": "answeredInRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 630,
                                "src": "4460:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 661,
                                "name": "roundId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 624,
                                "src": "4479:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "src": "4460:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616c652070726963652064617461",
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4488:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2ca421925c4941a3397518dad13c20d3418010081598deda6cc2f02a05282c33",
                                "typeString": "literal_string \"Stale price data\""
                              },
                              "value": "Stale price data"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2ca421925c4941a3397518dad13c20d3418010081598deda6cc2f02a05282c33",
                                "typeString": "literal_string \"Stale price data\""
                              }
                            ],
                            "id": 659,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4452:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4452:55:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 665,
                        "nodeType": "ExpressionStatement",
                        "src": "4452:55:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 669,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 626,
                                    "src": "4533:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4525:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 667,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4525:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4525:14:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 671,
                                "name": "MAX_PRICE_USD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 468,
                                "src": "4543:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4525:31:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "507269636520746f6f2068696768",
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4558:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2bf82483a59b135c8b0ec563103e94de46ba0ad2b430936d2c2dc7c7a432bbfc",
                                "typeString": "literal_string \"Price too high\""
                              },
                              "value": "Price too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2bf82483a59b135c8b0ec563103e94de46ba0ad2b430936d2c2dc7c7a432bbfc",
                                "typeString": "literal_string \"Price too high\""
                              }
                            ],
                            "id": 666,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4517:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4517:58:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 675,
                        "nodeType": "ExpressionStatement",
                        "src": "4517:58:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 678,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "4609:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4601:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 676,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4601:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4601:14:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 622,
                        "id": 680,
                        "nodeType": "Return",
                        "src": "4594:21:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 618,
                    "nodeType": "StructuredDocumentation",
                    "src": "3846:140:8",
                    "text": " @notice Get the latest ETH/USD price from Chainlink with staleness checks\n @return The latest price with 8 decimals"
                  },
                  "functionSelector": "8e15f473",
                  "id": 682,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLatestPrice",
                  "nameLocation": "4000:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 619,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4014:2:8"
                  },
                  "returnParameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "4038:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4038:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4037:9:8"
                  },
                  "scope": 1998,
                  "src": "3991:631:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 719,
                    "nodeType": "Block",
                    "src": "4865:329:8",
                    "statements": [
                      {
                        "assignments": [
                          689
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 689,
                            "mutability": "mutable",
                            "name": "ethPrice",
                            "nameLocation": "4883:8:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 719,
                            "src": "4875:16:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 688,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4875:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 692,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 690,
                            "name": "getLatestPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "4894:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4894:16:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4875:35:8"
                      },
                      {
                        "assignments": [
                          694
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 694,
                            "mutability": "mutable",
                            "name": "numerator",
                            "nameLocation": "4968:9:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 719,
                            "src": "4960:17:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 693,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4960:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 698,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 695,
                            "name": "SUBSCRIPTION_COST_USD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "4980:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5004:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "4980:28:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4960:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 700,
                                  "name": "numerator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 694,
                                  "src": "5026:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 701,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5038:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "5026:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 703,
                                "name": "SUBSCRIPTION_COST_USD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 463,
                                "src": "5046:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5026:41:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f766572666c6f77206465746563746564",
                              "id": 705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5069:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51",
                                "typeString": "literal_string \"Overflow detected\""
                              },
                              "value": "Overflow detected"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8d9ea75a1bd49f1d737179fafe67bc7f7aaa3016ffd4e24cada770cfde9d2f51",
                                "typeString": "literal_string \"Overflow detected\""
                              }
                            ],
                            "id": 699,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5018:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5018:71:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 707,
                        "nodeType": "ExpressionStatement",
                        "src": "5018:71:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 709,
                                "name": "ethPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 689,
                                "src": "5107:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5118:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5107:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420455448207072696365",
                              "id": 712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5121:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff",
                                "typeString": "literal_string \"Invalid ETH price\""
                              },
                              "value": "Invalid ETH price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff",
                                "typeString": "literal_string \"Invalid ETH price\""
                              }
                            ],
                            "id": 708,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5099:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5099:42:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 714,
                        "nodeType": "ExpressionStatement",
                        "src": "5099:42:8"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 715,
                            "name": "numerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "5167:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 716,
                            "name": "ethPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 689,
                            "src": "5179:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5167:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 687,
                        "id": 718,
                        "nodeType": "Return",
                        "src": "5160:27:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 683,
                    "nodeType": "StructuredDocumentation",
                    "src": "4632:165:8",
                    "text": " @notice Calculate the required WETH amount based on USD price with overflow protection\n @return The amount of WETH required with 18 decimals"
                  },
                  "functionSelector": "13621a21",
                  "id": 720,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRequiredWETHAmount",
                  "nameLocation": "4811:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 684,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4832:2:8"
                  },
                  "returnParameters": {
                    "id": 687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 720,
                        "src": "4856:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4856:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4855:9:8"
                  },
                  "scope": 1998,
                  "src": "4802:392:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 757,
                    "nodeType": "Block",
                    "src": "5337:227:8",
                    "statements": [
                      {
                        "condition": {
                          "id": 729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5351:20:8",
                          "subExpression": {
                            "baseExpression": {
                              "id": 726,
                              "name": "isUserTracked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "5352:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 728,
                            "indexExpression": {
                              "id": 727,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 723,
                              "src": "5366:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5352:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 756,
                        "nodeType": "IfStatement",
                        "src": "5347:211:8",
                        "trueBody": {
                          "id": 755,
                          "nodeType": "Block",
                          "src": "5373:185:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 733,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 723,
                                    "src": "5404:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 730,
                                    "name": "activeUsers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 496,
                                    "src": "5387:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5399:4:8",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "5387:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5387:22:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 735,
                              "nodeType": "ExpressionStatement",
                              "src": "5387:22:8"
                            },
                            {
                              "expression": {
                                "id": 743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 736,
                                    "name": "userIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 500,
                                    "src": "5423:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 738,
                                  "indexExpression": {
                                    "id": 737,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 723,
                                    "src": "5433:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5423:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 739,
                                      "name": "activeUsers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 496,
                                      "src": "5441:11:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 740,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5453:6:8",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "5441:18:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 741,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5462:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "5441:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5423:40:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 744,
                              "nodeType": "ExpressionStatement",
                              "src": "5423:40:8"
                            },
                            {
                              "expression": {
                                "id": 749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 745,
                                    "name": "isUserTracked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 504,
                                    "src": "5477:13:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 747,
                                  "indexExpression": {
                                    "id": 746,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 723,
                                    "src": "5491:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5477:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 748,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5499:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5477:26:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 750,
                              "nodeType": "ExpressionStatement",
                              "src": "5477:26:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 752,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 723,
                                    "src": "5542:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 751,
                                  "name": "UserAddedToTracking",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 556,
                                  "src": "5522:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5522:25:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 754,
                              "nodeType": "EmitStatement",
                              "src": "5517:30:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 721,
                    "nodeType": "StructuredDocumentation",
                    "src": "5204:87:8",
                    "text": " @notice Add user to tracking array\n @param user Address to add"
                  },
                  "id": 758,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addUser",
                  "nameLocation": "5305:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "5322:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 758,
                        "src": "5314:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5314:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5313:14:8"
                  },
                  "returnParameters": {
                    "id": 725,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5337:0:8"
                  },
                  "scope": 1998,
                  "src": "5296:268:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 825,
                    "nodeType": "Block",
                    "src": "5718:538:8",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 764,
                            "name": "isUserTracked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "5732:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 766,
                          "indexExpression": {
                            "id": 765,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "5746:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5732:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 824,
                        "nodeType": "IfStatement",
                        "src": "5728:522:8",
                        "trueBody": {
                          "id": 823,
                          "nodeType": "Block",
                          "src": "5753:497:8",
                          "statements": [
                            {
                              "assignments": [
                                768
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 768,
                                  "mutability": "mutable",
                                  "name": "index",
                                  "nameLocation": "5775:5:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 823,
                                  "src": "5767:13:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 767,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5767:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 772,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 769,
                                  "name": "userIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "5783:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 771,
                                "indexExpression": {
                                  "id": 770,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "5793:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5783:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5767:31:8"
                            },
                            {
                              "assignments": [
                                774
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 774,
                                  "mutability": "mutable",
                                  "name": "lastIndex",
                                  "nameLocation": "5820:9:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 823,
                                  "src": "5812:17:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 773,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5812:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 779,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 775,
                                    "name": "activeUsers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 496,
                                    "src": "5832:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 776,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5844:6:8",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "5832:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 777,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5853:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5832:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5812:42:8"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 780,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 768,
                                  "src": "5885:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 781,
                                  "name": "lastIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 774,
                                  "src": "5894:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5885:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 802,
                              "nodeType": "IfStatement",
                              "src": "5881:190:8",
                              "trueBody": {
                                "id": 801,
                                "nodeType": "Block",
                                "src": "5905:166:8",
                                "statements": [
                                  {
                                    "assignments": [
                                      784
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 784,
                                        "mutability": "mutable",
                                        "name": "lastUser",
                                        "nameLocation": "5931:8:8",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 801,
                                        "src": "5923:16:8",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "typeName": {
                                          "id": 783,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5923:7:8",
                                          "stateMutability": "nonpayable",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 788,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 785,
                                        "name": "activeUsers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 496,
                                        "src": "5942:11:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 787,
                                      "indexExpression": {
                                        "id": 786,
                                        "name": "lastIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 774,
                                        "src": "5954:9:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5942:22:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5923:41:8"
                                  },
                                  {
                                    "expression": {
                                      "id": 793,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 789,
                                          "name": "activeUsers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 496,
                                          "src": "5982:11:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 791,
                                        "indexExpression": {
                                          "id": 790,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 768,
                                          "src": "5994:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "5982:18:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 792,
                                        "name": "lastUser",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 784,
                                        "src": "6003:8:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "5982:29:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 794,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5982:29:8"
                                  },
                                  {
                                    "expression": {
                                      "id": 799,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 795,
                                          "name": "userIndex",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 500,
                                          "src": "6029:9:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 797,
                                        "indexExpression": {
                                          "id": 796,
                                          "name": "lastUser",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 784,
                                          "src": "6039:8:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "6029:19:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 798,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 768,
                                        "src": "6051:5:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6029:27:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 800,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6029:27:8"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 803,
                                    "name": "activeUsers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 496,
                                    "src": "6097:11:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 805,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6109:3:8",
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "src": "6097:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer)"
                                  }
                                },
                                "id": 806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6097:17:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 807,
                              "nodeType": "ExpressionStatement",
                              "src": "6097:17:8"
                            },
                            {
                              "expression": {
                                "id": 811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "6128:22:8",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 808,
                                    "name": "userIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 500,
                                    "src": "6135:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 810,
                                  "indexExpression": {
                                    "id": 809,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 761,
                                    "src": "6145:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6135:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 812,
                              "nodeType": "ExpressionStatement",
                              "src": "6128:22:8"
                            },
                            {
                              "expression": {
                                "id": 817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 813,
                                    "name": "isUserTracked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 504,
                                    "src": "6164:13:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 815,
                                  "indexExpression": {
                                    "id": 814,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 761,
                                    "src": "6178:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6164:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6186:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6164:27:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 818,
                              "nodeType": "ExpressionStatement",
                              "src": "6164:27:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 820,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 761,
                                    "src": "6234:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 819,
                                  "name": "UserRemovedFromTracking",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 560,
                                  "src": "6210:23:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6210:29:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 822,
                              "nodeType": "EmitStatement",
                              "src": "6205:34:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 759,
                    "nodeType": "StructuredDocumentation",
                    "src": "5574:95:8",
                    "text": " @notice Remove user from tracking array\n @param user Address to remove"
                  },
                  "id": 826,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_removeUser",
                  "nameLocation": "5683:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 762,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 761,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "5703:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 826,
                        "src": "5695:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 760,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5695:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5694:14:8"
                  },
                  "returnParameters": {
                    "id": 763,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5718:0:8"
                  },
                  "scope": 1998,
                  "src": "5674:582:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 949,
                    "nodeType": "Block",
                    "src": "6396:1568:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "6414:22:8",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 833,
                                  "name": "whitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 508,
                                  "src": "6415:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 836,
                                "indexExpression": {
                                  "expression": {
                                    "id": 834,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6425:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 835,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6429:6:8",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6425:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6415:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "557365722069732077686974656c6973746564",
                              "id": 838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6438:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5866750b7cc7b2dcf4276a7cfb61601b1cf9c0f2ceb034fcfac268653febd825",
                                "typeString": "literal_string \"User is whitelisted\""
                              },
                              "value": "User is whitelisted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5866750b7cc7b2dcf4276a7cfb61601b1cf9c0f2ceb034fcfac268653febd825",
                                "typeString": "literal_string \"User is whitelisted\""
                              }
                            ],
                            "id": 832,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6406:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6406:54:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 840,
                        "nodeType": "ExpressionStatement",
                        "src": "6406:54:8"
                      },
                      {
                        "condition": {
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6543:35:8",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 841,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 493,
                                "src": "6544:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                  "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                                }
                              },
                              "id": 844,
                              "indexExpression": {
                                "expression": {
                                  "id": 842,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6558:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6562:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6558:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6544:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage",
                                "typeString": "struct TomasSubscription.Subscription storage ref"
                              }
                            },
                            "id": 845,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6570:8:8",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 483,
                            "src": "6544:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 856,
                        "nodeType": "IfStatement",
                        "src": "6539:141:8",
                        "trueBody": {
                          "id": 855,
                          "nodeType": "Block",
                          "src": "6580:100:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 851,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 848,
                                        "name": "activeUsers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 496,
                                        "src": "6602:11:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 849,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6614:6:8",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "6602:18:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "id": 850,
                                      "name": "MAX_USERS_PER_UPKEEP",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 568,
                                      "src": "6623:20:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6602:41:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4d6178696d756d2075736572732072656163686564",
                                    "id": 852,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6645:23:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c3d70cb264380c2b9b681a6bbb28d26c7905513bced9ebc8bfaa5a9003693cc5",
                                      "typeString": "literal_string \"Maximum users reached\""
                                    },
                                    "value": "Maximum users reached"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c3d70cb264380c2b9b681a6bbb28d26c7905513bced9ebc8bfaa5a9003693cc5",
                                      "typeString": "literal_string \"Maximum users reached\""
                                    }
                                  ],
                                  "id": 847,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "6594:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6594:75:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 854,
                              "nodeType": "ExpressionStatement",
                              "src": "6594:75:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          858
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 858,
                            "mutability": "mutable",
                            "name": "requiredAmount",
                            "nameLocation": "6706:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 949,
                            "src": "6698:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 857,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6698:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 861,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 859,
                            "name": "getRequiredWETHAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "6723:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6723:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6698:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 863,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6764:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6768:5:8",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6764:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 865,
                                "name": "requiredAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 858,
                                "src": "6777:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6764:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e74207061796d656e74",
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6793:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
                                "typeString": "literal_string \"Insufficient payment\""
                              },
                              "value": "Insufficient payment"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
                                "typeString": "literal_string \"Insufficient payment\""
                              }
                            ],
                            "id": 862,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6756:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6756:60:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 869,
                        "nodeType": "ExpressionStatement",
                        "src": "6756:60:8"
                      },
                      {
                        "assignments": [
                          871
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 871,
                            "mutability": "mutable",
                            "name": "refundAmount",
                            "nameLocation": "6878:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 949,
                            "src": "6870:20:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 870,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6870:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 873,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6893:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6870:24:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 874,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6908:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6912:5:8",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "6908:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 876,
                            "name": "requiredAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 858,
                            "src": "6920:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6908:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 886,
                        "nodeType": "IfStatement",
                        "src": "6904:98:8",
                        "trueBody": {
                          "id": 885,
                          "nodeType": "Block",
                          "src": "6936:66:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 878,
                                  "name": "refundAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 871,
                                  "src": "6950:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 882,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 879,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6965:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 880,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6969:5:8",
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "6965:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 881,
                                    "name": "requiredAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 858,
                                    "src": "6977:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6965:26:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6950:41:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 884,
                              "nodeType": "ExpressionStatement",
                              "src": "6950:41:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          888
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 888,
                            "mutability": "mutable",
                            "name": "nextBilling",
                            "nameLocation": "7028:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 949,
                            "src": "7020:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 887,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7020:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 893,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 889,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7042:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7048:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7042:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 891,
                            "name": "BILLING_CYCLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "7060:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7042:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7020:53:8"
                      },
                      {
                        "expression": {
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 894,
                              "name": "subscriptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 493,
                              "src": "7160:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                              }
                            },
                            "id": 897,
                            "indexExpression": {
                              "expression": {
                                "id": 895,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7174:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7178:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7174:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7160:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$488_storage",
                              "typeString": "struct TomasSubscription.Subscription storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 899,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7237:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7243:9:8",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7237:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 901,
                                "name": "nextBilling",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 888,
                                "src": "7288:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7323:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 903,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7360:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 904,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7364:5:8",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "7360:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 905,
                                  "name": "refundAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 871,
                                  "src": "7372:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7360:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7446:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 898,
                              "name": "Subscription",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 488,
                              "src": "7188:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Subscription_$488_storage_ptr_$",
                                "typeString": "type(struct TomasSubscription.Subscription storage pointer)"
                              }
                            },
                            "id": 908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "7215:20:8",
                              "7266:20:8",
                              "7313:8:8",
                              "7341:17:8",
                              "7429:15:8"
                            ],
                            "names": [
                              "lastPaymentTimestamp",
                              "nextBillingTimestamp",
                              "isActive",
                              "lastPaymentAmount",
                              "hasWETHApproval"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "7188:316:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                              "typeString": "struct TomasSubscription.Subscription memory"
                            }
                          },
                          "src": "7160:344:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$488_storage",
                            "typeString": "struct TomasSubscription.Subscription storage ref"
                          }
                        },
                        "id": 910,
                        "nodeType": "ExpressionStatement",
                        "src": "7160:344:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 912,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7619:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7623:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7619:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 911,
                            "name": "_addUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 758,
                            "src": "7610:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7610:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 915,
                        "nodeType": "ExpressionStatement",
                        "src": "7610:20:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 917,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7671:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7675:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7671:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 919,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7683:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7687:5:8",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "7683:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 921,
                                "name": "refundAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 871,
                                "src": "7695:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7683:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 923,
                              "name": "nextBilling",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "7709:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 916,
                            "name": "SubscriptionPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "7654:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7654:67:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 925,
                        "nodeType": "EmitStatement",
                        "src": "7649:72:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 926,
                            "name": "refundAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "7800:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7815:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7800:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 948,
                        "nodeType": "IfStatement",
                        "src": "7796:162:8",
                        "trueBody": {
                          "id": 947,
                          "nodeType": "Block",
                          "src": "7818:140:8",
                          "statements": [
                            {
                              "assignments": [
                                930,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 930,
                                  "mutability": "mutable",
                                  "name": "success",
                                  "nameLocation": "7838:7:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 947,
                                  "src": "7833:12:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 929,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7833:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 941,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 939,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7897:2:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 933,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "7859:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 934,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "7863:6:8",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "7859:10:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 932,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7851:8:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_payable_$",
                                          "typeString": "type(address payable)"
                                        },
                                        "typeName": {
                                          "id": 931,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7851:8:8",
                                          "stateMutability": "payable",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 935,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7851:19:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 936,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7871:4:8",
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "7851:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 938,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 937,
                                      "name": "refundAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 871,
                                      "src": "7883:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "7851:45:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7851:49:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7832:68:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 943,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 930,
                                    "src": "7922:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "526566756e64206661696c6564",
                                    "id": 944,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7931:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e",
                                      "typeString": "literal_string \"Refund failed\""
                                    },
                                    "value": "Refund failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e",
                                      "typeString": "literal_string \"Refund failed\""
                                    }
                                  ],
                                  "id": 942,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "7914:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7914:33:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 946,
                              "nodeType": "ExpressionStatement",
                              "src": "7914:33:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 827,
                    "nodeType": "StructuredDocumentation",
                    "src": "6266:73:8",
                    "text": " @notice Pay for subscription with ETH (manual payment)"
                  },
                  "functionSelector": "6c7327a2",
                  "id": 950,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 830,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 829,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "6383:12:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 402,
                        "src": "6383:12:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6383:12:8"
                    }
                  ],
                  "name": "payWithETH",
                  "nameLocation": "6353:10:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6363:2:8"
                  },
                  "returnParameters": {
                    "id": 831,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6396:0:8"
                  },
                  "scope": 1998,
                  "src": "6344:1620:8",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1065,
                    "nodeType": "Block",
                    "src": "8113:1449:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "8131:22:8",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 957,
                                  "name": "whitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 508,
                                  "src": "8132:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 960,
                                "indexExpression": {
                                  "expression": {
                                    "id": 958,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8142:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 959,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8146:6:8",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "8142:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8132:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "557365722069732077686974656c6973746564",
                              "id": 962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8155:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5866750b7cc7b2dcf4276a7cfb61601b1cf9c0f2ceb034fcfac268653febd825",
                                "typeString": "literal_string \"User is whitelisted\""
                              },
                              "value": "User is whitelisted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5866750b7cc7b2dcf4276a7cfb61601b1cf9c0f2ceb034fcfac268653febd825",
                                "typeString": "literal_string \"User is whitelisted\""
                              }
                            ],
                            "id": 956,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8123:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8123:54:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 964,
                        "nodeType": "ExpressionStatement",
                        "src": "8123:54:8"
                      },
                      {
                        "condition": {
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8260:35:8",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 965,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 493,
                                "src": "8261:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                  "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                                }
                              },
                              "id": 968,
                              "indexExpression": {
                                "expression": {
                                  "id": 966,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8275:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8279:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8275:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8261:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage",
                                "typeString": "struct TomasSubscription.Subscription storage ref"
                              }
                            },
                            "id": 969,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8287:8:8",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 483,
                            "src": "8261:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 980,
                        "nodeType": "IfStatement",
                        "src": "8256:141:8",
                        "trueBody": {
                          "id": 979,
                          "nodeType": "Block",
                          "src": "8297:100:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 975,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 972,
                                        "name": "activeUsers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 496,
                                        "src": "8319:11:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 973,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8331:6:8",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "8319:18:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "id": 974,
                                      "name": "MAX_USERS_PER_UPKEEP",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 568,
                                      "src": "8340:20:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8319:41:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4d6178696d756d2075736572732072656163686564",
                                    "id": 976,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8362:23:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c3d70cb264380c2b9b681a6bbb28d26c7905513bced9ebc8bfaa5a9003693cc5",
                                      "typeString": "literal_string \"Maximum users reached\""
                                    },
                                    "value": "Maximum users reached"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c3d70cb264380c2b9b681a6bbb28d26c7905513bced9ebc8bfaa5a9003693cc5",
                                      "typeString": "literal_string \"Maximum users reached\""
                                    }
                                  ],
                                  "id": 971,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "8311:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 977,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8311:75:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 978,
                              "nodeType": "ExpressionStatement",
                              "src": "8311:75:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          982
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 982,
                            "mutability": "mutable",
                            "name": "requiredAmount",
                            "nameLocation": "8423:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1065,
                            "src": "8415:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 981,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8415:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 985,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 983,
                            "name": "getRequiredWETHAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "8440:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8440:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8415:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 989,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8551:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 990,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8555:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8551:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 987,
                                    "name": "wethToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 458,
                                    "src": "8531:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$339",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 988,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8541:9:8",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 296,
                                  "src": "8531:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8531:31:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 992,
                                "name": "requiredAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 982,
                                "src": "8566:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8531:49:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420574554482062616c616e6365",
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8582:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bc06614a3aa13e2413c6c9cffac61a3d079d7aa40762830e5e884fc0c8bcabd1",
                                "typeString": "literal_string \"Insufficient WETH balance\""
                              },
                              "value": "Insufficient WETH balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bc06614a3aa13e2413c6c9cffac61a3d079d7aa40762830e5e884fc0c8bcabd1",
                                "typeString": "literal_string \"Insufficient WETH balance\""
                              }
                            ],
                            "id": 986,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8523:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8523:87:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 996,
                        "nodeType": "ExpressionStatement",
                        "src": "8523:87:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1000,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8723:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1001,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8727:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8723:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1004,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "8743:4:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                          "typeString": "contract TomasSubscription"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                          "typeString": "contract TomasSubscription"
                                        }
                                      ],
                                      "id": 1003,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8735:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1002,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8735:7:8",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1005,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8735:13:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 998,
                                    "name": "wethToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 458,
                                    "src": "8703:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$339",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 999,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8713:9:8",
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 316,
                                  "src": "8703:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 1006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8703:46:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1007,
                                "name": "requiredAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 982,
                                "src": "8753:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8703:64:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5745544820617070726f76616c207265717569726564",
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8769:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca02b7f37ba5abf2ca23926b720f57e4b0e71d18759496856ee3bd1ec9b158ea",
                                "typeString": "literal_string \"WETH approval required\""
                              },
                              "value": "WETH approval required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca02b7f37ba5abf2ca23926b720f57e4b0e71d18759496856ee3bd1ec9b158ea",
                                "typeString": "literal_string \"WETH approval required\""
                              }
                            ],
                            "id": 997,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8695:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8695:99:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1011,
                        "nodeType": "ExpressionStatement",
                        "src": "8695:99:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1015,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8887:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8891:6:8",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "8887:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1019,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "8907:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                        "typeString": "contract TomasSubscription"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                        "typeString": "contract TomasSubscription"
                                      }
                                    ],
                                    "id": 1018,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8899:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1017,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8899:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8899:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1021,
                                  "name": "requiredAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 982,
                                  "src": "8914:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1013,
                                  "name": "wethToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 458,
                                  "src": "8864:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$339",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8874:12:8",
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 338,
                                "src": "8864:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8864:65:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57455448207472616e73666572206661696c6564",
                              "id": 1023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8931:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bf460de1051161cbfe65c0f89046ab0e35d951ba7cb9a573214f57a2841603c3",
                                "typeString": "literal_string \"WETH transfer failed\""
                              },
                              "value": "WETH transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bf460de1051161cbfe65c0f89046ab0e35d951ba7cb9a573214f57a2841603c3",
                                "typeString": "literal_string \"WETH transfer failed\""
                              }
                            ],
                            "id": 1012,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8856:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8856:98:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1025,
                        "nodeType": "ExpressionStatement",
                        "src": "8856:98:8"
                      },
                      {
                        "assignments": [
                          1027
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1027,
                            "mutability": "mutable",
                            "name": "nextBilling",
                            "nameLocation": "8981:11:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1065,
                            "src": "8973:19:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1026,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8973:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1032,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1028,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8995:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9001:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8995:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1030,
                            "name": "BILLING_CYCLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "9013:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8995:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8973:53:8"
                      },
                      {
                        "expression": {
                          "id": 1045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1033,
                              "name": "subscriptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 493,
                              "src": "9076:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                              }
                            },
                            "id": 1036,
                            "indexExpression": {
                              "expression": {
                                "id": 1034,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9090:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9094:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9090:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9076:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$488_storage",
                              "typeString": "struct TomasSubscription.Subscription storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1038,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9153:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9159:9:8",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9153:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1040,
                                "name": "nextBilling",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1027,
                                "src": "9204:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 1041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9239:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "id": 1042,
                                "name": "requiredAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 982,
                                "src": "9276:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 1043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9321:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 1037,
                              "name": "Subscription",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 488,
                              "src": "9104:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Subscription_$488_storage_ptr_$",
                                "typeString": "type(struct TomasSubscription.Subscription storage pointer)"
                              }
                            },
                            "id": 1044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "9131:20:8",
                              "9182:20:8",
                              "9229:8:8",
                              "9257:17:8",
                              "9304:15:8"
                            ],
                            "names": [
                              "lastPaymentTimestamp",
                              "nextBillingTimestamp",
                              "isActive",
                              "lastPaymentAmount",
                              "hasWETHApproval"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "9104:232:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                              "typeString": "struct TomasSubscription.Subscription memory"
                            }
                          },
                          "src": "9076:260:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$488_storage",
                            "typeString": "struct TomasSubscription.Subscription storage ref"
                          }
                        },
                        "id": 1046,
                        "nodeType": "ExpressionStatement",
                        "src": "9076:260:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1048,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9411:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9415:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9411:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1047,
                            "name": "_addUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 758,
                            "src": "9402:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9402:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1051,
                        "nodeType": "ExpressionStatement",
                        "src": "9402:20:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1053,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9463:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9467:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9463:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1055,
                              "name": "requiredAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 982,
                              "src": "9475:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1056,
                              "name": "nextBilling",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "9491:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1052,
                            "name": "SubscriptionPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "9446:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9446:57:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1058,
                        "nodeType": "EmitStatement",
                        "src": "9441:62:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1060,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9538:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9542:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9538:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9550:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1059,
                            "name": "WETHApprovalUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "9518:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9518:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1064,
                        "nodeType": "EmitStatement",
                        "src": "9513:42:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 951,
                    "nodeType": "StructuredDocumentation",
                    "src": "7974:79:8",
                    "text": " @notice Set up subscription with WETH for automatic payments"
                  },
                  "functionSelector": "5f5028b5",
                  "id": 1066,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 954,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 953,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "8100:12:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 402,
                        "src": "8100:12:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8100:12:8"
                    }
                  ],
                  "name": "setupWETHSubscription",
                  "nameLocation": "8067:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 952,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8088:2:8"
                  },
                  "returnParameters": {
                    "id": 955,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8113:0:8"
                  },
                  "scope": 1998,
                  "src": "8058:1504:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1128,
                    "nodeType": "Block",
                    "src": "9698:616:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1071,
                                  "name": "subscriptions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 493,
                                  "src": "9716:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                    "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                                  }
                                },
                                "id": 1074,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1072,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9730:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9734:6:8",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9730:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9716:25:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$488_storage",
                                  "typeString": "struct TomasSubscription.Subscription storage ref"
                                }
                              },
                              "id": 1075,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9742:8:8",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 483,
                              "src": "9716:34:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2061637469766520737562736372697074696f6e",
                              "id": 1076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9752:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039",
                                "typeString": "literal_string \"No active subscription\""
                              },
                              "value": "No active subscription"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039",
                                "typeString": "literal_string \"No active subscription\""
                              }
                            ],
                            "id": 1070,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9708:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9708:69:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1078,
                        "nodeType": "ExpressionStatement",
                        "src": "9708:69:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "9795:42:8",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1080,
                                    "name": "subscriptions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 493,
                                    "src": "9796:13:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                      "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                                    }
                                  },
                                  "id": 1083,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1081,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9810:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1082,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9814:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9810:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9796:25:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Subscription_$488_storage",
                                    "typeString": "struct TomasSubscription.Subscription storage ref"
                                  }
                                },
                                "id": 1084,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9822:15:8",
                                "memberName": "hasWETHApproval",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 487,
                                "src": "9796:41:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c726561647920656e61626c6564",
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9839:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a90d35c8a2e1f06c1b8fa6b076b5547e898ed404fa741816122bac048d61a28b",
                                "typeString": "literal_string \"Already enabled\""
                              },
                              "value": "Already enabled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a90d35c8a2e1f06c1b8fa6b076b5547e898ed404fa741816122bac048d61a28b",
                                "typeString": "literal_string \"Already enabled\""
                              }
                            ],
                            "id": 1079,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9787:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9787:70:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1088,
                        "nodeType": "ExpressionStatement",
                        "src": "9787:70:8"
                      },
                      {
                        "assignments": [
                          1090
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1090,
                            "mutability": "mutable",
                            "name": "requiredAmount",
                            "nameLocation": "9884:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1128,
                            "src": "9876:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1089,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9876:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1093,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1091,
                            "name": "getRequiredWETHAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "9901:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9901:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9876:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1097,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "10037:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1098,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10041:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "10037:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1101,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "10057:4:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                          "typeString": "contract TomasSubscription"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                          "typeString": "contract TomasSubscription"
                                        }
                                      ],
                                      "id": 1100,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10049:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1099,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10049:7:8",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10049:13:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1095,
                                    "name": "wethToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 458,
                                    "src": "10017:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$339",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1096,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10027:9:8",
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 316,
                                  "src": "10017:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 1103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10017:46:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1104,
                                "name": "requiredAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1090,
                                "src": "10067:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10017:64:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5745544820617070726f76616c207265717569726564",
                              "id": 1106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10083:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca02b7f37ba5abf2ca23926b720f57e4b0e71d18759496856ee3bd1ec9b158ea",
                                "typeString": "literal_string \"WETH approval required\""
                              },
                              "value": "WETH approval required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca02b7f37ba5abf2ca23926b720f57e4b0e71d18759496856ee3bd1ec9b158ea",
                                "typeString": "literal_string \"WETH approval required\""
                              }
                            ],
                            "id": 1094,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10009:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10009:99:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1108,
                        "nodeType": "ExpressionStatement",
                        "src": "10009:99:8"
                      },
                      {
                        "expression": {
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1109,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 493,
                                "src": "10127:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                  "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                                }
                              },
                              "id": 1112,
                              "indexExpression": {
                                "expression": {
                                  "id": 1110,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10141:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10145:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10141:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10127:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage",
                                "typeString": "struct TomasSubscription.Subscription storage ref"
                              }
                            },
                            "id": 1113,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10153:15:8",
                            "memberName": "hasWETHApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 487,
                            "src": "10127:41:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10171:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "10127:48:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1116,
                        "nodeType": "ExpressionStatement",
                        "src": "10127:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1118,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10194:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10198:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10194:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1117,
                            "name": "_addUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 758,
                            "src": "10185:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10185:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1121,
                        "nodeType": "ExpressionStatement",
                        "src": "10185:20:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1123,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10290:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10294:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10290:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10302:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1122,
                            "name": "WETHApprovalUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "10270:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10270:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1127,
                        "nodeType": "EmitStatement",
                        "src": "10265:42:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1067,
                    "nodeType": "StructuredDocumentation",
                    "src": "9572:83:8",
                    "text": " @notice Enable WETH automatic payments for existing subscription"
                  },
                  "functionSelector": "09612a98",
                  "id": 1129,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "enableWETHAutoPay",
                  "nameLocation": "9669:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1068,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9686:2:8"
                  },
                  "returnParameters": {
                    "id": 1069,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9698:0:8"
                  },
                  "scope": 1998,
                  "src": "9660:654:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1147,
                    "nodeType": "Block",
                    "src": "10426:119:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1133,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 493,
                                "src": "10436:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                  "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                                }
                              },
                              "id": 1136,
                              "indexExpression": {
                                "expression": {
                                  "id": 1134,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10450:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10454:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10450:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10436:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage",
                                "typeString": "struct TomasSubscription.Subscription storage ref"
                              }
                            },
                            "id": 1137,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10462:15:8",
                            "memberName": "hasWETHApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 487,
                            "src": "10436:41:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10480:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "10436:49:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1140,
                        "nodeType": "ExpressionStatement",
                        "src": "10436:49:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1142,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10520:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10524:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10520:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 1144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10532:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1141,
                            "name": "WETHApprovalUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 546,
                            "src": "10500:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10500:38:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1146,
                        "nodeType": "EmitStatement",
                        "src": "10495:43:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1130,
                    "nodeType": "StructuredDocumentation",
                    "src": "10324:58:8",
                    "text": " @notice Disable WETH automatic payments"
                  },
                  "functionSelector": "88447175",
                  "id": 1148,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "disableWETHAutoPay",
                  "nameLocation": "10396:18:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10414:2:8"
                  },
                  "returnParameters": {
                    "id": 1132,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10426:0:8"
                  },
                  "scope": 1998,
                  "src": "10387:158:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1189,
                    "nodeType": "Block",
                    "src": "10645:312:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1153,
                                  "name": "subscriptions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 493,
                                  "src": "10663:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                    "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                                  }
                                },
                                "id": 1156,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1154,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "10677:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1155,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10681:6:8",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "10677:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10663:25:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$488_storage",
                                  "typeString": "struct TomasSubscription.Subscription storage ref"
                                }
                              },
                              "id": 1157,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10689:8:8",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 483,
                              "src": "10663:34:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2061637469766520737562736372697074696f6e",
                              "id": 1158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10699:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039",
                                "typeString": "literal_string \"No active subscription\""
                              },
                              "value": "No active subscription"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3d9e29df68a32507c6ec879463eec66fa74575c4bbce962a645685aec7a31039",
                                "typeString": "literal_string \"No active subscription\""
                              }
                            ],
                            "id": 1152,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10655:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10655:69:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1160,
                        "nodeType": "ExpressionStatement",
                        "src": "10655:69:8"
                      },
                      {
                        "expression": {
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1161,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 493,
                                "src": "10743:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                  "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                                }
                              },
                              "id": 1164,
                              "indexExpression": {
                                "expression": {
                                  "id": 1162,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10757:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10761:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10757:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10743:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage",
                                "typeString": "struct TomasSubscription.Subscription storage ref"
                              }
                            },
                            "id": 1165,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10769:8:8",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 483,
                            "src": "10743:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10780:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "10743:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1168,
                        "nodeType": "ExpressionStatement",
                        "src": "10743:42:8"
                      },
                      {
                        "expression": {
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1169,
                                "name": "subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 493,
                                "src": "10795:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                  "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                                }
                              },
                              "id": 1172,
                              "indexExpression": {
                                "expression": {
                                  "id": 1170,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10809:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10813:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10809:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10795:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage",
                                "typeString": "struct TomasSubscription.Subscription storage ref"
                              }
                            },
                            "id": 1173,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10821:15:8",
                            "memberName": "hasWETHApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 487,
                            "src": "10795:41:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10839:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "10795:49:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1176,
                        "nodeType": "ExpressionStatement",
                        "src": "10795:49:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1178,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10866:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10870:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10866:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1177,
                            "name": "_removeUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 826,
                            "src": "10854:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10854:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1181,
                        "nodeType": "ExpressionStatement",
                        "src": "10854:23:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1183,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10922:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10926:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10922:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1185,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10934:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10940:9:8",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10934:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1182,
                            "name": "SubscriptionCanceled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "10901:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10901:49:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1188,
                        "nodeType": "EmitStatement",
                        "src": "10896:54:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1149,
                    "nodeType": "StructuredDocumentation",
                    "src": "10555:46:8",
                    "text": " @notice Cancel subscription"
                  },
                  "functionSelector": "24e9edb0",
                  "id": 1190,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancelSubscription",
                  "nameLocation": "10615:18:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1150,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10633:2:8"
                  },
                  "returnParameters": {
                    "id": 1151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10645:0:8"
                  },
                  "scope": 1998,
                  "src": "10606:351:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1228,
                    "nodeType": "Block",
                    "src": "11212:361:8",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 1198,
                            "name": "whitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "11226:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1200,
                          "indexExpression": {
                            "id": 1199,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1193,
                            "src": "11236:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11226:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1204,
                        "nodeType": "IfStatement",
                        "src": "11222:57:8",
                        "trueBody": {
                          "id": 1203,
                          "nodeType": "Block",
                          "src": "11243:36:8",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 1201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11264:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 1197,
                              "id": 1202,
                              "nodeType": "Return",
                              "src": "11257:11:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1207
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1207,
                            "mutability": "mutable",
                            "name": "sub",
                            "nameLocation": "11317:3:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1228,
                            "src": "11297:23:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                              "typeString": "struct TomasSubscription.Subscription"
                            },
                            "typeName": {
                              "id": 1206,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1205,
                                "name": "Subscription",
                                "nameLocations": [
                                  "11297:12:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 488,
                                "src": "11297:12:8"
                              },
                              "referencedDeclaration": 488,
                              "src": "11297:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                "typeString": "struct TomasSubscription.Subscription"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1211,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1208,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "11323:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                              "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                            }
                          },
                          "id": 1210,
                          "indexExpression": {
                            "id": 1209,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1193,
                            "src": "11337:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11323:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$488_storage",
                            "typeString": "struct TomasSubscription.Subscription storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11297:45:8"
                      },
                      {
                        "condition": {
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "11356:13:8",
                          "subExpression": {
                            "expression": {
                              "id": 1212,
                              "name": "sub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1207,
                              "src": "11357:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                                "typeString": "struct TomasSubscription.Subscription memory"
                              }
                            },
                            "id": 1213,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11361:8:8",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 483,
                            "src": "11357:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1218,
                        "nodeType": "IfStatement",
                        "src": "11352:56:8",
                        "trueBody": {
                          "id": 1217,
                          "nodeType": "Block",
                          "src": "11371:37:8",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11392:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1197,
                              "id": 1216,
                              "nodeType": "Return",
                              "src": "11385:12:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1219,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11506:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11512:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11506:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1221,
                                    "name": "sub",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1207,
                                    "src": "11526:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                                      "typeString": "struct TomasSubscription.Subscription memory"
                                    }
                                  },
                                  "id": 1222,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11530:20:8",
                                  "memberName": "nextBillingTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 481,
                                  "src": "11526:24:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1223,
                                  "name": "GRACE_PERIOD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 474,
                                  "src": "11553:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11526:39:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1225,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11525:41:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11506:60:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1197,
                        "id": 1227,
                        "nodeType": "Return",
                        "src": "11499:67:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1191,
                    "nodeType": "StructuredDocumentation",
                    "src": "10967:166:8",
                    "text": " @notice Check if user has active subscription\n @param user Address to check\n @return True if user has active subscription (not expired)"
                  },
                  "functionSelector": "bebe4a57",
                  "id": 1229,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasActiveSubscription",
                  "nameLocation": "11147:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "11177:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "11169:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11169:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11168:14:8"
                  },
                  "returnParameters": {
                    "id": 1197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1196,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "11206:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1195,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11206:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11205:6:8"
                  },
                  "scope": 1998,
                  "src": "11138:435:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1261,
                    "nodeType": "Block",
                    "src": "11799:224:8",
                    "statements": [
                      {
                        "assignments": [
                          1239
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1239,
                            "mutability": "mutable",
                            "name": "sub",
                            "nameLocation": "11829:3:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1261,
                            "src": "11809:23:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                              "typeString": "struct TomasSubscription.Subscription"
                            },
                            "typeName": {
                              "id": 1238,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1237,
                                "name": "Subscription",
                                "nameLocations": [
                                  "11809:12:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 488,
                                "src": "11809:12:8"
                              },
                              "referencedDeclaration": 488,
                              "src": "11809:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                "typeString": "struct TomasSubscription.Subscription"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1243,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1240,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "11835:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                              "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                            }
                          },
                          "id": 1242,
                          "indexExpression": {
                            "id": 1241,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1232,
                            "src": "11849:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11835:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$488_storage",
                            "typeString": "struct TomasSubscription.Subscription storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11809:45:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "11877:13:8",
                            "subExpression": {
                              "expression": {
                                "id": 1244,
                                "name": "sub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1239,
                                "src": "11878:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                                  "typeString": "struct TomasSubscription.Subscription memory"
                                }
                              },
                              "id": 1245,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11882:8:8",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 483,
                              "src": "11878:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1247,
                              "name": "whitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "11894:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1249,
                            "indexExpression": {
                              "id": 1248,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1232,
                              "src": "11904:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11894:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11877:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1254,
                        "nodeType": "IfStatement",
                        "src": "11873:75:8",
                        "trueBody": {
                          "id": 1253,
                          "nodeType": "Block",
                          "src": "11911:37:8",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11932:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1236,
                              "id": 1252,
                              "nodeType": "Return",
                              "src": "11925:12:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1255,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11973:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11979:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11973:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 1257,
                              "name": "sub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1239,
                              "src": "11992:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                                "typeString": "struct TomasSubscription.Subscription memory"
                              }
                            },
                            "id": 1258,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11996:20:8",
                            "memberName": "nextBillingTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 481,
                            "src": "11992:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11973:43:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1236,
                        "id": 1260,
                        "nodeType": "Return",
                        "src": "11966:50:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1230,
                    "nodeType": "StructuredDocumentation",
                    "src": "11583:148:8",
                    "text": " @notice Check if user's subscription is due for payment\n @param user Address to check\n @return True if payment is due"
                  },
                  "functionSelector": "97ad7e02",
                  "id": 1262,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isPaymentDue",
                  "nameLocation": "11745:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1233,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1232,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "11766:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1262,
                        "src": "11758:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11758:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11757:14:8"
                  },
                  "returnParameters": {
                    "id": 1236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1235,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1262,
                        "src": "11793:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11793:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11792:6:8"
                  },
                  "scope": 1998,
                  "src": "11736:287:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1297,
                    "nodeType": "Block",
                    "src": "12261:240:8",
                    "statements": [
                      {
                        "assignments": [
                          1272
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1272,
                            "mutability": "mutable",
                            "name": "sub",
                            "nameLocation": "12291:3:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1297,
                            "src": "12271:23:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                              "typeString": "struct TomasSubscription.Subscription"
                            },
                            "typeName": {
                              "id": 1271,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1270,
                                "name": "Subscription",
                                "nameLocations": [
                                  "12271:12:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 488,
                                "src": "12271:12:8"
                              },
                              "referencedDeclaration": 488,
                              "src": "12271:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                "typeString": "struct TomasSubscription.Subscription"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1276,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1273,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "12297:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                              "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                            }
                          },
                          "id": 1275,
                          "indexExpression": {
                            "id": 1274,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "12311:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12297:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$488_storage",
                            "typeString": "struct TomasSubscription.Subscription storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12271:45:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "12339:13:8",
                            "subExpression": {
                              "expression": {
                                "id": 1277,
                                "name": "sub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1272,
                                "src": "12340:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                                  "typeString": "struct TomasSubscription.Subscription memory"
                                }
                              },
                              "id": 1278,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12344:8:8",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 483,
                              "src": "12340:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1280,
                              "name": "whitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "12356:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1282,
                            "indexExpression": {
                              "id": 1281,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "12366:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12356:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "12339:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1287,
                        "nodeType": "IfStatement",
                        "src": "12335:75:8",
                        "trueBody": {
                          "id": 1286,
                          "nodeType": "Block",
                          "src": "12373:37:8",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12394:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1269,
                              "id": 1285,
                              "nodeType": "Return",
                              "src": "12387:12:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1288,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12435:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12441:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12435:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1290,
                                    "name": "sub",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1272,
                                    "src": "12454:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                                      "typeString": "struct TomasSubscription.Subscription memory"
                                    }
                                  },
                                  "id": 1291,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12458:20:8",
                                  "memberName": "nextBillingTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 481,
                                  "src": "12454:24:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1292,
                                  "name": "GRACE_PERIOD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 474,
                                  "src": "12481:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12454:39:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1294,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12453:41:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12435:59:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1269,
                        "id": 1296,
                        "nodeType": "Return",
                        "src": "12428:66:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1263,
                    "nodeType": "StructuredDocumentation",
                    "src": "12033:151:8",
                    "text": " @notice Check if user's subscription has expired\n @param user Address to check\n @return True if subscription has expired"
                  },
                  "functionSelector": "3afb0551",
                  "id": 1298,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isSubscriptionExpired",
                  "nameLocation": "12198:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1265,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "12228:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1298,
                        "src": "12220:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1264,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12220:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12219:14:8"
                  },
                  "returnParameters": {
                    "id": 1269,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1268,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1298,
                        "src": "12255:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1267,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12255:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12254:6:8"
                  },
                  "scope": 1998,
                  "src": "12189:312:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1348,
                    "nodeType": "Block",
                    "src": "13346:361:8",
                    "statements": [
                      {
                        "assignments": [
                          1322
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1322,
                            "mutability": "mutable",
                            "name": "sub",
                            "nameLocation": "13376:3:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1348,
                            "src": "13356:23:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                              "typeString": "struct TomasSubscription.Subscription"
                            },
                            "typeName": {
                              "id": 1321,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1320,
                                "name": "Subscription",
                                "nameLocations": [
                                  "13356:12:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 488,
                                "src": "13356:12:8"
                              },
                              "referencedDeclaration": 488,
                              "src": "13356:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                "typeString": "struct TomasSubscription.Subscription"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1326,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1323,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "13382:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                              "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                            }
                          },
                          "id": 1325,
                          "indexExpression": {
                            "id": 1324,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1301,
                            "src": "13396:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13382:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$488_storage",
                            "typeString": "struct TomasSubscription.Subscription storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13356:45:8"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 1327,
                                "name": "sub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1322,
                                "src": "13432:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                                  "typeString": "struct TomasSubscription.Subscription memory"
                                }
                              },
                              "id": 1328,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13436:20:8",
                              "memberName": "lastPaymentTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 479,
                              "src": "13432:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1329,
                                "name": "sub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1322,
                                "src": "13470:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                                  "typeString": "struct TomasSubscription.Subscription memory"
                                }
                              },
                              "id": 1330,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13474:20:8",
                              "memberName": "nextBillingTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 481,
                              "src": "13470:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1331,
                                "name": "sub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1322,
                                "src": "13508:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                                  "typeString": "struct TomasSubscription.Subscription memory"
                                }
                              },
                              "id": 1332,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13512:8:8",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 483,
                              "src": "13508:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 1333,
                                "name": "sub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1322,
                                "src": "13534:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                                  "typeString": "struct TomasSubscription.Subscription memory"
                                }
                              },
                              "id": 1334,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13538:17:8",
                              "memberName": "lastPaymentAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 485,
                              "src": "13534:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1335,
                                "name": "whitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 508,
                                "src": "13569:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1337,
                              "indexExpression": {
                                "id": 1336,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1301,
                                "src": "13579:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13569:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1339,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1301,
                                  "src": "13611:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1338,
                                "name": "isPaymentDue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1262,
                                "src": "13598:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 1340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13598:18:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1342,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1301,
                                  "src": "13652:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1341,
                                "name": "isSubscriptionExpired",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1298,
                                "src": "13630:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 1343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13630:27:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 1344,
                                "name": "sub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1322,
                                "src": "13671:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$488_memory_ptr",
                                  "typeString": "struct TomasSubscription.Subscription memory"
                                }
                              },
                              "id": 1345,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13675:15:8",
                              "memberName": "hasWETHApproval",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 487,
                              "src": "13671:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1346,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13418:282:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_bool_$_t_bool_$_t_bool_$_t_bool_$",
                            "typeString": "tuple(uint256,uint256,bool,uint256,bool,bool,bool,bool)"
                          }
                        },
                        "functionReturnParameters": 1319,
                        "id": 1347,
                        "nodeType": "Return",
                        "src": "13411:289:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1299,
                    "nodeType": "StructuredDocumentation",
                    "src": "12511:538:8",
                    "text": " @notice Get subscription details for a user\n @param user Address to check\n @return lastPayment When the last payment was made\n @return nextBilling When next payment is due\n @return isActive If subscription is currently active\n @return lastAmount The last payment amount\n @return isWhitelisted If user is whitelisted\n @return paymentDue If payment is currently due\n @return hasExpired If subscription has expired\n @return hasWETHApproval If user has enabled auto-pay"
                  },
                  "functionSelector": "d474f84f",
                  "id": 1349,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSubscriptionDetails",
                  "nameLocation": "13063:22:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1301,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "13094:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "13086:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13086:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13085:14:8"
                  },
                  "returnParameters": {
                    "id": 1319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1304,
                        "mutability": "mutable",
                        "name": "lastPayment",
                        "nameLocation": "13140:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "13132:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1303,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13132:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1306,
                        "mutability": "mutable",
                        "name": "nextBilling",
                        "nameLocation": "13169:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "13161:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1305,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13161:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1308,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "13195:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "13190:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1307,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13190:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1310,
                        "mutability": "mutable",
                        "name": "lastAmount",
                        "nameLocation": "13221:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "13213:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1309,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13213:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1312,
                        "mutability": "mutable",
                        "name": "isWhitelisted",
                        "nameLocation": "13246:13:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "13241:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1311,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13241:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1314,
                        "mutability": "mutable",
                        "name": "paymentDue",
                        "nameLocation": "13274:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "13269:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1313,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13269:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1316,
                        "mutability": "mutable",
                        "name": "hasExpired",
                        "nameLocation": "13299:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "13294:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1315,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13294:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1318,
                        "mutability": "mutable",
                        "name": "hasWETHApproval",
                        "nameLocation": "13324:15:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "13319:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1317,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13319:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13122:223:8"
                  },
                  "scope": 1998,
                  "src": "13054:653:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1377,
                    "nodeType": "Block",
                    "src": "13970:234:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1359,
                              "name": "whitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "13980:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1361,
                            "indexExpression": {
                              "id": 1360,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1352,
                              "src": "13990:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13980:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1362,
                            "name": "isWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "13998:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13980:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1364,
                        "nodeType": "ExpressionStatement",
                        "src": "13980:31:8"
                      },
                      {
                        "condition": {
                          "id": 1365,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "14081:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1371,
                        "nodeType": "IfStatement",
                        "src": "14077:61:8",
                        "trueBody": {
                          "id": 1370,
                          "nodeType": "Block",
                          "src": "14096:42:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1367,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1352,
                                    "src": "14122:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1366,
                                  "name": "_removeUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 826,
                                  "src": "14110:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 1368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14110:17:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1369,
                              "nodeType": "ExpressionStatement",
                              "src": "14110:17:8"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1373,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1352,
                              "src": "14177:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1374,
                              "name": "isWhitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "14183:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1372,
                            "name": "UserWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "14161:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14161:36:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1376,
                        "nodeType": "EmitStatement",
                        "src": "14156:41:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1350,
                    "nodeType": "StructuredDocumentation",
                    "src": "13717:173:8",
                    "text": " @notice Add or remove user from whitelist (only owner)\n @param user Address to modify\n @param isWhitelisted True to whitelist, false to remove"
                  },
                  "functionSelector": "53d6fd59",
                  "id": 1378,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1357,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1356,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "13960:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 172,
                        "src": "13960:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13960:9:8"
                    }
                  ],
                  "name": "setWhitelist",
                  "nameLocation": "13904:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1352,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "13925:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1378,
                        "src": "13917:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13917:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1354,
                        "mutability": "mutable",
                        "name": "isWhitelisted",
                        "nameLocation": "13936:13:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1378,
                        "src": "13931:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1353,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13931:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13916:34:8"
                  },
                  "returnParameters": {
                    "id": 1358,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13970:0:8"
                  },
                  "scope": 1998,
                  "src": "13895:309:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1426,
                    "nodeType": "Block",
                    "src": "14489:290:8",
                    "statements": [
                      {
                        "body": {
                          "id": 1424,
                          "nodeType": "Block",
                          "src": "14542:231:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 1406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1400,
                                    "name": "whitelist",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 508,
                                    "src": "14556:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 1404,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1401,
                                      "name": "users",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1382,
                                      "src": "14566:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1403,
                                    "indexExpression": {
                                      "id": 1402,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1390,
                                      "src": "14572:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14566:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14556:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1405,
                                  "name": "isWhitelisted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1384,
                                  "src": "14578:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "14556:35:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1407,
                              "nodeType": "ExpressionStatement",
                              "src": "14556:35:8"
                            },
                            {
                              "condition": {
                                "id": 1408,
                                "name": "isWhitelisted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1384,
                                "src": "14622:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1416,
                              "nodeType": "IfStatement",
                              "src": "14618:73:8",
                              "trueBody": {
                                "id": 1415,
                                "nodeType": "Block",
                                "src": "14637:54:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1410,
                                            "name": "users",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1382,
                                            "src": "14667:5:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                              "typeString": "address[] calldata"
                                            }
                                          },
                                          "id": 1412,
                                          "indexExpression": {
                                            "id": 1411,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1390,
                                            "src": "14673:1:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "14667:8:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1409,
                                        "name": "_removeUser",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 826,
                                        "src": "14655:11:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function (address)"
                                        }
                                      },
                                      "id": 1413,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14655:21:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1414,
                                    "nodeType": "ExpressionStatement",
                                    "src": "14655:21:8"
                                  }
                                ]
                              }
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1418,
                                      "name": "users",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1382,
                                      "src": "14738:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1420,
                                    "indexExpression": {
                                      "id": 1419,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1390,
                                      "src": "14744:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14738:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1421,
                                    "name": "isWhitelisted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1384,
                                    "src": "14748:13:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 1417,
                                  "name": "UserWhitelisted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 534,
                                  "src": "14722:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 1422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14722:40:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1423,
                              "nodeType": "EmitStatement",
                              "src": "14717:45:8"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1393,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1390,
                            "src": "14519:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1394,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1382,
                              "src": "14523:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 1395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14529:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14523:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14519:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1425,
                        "initializationExpression": {
                          "assignments": [
                            1390
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1390,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "14512:1:8",
                              "nodeType": "VariableDeclaration",
                              "scope": 1425,
                              "src": "14504:9:8",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1389,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14504:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1392,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14516:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14504:13:8"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "14537:3:8",
                            "subExpression": {
                              "id": 1397,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1390,
                              "src": "14537:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1399,
                          "nodeType": "ExpressionStatement",
                          "src": "14537:3:8"
                        },
                        "nodeType": "ForStatement",
                        "src": "14499:274:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1379,
                    "nodeType": "StructuredDocumentation",
                    "src": "14214:178:8",
                    "text": " @notice Batch whitelist operations (only owner)\n @param users Array of addresses to modify\n @param isWhitelisted True to whitelist, false to remove"
                  },
                  "functionSelector": "a095e8f9",
                  "id": 1427,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1387,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1386,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "14479:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 172,
                        "src": "14479:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14479:9:8"
                    }
                  ],
                  "name": "batchSetWhitelist",
                  "nameLocation": "14406:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1382,
                        "mutability": "mutable",
                        "name": "users",
                        "nameLocation": "14443:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1427,
                        "src": "14424:24:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1380,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14424:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1381,
                          "nodeType": "ArrayTypeName",
                          "src": "14424:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1384,
                        "mutability": "mutable",
                        "name": "isWhitelisted",
                        "nameLocation": "14455:13:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1427,
                        "src": "14450:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1383,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14450:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14423:46:8"
                  },
                  "returnParameters": {
                    "id": 1388,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14489:0:8"
                  },
                  "scope": 1998,
                  "src": "14397:382:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1460,
                    "nodeType": "Block",
                    "src": "14900:201:8",
                    "statements": [
                      {
                        "assignments": [
                          1434
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1434,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "14918:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1460,
                            "src": "14910:15:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1433,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14910:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1442,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1439,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14956:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                    "typeString": "contract TomasSubscription"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                    "typeString": "contract TomasSubscription"
                                  }
                                ],
                                "id": 1438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14948:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1437,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14948:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14948:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1435,
                              "name": "wethToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "14928:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$339",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14938:9:8",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 296,
                            "src": "14928:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14928:34:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14910:52:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1444,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1434,
                                "src": "14980:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14990:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "14980:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f205745544820746f207769746864726177",
                              "id": 1447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14993:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f373e1d870e96348e9e0f4e67088dd3f2fc182713044eddbfb69ceb7acb63c8b",
                                "typeString": "literal_string \"No WETH to withdraw\""
                              },
                              "value": "No WETH to withdraw"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f373e1d870e96348e9e0f4e67088dd3f2fc182713044eddbfb69ceb7acb63c8b",
                                "typeString": "literal_string \"No WETH to withdraw\""
                              }
                            ],
                            "id": 1443,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14972:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14972:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1449,
                        "nodeType": "ExpressionStatement",
                        "src": "14972:43:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1453,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 181,
                                    "src": "15052:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 1454,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15052:7:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1455,
                                  "name": "balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1434,
                                  "src": "15061:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1451,
                                  "name": "wethToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 458,
                                  "src": "15033:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$339",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15043:8:8",
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 306,
                                "src": "15033:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15033:36:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57455448207472616e73666572206661696c6564",
                              "id": 1457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15071:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bf460de1051161cbfe65c0f89046ab0e35d951ba7cb9a573214f57a2841603c3",
                                "typeString": "literal_string \"WETH transfer failed\""
                              },
                              "value": "WETH transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bf460de1051161cbfe65c0f89046ab0e35d951ba7cb9a573214f57a2841603c3",
                                "typeString": "literal_string \"WETH transfer failed\""
                              }
                            ],
                            "id": 1450,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15025:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15025:69:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1459,
                        "nodeType": "ExpressionStatement",
                        "src": "15025:69:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1428,
                    "nodeType": "StructuredDocumentation",
                    "src": "14789:63:8",
                    "text": " @notice Withdraw collected WETH (only owner)"
                  },
                  "functionSelector": "4c02f62e",
                  "id": 1461,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1431,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1430,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "14890:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 172,
                        "src": "14890:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14890:9:8"
                    }
                  ],
                  "name": "withdrawWETH",
                  "nameLocation": "14866:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1429,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14878:2:8"
                  },
                  "returnParameters": {
                    "id": 1432,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14900:0:8"
                  },
                  "scope": 1998,
                  "src": "14857:244:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1500,
                    "nodeType": "Block",
                    "src": "15220:236:8",
                    "statements": [
                      {
                        "assignments": [
                          1468
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1468,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "15238:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1500,
                            "src": "15230:15:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1467,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15230:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1474,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1471,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15256:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                  "typeString": "contract TomasSubscription"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                  "typeString": "contract TomasSubscription"
                                }
                              ],
                              "id": 1470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15248:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1469,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15248:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15248:13:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15262:7:8",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "15248:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15230:39:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1476,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1468,
                                "src": "15287:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15297:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "15287:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2045544820746f207769746864726177",
                              "id": 1479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15300:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
                                "typeString": "literal_string \"No ETH to withdraw\""
                              },
                              "value": "No ETH to withdraw"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
                                "typeString": "literal_string \"No ETH to withdraw\""
                              }
                            ],
                            "id": 1475,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15279:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15279:42:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1481,
                        "nodeType": "ExpressionStatement",
                        "src": "15279:42:8"
                      },
                      {
                        "assignments": [
                          1483,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1483,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "15346:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1500,
                            "src": "15341:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1482,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "15341:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1494,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15397:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1486,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 181,
                                      "src": "15367:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 1487,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15367:7:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1485,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15359:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1484,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15359:8:8",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15359:16:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15376:4:8",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "15359:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1490,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1468,
                                "src": "15388:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "15359:37:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15359:41:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15340:60:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1496,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1483,
                              "src": "15418:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455448207472616e73666572206661696c6564",
                              "id": 1497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15427:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                "typeString": "literal_string \"ETH transfer failed\""
                              },
                              "value": "ETH transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                "typeString": "literal_string \"ETH transfer failed\""
                              }
                            ],
                            "id": 1495,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15410:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15410:39:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1499,
                        "nodeType": "ExpressionStatement",
                        "src": "15410:39:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1462,
                    "nodeType": "StructuredDocumentation",
                    "src": "15111:62:8",
                    "text": " @notice Withdraw collected ETH (only owner)"
                  },
                  "functionSelector": "e086e5ec",
                  "id": 1501,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1465,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1464,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "15210:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 172,
                        "src": "15210:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15210:9:8"
                    }
                  ],
                  "name": "withdrawETH",
                  "nameLocation": "15187:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1463,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15198:2:8"
                  },
                  "returnParameters": {
                    "id": 1466,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15220:0:8"
                  },
                  "scope": 1998,
                  "src": "15178:278:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1504,
                    "nodeType": "Block",
                    "src": "15533:2:8",
                    "statements": []
                  },
                  "id": 1505,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1502,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15513:2:8"
                  },
                  "returnParameters": {
                    "id": 1503,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15533:0:8"
                  },
                  "scope": 1998,
                  "src": "15506:29:8",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1526,
                    "nodeType": "Block",
                    "src": "15900:187:8",
                    "statements": [
                      {
                        "assignments": [
                          1516
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1516,
                            "mutability": "mutable",
                            "name": "currentEthPrice",
                            "nameLocation": "15918:15:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1526,
                            "src": "15910:23:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1515,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15910:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1519,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1517,
                            "name": "getLatestPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "15936:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15936:16:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15910:42:8"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 1520,
                              "name": "SUBSCRIPTION_COST_USD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "15983:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1521,
                                "name": "getRequiredWETHAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 720,
                                "src": "16018:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16018:23:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1523,
                              "name": "currentEthPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1516,
                              "src": "16055:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1524,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "15969:111:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 1514,
                        "id": 1525,
                        "nodeType": "Return",
                        "src": "15962:118:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1506,
                    "nodeType": "StructuredDocumentation",
                    "src": "15545:215:8",
                    "text": " @notice Get current pricing information\n @return usdPrice The subscription price in USD\n @return wethAmount The required amount in WETH\n @return ethPrice Current ETH price in USD"
                  },
                  "functionSelector": "374f6d5d",
                  "id": 1527,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPricingInfo",
                  "nameLocation": "15774:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1507,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15788:2:8"
                  },
                  "returnParameters": {
                    "id": 1514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1509,
                        "mutability": "mutable",
                        "name": "usdPrice",
                        "nameLocation": "15831:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1527,
                        "src": "15823:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1508,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15823:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1511,
                        "mutability": "mutable",
                        "name": "wethAmount",
                        "nameLocation": "15857:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1527,
                        "src": "15849:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1510,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15849:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1513,
                        "mutability": "mutable",
                        "name": "ethPrice",
                        "nameLocation": "15885:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1527,
                        "src": "15877:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1512,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15877:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15813:86:8"
                  },
                  "scope": 1998,
                  "src": "15765:322:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1567,
                    "nodeType": "Block",
                    "src": "16971:333:8",
                    "statements": [
                      {
                        "assignments": [
                          1548
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1548,
                            "mutability": "mutable",
                            "name": "currentEthPrice",
                            "nameLocation": "16989:15:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1567,
                            "src": "16981:23:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1547,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16981:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1551,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1549,
                            "name": "getLatestPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "17007:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17007:16:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16981:42:8"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 1552,
                              "name": "SUBSCRIPTION_COST_USD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "17054:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1553,
                                "name": "getRequiredWETHAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 720,
                                "src": "17089:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17089:23:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1555,
                              "name": "currentEthPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1548,
                              "src": "17126:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1556,
                              "name": "BILLING_CYCLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "17155:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1557,
                              "name": "GRACE_PERIOD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "17182:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1558,
                              "name": "MAX_USERS_PER_UPKEEP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 568,
                              "src": "17208:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1559,
                                "name": "activeUsers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 496,
                                "src": "17242:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17254:6:8",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "17242:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1563,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17282:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                    "typeString": "contract TomasSubscription"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                    "typeString": "contract TomasSubscription"
                                  }
                                ],
                                "id": 1562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17274:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1561,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17274:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17274:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "id": 1565,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17040:257:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
                            "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)"
                          }
                        },
                        "functionReturnParameters": 1546,
                        "id": 1566,
                        "nodeType": "Return",
                        "src": "17033:264:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1528,
                    "nodeType": "StructuredDocumentation",
                    "src": "16097:583:8",
                    "text": " @notice Get comprehensive service details including pricing, billing cycle, and contract info\n @return usdPrice The subscription price in USD\n @return wethAmount The required amount in WETH\n @return ethPrice Current ETH price in USD\n @return billingCycle The billing cycle in seconds (30 days)\n @return gracePeriod The grace period in seconds (3 days)\n @return maxUsers The maximum number of users allowed\n @return currentUsers The current number of active users\n @return contractAddress The address of this contract"
                  },
                  "functionSelector": "b0fd8954",
                  "id": 1568,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getServiceDetails",
                  "nameLocation": "16694:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1529,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16711:2:8"
                  },
                  "returnParameters": {
                    "id": 1546,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1531,
                        "mutability": "mutable",
                        "name": "usdPrice",
                        "nameLocation": "16754:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1568,
                        "src": "16746:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16746:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1533,
                        "mutability": "mutable",
                        "name": "wethAmount",
                        "nameLocation": "16780:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1568,
                        "src": "16772:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1532,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16772:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1535,
                        "mutability": "mutable",
                        "name": "ethPrice",
                        "nameLocation": "16808:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1568,
                        "src": "16800:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16800:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1537,
                        "mutability": "mutable",
                        "name": "billingCycle",
                        "nameLocation": "16834:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1568,
                        "src": "16826:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1536,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16826:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1539,
                        "mutability": "mutable",
                        "name": "gracePeriod",
                        "nameLocation": "16864:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1568,
                        "src": "16856:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1538,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16856:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1541,
                        "mutability": "mutable",
                        "name": "maxUsers",
                        "nameLocation": "16893:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1568,
                        "src": "16885:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1540,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16885:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1543,
                        "mutability": "mutable",
                        "name": "currentUsers",
                        "nameLocation": "16919:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1568,
                        "src": "16911:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1542,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16911:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1545,
                        "mutability": "mutable",
                        "name": "contractAddress",
                        "nameLocation": "16949:15:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1568,
                        "src": "16941:23:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1544,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16941:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16736:234:8"
                  },
                  "scope": 1998,
                  "src": "16685:619:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1577,
                    "nodeType": "Block",
                    "src": "17486:42:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1574,
                            "name": "activeUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 496,
                            "src": "17503:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17515:6:8",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17503:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1573,
                        "id": 1576,
                        "nodeType": "Return",
                        "src": "17496:25:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1569,
                    "nodeType": "StructuredDocumentation",
                    "src": "17314:104:8",
                    "text": " @notice Get total number of tracked users\n @return Total number of active users"
                  },
                  "functionSelector": "8886fcc5",
                  "id": 1578,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalActiveUsers",
                  "nameLocation": "17432:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1570,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17451:2:8"
                  },
                  "returnParameters": {
                    "id": 1573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1572,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1578,
                        "src": "17477:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1571,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17477:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17476:9:8"
                  },
                  "scope": 1998,
                  "src": "17423:105:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1598,
                    "nodeType": "Block",
                    "src": "17742:110:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1587,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1581,
                                "src": "17760:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1588,
                                  "name": "activeUsers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "17768:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17780:6:8",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "17768:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17760:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e646578206f7574206f6620626f756e6473",
                              "id": 1591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17788:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                                "typeString": "literal_string \"Index out of bounds\""
                              },
                              "value": "Index out of bounds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                                "typeString": "literal_string \"Index out of bounds\""
                              }
                            ],
                            "id": 1586,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17752:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17752:58:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1593,
                        "nodeType": "ExpressionStatement",
                        "src": "17752:58:8"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1594,
                            "name": "activeUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 496,
                            "src": "17827:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1596,
                          "indexExpression": {
                            "id": 1595,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1581,
                            "src": "17839:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17827:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1585,
                        "id": 1597,
                        "nodeType": "Return",
                        "src": "17820:25:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1579,
                    "nodeType": "StructuredDocumentation",
                    "src": "17538:122:8",
                    "text": " @notice Get user at specific index\n @param index Index of user to get\n @return User address"
                  },
                  "functionSelector": "6c87d2c2",
                  "id": 1599,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getActiveUserAtIndex",
                  "nameLocation": "17674:20:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1581,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "17703:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1599,
                        "src": "17695:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1580,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17695:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17694:15:8"
                  },
                  "returnParameters": {
                    "id": 1585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1584,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1599,
                        "src": "17733:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1583,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17733:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17732:9:8"
                  },
                  "scope": 1998,
                  "src": "17665:187:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    60
                  ],
                  "body": {
                    "id": 1676,
                    "nodeType": "Block",
                    "src": "18261:660:8",
                    "statements": [
                      {
                        "assignments": [
                          1611
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1611,
                            "mutability": "mutable",
                            "name": "timeCondition",
                            "nameLocation": "18324:13:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1676,
                            "src": "18319:18:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1610,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "18319:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1619,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1612,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "18341:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1613,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "18347:9:8",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "18341:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1614,
                                  "name": "lastAutomationTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 562,
                                  "src": "18359:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18341:36:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1616,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "18340:38:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1617,
                            "name": "AUTOMATION_INTERVAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 565,
                            "src": "18382:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18340:61:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18319:82:8"
                      },
                      {
                        "assignments": [
                          1621
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1621,
                            "mutability": "mutable",
                            "name": "hasWork",
                            "nameLocation": "18479:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1676,
                            "src": "18474:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1620,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "18474:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1623,
                        "initialValue": {
                          "hexValue": "66616c7365",
                          "id": 1622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18489:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18474:20:8"
                      },
                      {
                        "assignments": [
                          1625
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1625,
                            "mutability": "mutable",
                            "name": "totalUsers",
                            "nameLocation": "18512:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1676,
                            "src": "18504:18:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1624,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18504:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1628,
                        "initialValue": {
                          "expression": {
                            "id": 1626,
                            "name": "activeUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 496,
                            "src": "18525:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18537:6:8",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "18525:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18504:39:8"
                      },
                      {
                        "body": {
                          "id": 1664,
                          "nodeType": "Block",
                          "src": "18631:200:8",
                          "statements": [
                            {
                              "assignments": [
                                1644
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1644,
                                  "mutability": "mutable",
                                  "name": "user",
                                  "nameLocation": "18653:4:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1664,
                                  "src": "18645:12:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1643,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18645:7:8",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1648,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1645,
                                  "name": "activeUsers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "18660:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1647,
                                "indexExpression": {
                                  "id": 1646,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1630,
                                  "src": "18672:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18660:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "18645:29:8"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 1650,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1644,
                                      "src": "18705:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1649,
                                    "name": "isPaymentDue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1262,
                                    "src": "18692:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                      "typeString": "function (address) view returns (bool)"
                                    }
                                  },
                                  "id": 1651,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18692:18:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1652,
                                      "name": "subscriptions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 493,
                                      "src": "18714:13:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                        "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                                      }
                                    },
                                    "id": 1654,
                                    "indexExpression": {
                                      "id": 1653,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1644,
                                      "src": "18728:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18714:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Subscription_$488_storage",
                                      "typeString": "struct TomasSubscription.Subscription storage ref"
                                    }
                                  },
                                  "id": 1655,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "18734:15:8",
                                  "memberName": "hasWETHApproval",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 487,
                                  "src": "18714:35:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "18692:57:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1663,
                              "nodeType": "IfStatement",
                              "src": "18688:133:8",
                              "trueBody": {
                                "id": 1662,
                                "nodeType": "Block",
                                "src": "18751:70:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1659,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1657,
                                        "name": "hasWork",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1621,
                                        "src": "18769:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 1658,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18779:4:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "18769:14:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1660,
                                    "nodeType": "ExpressionStatement",
                                    "src": "18769:14:8"
                                  },
                                  {
                                    "id": 1661,
                                    "nodeType": "Break",
                                    "src": "18801:5:8"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1633,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1630,
                              "src": "18582:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1634,
                              "name": "totalUsers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1625,
                              "src": "18586:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18582:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1636,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1630,
                              "src": "18600:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1637,
                              "name": "MAX_USERS_PER_UPKEEP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 568,
                              "src": "18604:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18600:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "18582:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1665,
                        "initializationExpression": {
                          "assignments": [
                            1630
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1630,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18575:1:8",
                              "nodeType": "VariableDeclaration",
                              "scope": 1665,
                              "src": "18567:9:8",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1629,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18567:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1632,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18579:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18567:13:8"
                        },
                        "isSimpleCounterLoop": false,
                        "loopExpression": {
                          "expression": {
                            "id": 1641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "18626:3:8",
                            "subExpression": {
                              "id": 1640,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1630,
                              "src": "18626:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1642,
                          "nodeType": "ExpressionStatement",
                          "src": "18626:3:8"
                        },
                        "nodeType": "ForStatement",
                        "src": "18562:269:8"
                      },
                      {
                        "expression": {
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1666,
                            "name": "upkeepNeeded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1606,
                            "src": "18849:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1667,
                              "name": "timeCondition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1611,
                              "src": "18864:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 1668,
                              "name": "hasWork",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1621,
                              "src": "18881:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "18864:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "18849:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1671,
                        "nodeType": "ExpressionStatement",
                        "src": "18849:39:8"
                      },
                      {
                        "expression": {
                          "id": 1674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1672,
                            "name": "performData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1608,
                            "src": "18898:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 1673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18912:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "18898:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1675,
                        "nodeType": "ExpressionStatement",
                        "src": "18898:16:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1600,
                    "nodeType": "StructuredDocumentation",
                    "src": "17931:181:8",
                    "text": " @notice Check if automation should be triggered\n @return upkeepNeeded True if automation should run\n @return performData Data to pass to performUpkeep"
                  },
                  "functionSelector": "6e04ff0d",
                  "id": 1677,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkUpkeep",
                  "nameLocation": "18126:11:8",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1604,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "18198:8:8"
                  },
                  "parameters": {
                    "id": 1603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1602,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1677,
                        "src": "18147:14:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1601,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "18147:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18137:46:8"
                  },
                  "returnParameters": {
                    "id": 1609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1606,
                        "mutability": "mutable",
                        "name": "upkeepNeeded",
                        "nameLocation": "18221:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1677,
                        "src": "18216:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1605,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18216:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1608,
                        "mutability": "mutable",
                        "name": "performData",
                        "nameLocation": "18248:11:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1677,
                        "src": "18235:24:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1607,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "18235:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18215:45:8"
                  },
                  "scope": 1998,
                  "src": "18117:804:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    66
                  ],
                  "body": {
                    "id": 1802,
                    "nodeType": "Block",
                    "src": "19084:1118:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1688,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1685,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "19099:5:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1686,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "19105:9:8",
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "19099:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 1687,
                                      "name": "lastAutomationTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 562,
                                      "src": "19117:18:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "19099:36:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1689,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "19098:38:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1690,
                                "name": "AUTOMATION_INTERVAL",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 565,
                                "src": "19140:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19098:61:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6f206561726c79",
                              "id": 1692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19161:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1",
                                "typeString": "literal_string \"Too early\""
                              },
                              "value": "Too early"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9f6f93f20f78aace72bd65ea4b5066106f1a58ba03a145eb11ceff2dc1ab0dd1",
                                "typeString": "literal_string \"Too early\""
                              }
                            ],
                            "id": 1684,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19090:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19090:83:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1694,
                        "nodeType": "ExpressionStatement",
                        "src": "19090:83:8"
                      },
                      {
                        "expression": {
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1695,
                            "name": "lastAutomationTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "19184:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1696,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "19205:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19211:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "19205:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19184:36:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1699,
                        "nodeType": "ExpressionStatement",
                        "src": "19184:36:8"
                      },
                      {
                        "assignments": [
                          1701
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1701,
                            "mutability": "mutable",
                            "name": "requiredAmount",
                            "nameLocation": "19234:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1802,
                            "src": "19226:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1700,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19226:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1704,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1702,
                            "name": "getRequiredWETHAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "19251:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19251:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19226:48:8"
                      },
                      {
                        "assignments": [
                          1706
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1706,
                            "mutability": "mutable",
                            "name": "processedCount",
                            "nameLocation": "19288:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1802,
                            "src": "19280:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1705,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19280:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1708,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19305:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19280:26:8"
                      },
                      {
                        "assignments": [
                          1713
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1713,
                            "mutability": "mutable",
                            "name": "usersSnapshot",
                            "nameLocation": "19412:13:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1802,
                            "src": "19395:30:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1711,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19395:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1712,
                              "nodeType": "ArrayTypeName",
                              "src": "19395:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1720,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1717,
                                "name": "activeUsers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 496,
                                "src": "19442:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19454:6:8",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "19442:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "19428:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1714,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19432:7:8",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1715,
                              "nodeType": "ArrayTypeName",
                              "src": "19432:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 1719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19428:33:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19395:66:8"
                      },
                      {
                        "assignments": [
                          1722
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1722,
                            "mutability": "mutable",
                            "name": "snapshotLength",
                            "nameLocation": "19475:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1802,
                            "src": "19467:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1721,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19467:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1724,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19492:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19467:26:8"
                      },
                      {
                        "body": {
                          "id": 1765,
                          "nodeType": "Block",
                          "src": "19658:209:8",
                          "statements": [
                            {
                              "assignments": [
                                1741
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1741,
                                  "mutability": "mutable",
                                  "name": "user",
                                  "nameLocation": "19676:4:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1765,
                                  "src": "19668:12:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1740,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19668:7:8",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1745,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1742,
                                  "name": "activeUsers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "19683:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1744,
                                "indexExpression": {
                                  "id": 1743,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1726,
                                  "src": "19695:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19683:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19668:29:8"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 1747,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1741,
                                      "src": "19724:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1746,
                                    "name": "isPaymentDue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1262,
                                    "src": "19711:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                      "typeString": "function (address) view returns (bool)"
                                    }
                                  },
                                  "id": 1748,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19711:18:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1749,
                                      "name": "subscriptions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 493,
                                      "src": "19733:13:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                                        "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                                      }
                                    },
                                    "id": 1751,
                                    "indexExpression": {
                                      "id": 1750,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1741,
                                      "src": "19747:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "19733:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Subscription_$488_storage",
                                      "typeString": "struct TomasSubscription.Subscription storage ref"
                                    }
                                  },
                                  "id": 1752,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "19753:15:8",
                                  "memberName": "hasWETHApproval",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 487,
                                  "src": "19733:35:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "19711:57:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1764,
                              "nodeType": "IfStatement",
                              "src": "19707:154:8",
                              "trueBody": {
                                "id": 1763,
                                "nodeType": "Block",
                                "src": "19770:91:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1758,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1754,
                                          "name": "usersSnapshot",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1713,
                                          "src": "19784:13:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 1756,
                                        "indexExpression": {
                                          "id": 1755,
                                          "name": "snapshotLength",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1722,
                                          "src": "19798:14:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "19784:29:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 1757,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1741,
                                        "src": "19816:4:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "19784:36:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1759,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19784:36:8"
                                  },
                                  {
                                    "expression": {
                                      "id": 1761,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "19834:16:8",
                                      "subExpression": {
                                        "id": 1760,
                                        "name": "snapshotLength",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1722,
                                        "src": "19834:14:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1762,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19834:16:8"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1729,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1726,
                              "src": "19588:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 1730,
                                "name": "activeUsers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 496,
                                "src": "19592:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19604:6:8",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "19592:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "19588:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1733,
                              "name": "snapshotLength",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1722,
                              "src": "19614:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1734,
                              "name": "MAX_USERS_PER_UPKEEP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 568,
                              "src": "19631:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "19614:37:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "19588:63:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1766,
                        "initializationExpression": {
                          "assignments": [
                            1726
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1726,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "19581:1:8",
                              "nodeType": "VariableDeclaration",
                              "scope": 1766,
                              "src": "19573:9:8",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1725,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "19573:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1728,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19585:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "19573:13:8"
                        },
                        "isSimpleCounterLoop": false,
                        "loopExpression": {
                          "expression": {
                            "id": 1738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "19653:3:8",
                            "subExpression": {
                              "id": 1737,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1726,
                              "src": "19653:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1739,
                          "nodeType": "ExpressionStatement",
                          "src": "19653:3:8"
                        },
                        "nodeType": "ForStatement",
                        "src": "19568:299:8"
                      },
                      {
                        "body": {
                          "id": 1794,
                          "nodeType": "Block",
                          "src": "19947:185:8",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1777,
                                    "name": "gasleft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -7,
                                    "src": "19961:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 1778,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19961:9:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "hexValue": "313030303030",
                                  "id": 1779,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19973:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100000_by_1",
                                    "typeString": "int_const 100000"
                                  },
                                  "value": "100000"
                                },
                                "src": "19961:18:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1782,
                              "nodeType": "IfStatement",
                              "src": "19957:29:8",
                              "trueBody": {
                                "id": 1781,
                                "nodeType": "Break",
                                "src": "19981:5:8"
                              }
                            },
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1784,
                                      "name": "usersSnapshot",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1713,
                                      "src": "20050:13:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 1786,
                                    "indexExpression": {
                                      "id": 1785,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1768,
                                      "src": "20064:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "20050:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1787,
                                    "name": "requiredAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1701,
                                    "src": "20068:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1783,
                                  "name": "_processUserPayment",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1962,
                                  "src": "20030:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) returns (bool)"
                                  }
                                },
                                "id": 1788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20030:53:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1793,
                              "nodeType": "IfStatement",
                              "src": "20026:100:8",
                              "trueBody": {
                                "id": 1792,
                                "nodeType": "Block",
                                "src": "20085:41:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1790,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "20099:16:8",
                                      "subExpression": {
                                        "id": 1789,
                                        "name": "processedCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1706,
                                        "src": "20099:14:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1791,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20099:16:8"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1771,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1768,
                            "src": "19922:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1772,
                            "name": "snapshotLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1722,
                            "src": "19926:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19922:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1795,
                        "initializationExpression": {
                          "assignments": [
                            1768
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1768,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "19915:1:8",
                              "nodeType": "VariableDeclaration",
                              "scope": 1795,
                              "src": "19907:9:8",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1767,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "19907:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1770,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19919:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "19907:13:8"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "19942:3:8",
                            "subExpression": {
                              "id": 1774,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1768,
                              "src": "19942:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1776,
                          "nodeType": "ExpressionStatement",
                          "src": "19942:3:8"
                        },
                        "nodeType": "ForStatement",
                        "src": "19902:230:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1797,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "20167:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "20173:9:8",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "20167:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1799,
                              "name": "processedCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1706,
                              "src": "20184:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1796,
                            "name": "AutomationTriggered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 540,
                            "src": "20147:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20147:52:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1801,
                        "nodeType": "EmitStatement",
                        "src": "20142:57:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1678,
                    "nodeType": "StructuredDocumentation",
                    "src": "18931:91:8",
                    "text": " @notice Execute automation logic - process due payments with gas control"
                  },
                  "functionSelector": "4585e33b",
                  "id": 1803,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "performUpkeep",
                  "nameLocation": "19036:13:8",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1682,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "19075:8:8"
                  },
                  "parameters": {
                    "id": 1681,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1680,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1803,
                        "src": "19050:14:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1679,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "19050:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19049:16:8"
                  },
                  "returnParameters": {
                    "id": 1683,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19084:0:8"
                  },
                  "scope": 1998,
                  "src": "19027:1175:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1961,
                    "nodeType": "Block",
                    "src": "20532:1817:8",
                    "statements": [
                      {
                        "assignments": [
                          1815
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1815,
                            "mutability": "mutable",
                            "name": "sub",
                            "nameLocation": "20563:3:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "20542:24:8",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                              "typeString": "struct TomasSubscription.Subscription"
                            },
                            "typeName": {
                              "id": 1814,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1813,
                                "name": "Subscription",
                                "nameLocations": [
                                  "20542:12:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 488,
                                "src": "20542:12:8"
                              },
                              "referencedDeclaration": 488,
                              "src": "20542:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                "typeString": "struct TomasSubscription.Subscription"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1819,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1816,
                            "name": "subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "20569:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subscription_$488_storage_$",
                              "typeString": "mapping(address => struct TomasSubscription.Subscription storage ref)"
                            }
                          },
                          "id": 1818,
                          "indexExpression": {
                            "id": 1817,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1806,
                            "src": "20583:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20569:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$488_storage",
                            "typeString": "struct TomasSubscription.Subscription storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20542:46:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "20654:13:8",
                              "subExpression": {
                                "expression": {
                                  "id": 1820,
                                  "name": "sub",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1815,
                                  "src": "20655:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                    "typeString": "struct TomasSubscription.Subscription storage pointer"
                                  }
                                },
                                "id": 1821,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "20659:8:8",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 483,
                                "src": "20655:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 1823,
                                "name": "whitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 508,
                                "src": "20671:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1825,
                              "indexExpression": {
                                "id": 1824,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1806,
                                "src": "20681:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20671:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "20654:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 1830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "20690:19:8",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1828,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1806,
                                  "src": "20704:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1827,
                                "name": "isPaymentDue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1262,
                                "src": "20691:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 1829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20691:18:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "20654:55:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1835,
                        "nodeType": "IfStatement",
                        "src": "20650:98:8",
                        "trueBody": {
                          "id": 1834,
                          "nodeType": "Block",
                          "src": "20711:37:8",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20732:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1812,
                              "id": 1833,
                              "nodeType": "Return",
                              "src": "20725:12:8"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 1837,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1806,
                              "src": "20857:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1836,
                            "name": "isSubscriptionExpired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1298,
                            "src": "20835:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20835:27:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1864,
                        "nodeType": "IfStatement",
                        "src": "20831:276:8",
                        "trueBody": {
                          "id": 1863,
                          "nodeType": "Block",
                          "src": "20864:243:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 1843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1839,
                                    "name": "sub",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1815,
                                    "src": "20917:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                      "typeString": "struct TomasSubscription.Subscription storage pointer"
                                    }
                                  },
                                  "id": 1841,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "20921:8:8",
                                  "memberName": "isActive",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 483,
                                  "src": "20917:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1842,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20932:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "20917:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1844,
                              "nodeType": "ExpressionStatement",
                              "src": "20917:20:8"
                            },
                            {
                              "expression": {
                                "id": 1849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1845,
                                    "name": "sub",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1815,
                                    "src": "20951:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                      "typeString": "struct TomasSubscription.Subscription storage pointer"
                                    }
                                  },
                                  "id": 1847,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "20955:15:8",
                                  "memberName": "hasWETHApproval",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 487,
                                  "src": "20951:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1848,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20973:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "20951:27:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1850,
                              "nodeType": "ExpressionStatement",
                              "src": "20951:27:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1852,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1806,
                                    "src": "21004:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1851,
                                  "name": "_removeUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 826,
                                  "src": "20992:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 1853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20992:17:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1854,
                              "nodeType": "ExpressionStatement",
                              "src": "20992:17:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1856,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1806,
                                    "src": "21048:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1857,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "21054:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1858,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "21060:9:8",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "21054:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1855,
                                  "name": "SubscriptionExpired",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "21028:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21028:42:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1860,
                              "nodeType": "EmitStatement",
                              "src": "21023:47:8"
                            },
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21091:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1812,
                              "id": 1862,
                              "nodeType": "Return",
                              "src": "21084:12:8"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 1867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "21172:20:8",
                          "subExpression": {
                            "expression": {
                              "id": 1865,
                              "name": "sub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1815,
                              "src": "21173:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                "typeString": "struct TomasSubscription.Subscription storage pointer"
                              }
                            },
                            "id": 1866,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21177:15:8",
                            "memberName": "hasWETHApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 487,
                            "src": "21173:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1876,
                        "nodeType": "IfStatement",
                        "src": "21168:130:8",
                        "trueBody": {
                          "id": 1875,
                          "nodeType": "Block",
                          "src": "21194:104:8",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1869,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1806,
                                    "src": "21236:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f205745544820617070726f76616c",
                                    "id": 1870,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21242:18:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_61f5427f39922445643a7f2fe9577c7f243cc000c31a00867622a743fcc08661",
                                      "typeString": "literal_string \"No WETH approval\""
                                    },
                                    "value": "No WETH approval"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_61f5427f39922445643a7f2fe9577c7f243cc000c31a00867622a743fcc08661",
                                      "typeString": "literal_string \"No WETH approval\""
                                    }
                                  ],
                                  "id": 1868,
                                  "name": "AutomaticPaymentFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 552,
                                  "src": "21213:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (address,string memory)"
                                  }
                                },
                                "id": 1871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21213:48:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1872,
                              "nodeType": "EmitStatement",
                              "src": "21208:53:8"
                            },
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21282:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1812,
                              "id": 1874,
                              "nodeType": "Return",
                              "src": "21275:12:8"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1879,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1806,
                                "src": "21381:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 1877,
                                "name": "wethToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 458,
                                "src": "21361:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$339",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21371:9:8",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 296,
                              "src": "21361:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21361:25:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1881,
                            "name": "requiredAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1808,
                            "src": "21389:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21361:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1891,
                        "nodeType": "IfStatement",
                        "src": "21357:161:8",
                        "trueBody": {
                          "id": 1890,
                          "nodeType": "Block",
                          "src": "21405:113:8",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1884,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1806,
                                    "src": "21447:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e7420574554482062616c616e6365",
                                    "id": 1885,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21453:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_bc06614a3aa13e2413c6c9cffac61a3d079d7aa40762830e5e884fc0c8bcabd1",
                                      "typeString": "literal_string \"Insufficient WETH balance\""
                                    },
                                    "value": "Insufficient WETH balance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_bc06614a3aa13e2413c6c9cffac61a3d079d7aa40762830e5e884fc0c8bcabd1",
                                      "typeString": "literal_string \"Insufficient WETH balance\""
                                    }
                                  ],
                                  "id": 1883,
                                  "name": "AutomaticPaymentFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 552,
                                  "src": "21424:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (address,string memory)"
                                  }
                                },
                                "id": 1886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21424:57:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1887,
                              "nodeType": "EmitStatement",
                              "src": "21419:62:8"
                            },
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21502:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1812,
                              "id": 1889,
                              "nodeType": "Return",
                              "src": "21495:12:8"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1894,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1806,
                                "src": "21610:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1897,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "21624:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                      "typeString": "contract TomasSubscription"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                      "typeString": "contract TomasSubscription"
                                    }
                                  ],
                                  "id": 1896,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21616:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1895,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21616:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21616:13:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 1892,
                                "name": "wethToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 458,
                                "src": "21590:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$339",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21600:9:8",
                              "memberName": "allowance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 316,
                              "src": "21590:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view external returns (uint256)"
                              }
                            },
                            "id": 1899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21590:40:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1900,
                            "name": "requiredAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1808,
                            "src": "21633:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21590:57:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1910,
                        "nodeType": "IfStatement",
                        "src": "21586:178:8",
                        "trueBody": {
                          "id": 1909,
                          "nodeType": "Block",
                          "src": "21649:115:8",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1903,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1806,
                                    "src": "21691:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e74205745544820616c6c6f77616e6365",
                                    "id": 1904,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21697:29:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_9e94da18e2a2f5eecf80b1f7f621ee80a236ceb552f857f5a4af4554ad3b88ce",
                                      "typeString": "literal_string \"Insufficient WETH allowance\""
                                    },
                                    "value": "Insufficient WETH allowance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_9e94da18e2a2f5eecf80b1f7f621ee80a236ceb552f857f5a4af4554ad3b88ce",
                                      "typeString": "literal_string \"Insufficient WETH allowance\""
                                    }
                                  ],
                                  "id": 1902,
                                  "name": "AutomaticPaymentFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 552,
                                  "src": "21668:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (address,string memory)"
                                  }
                                },
                                "id": 1905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21668:59:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1906,
                              "nodeType": "EmitStatement",
                              "src": "21663:64:8"
                            },
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21748:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1812,
                              "id": 1908,
                              "nodeType": "Return",
                              "src": "21741:12:8"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 1920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "21833:60:8",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1913,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1806,
                                "src": "21857:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1916,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "21871:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                      "typeString": "contract TomasSubscription"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TomasSubscription_$1998",
                                      "typeString": "contract TomasSubscription"
                                    }
                                  ],
                                  "id": 1915,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21863:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1914,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21863:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21863:13:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1918,
                                "name": "requiredAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1808,
                                "src": "21878:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1911,
                                "name": "wethToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 458,
                                "src": "21834:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$339",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "21844:12:8",
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 338,
                              "src": "21834:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,address,uint256) external returns (bool)"
                              }
                            },
                            "id": 1919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21834:59:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1929,
                        "nodeType": "IfStatement",
                        "src": "21829:174:8",
                        "trueBody": {
                          "id": 1928,
                          "nodeType": "Block",
                          "src": "21895:108:8",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1922,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1806,
                                    "src": "21937:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "57455448207472616e73666572206661696c6564",
                                    "id": 1923,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21943:22:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_bf460de1051161cbfe65c0f89046ab0e35d951ba7cb9a573214f57a2841603c3",
                                      "typeString": "literal_string \"WETH transfer failed\""
                                    },
                                    "value": "WETH transfer failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_bf460de1051161cbfe65c0f89046ab0e35d951ba7cb9a573214f57a2841603c3",
                                      "typeString": "literal_string \"WETH transfer failed\""
                                    }
                                  ],
                                  "id": 1921,
                                  "name": "AutomaticPaymentFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 552,
                                  "src": "21914:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (address,string memory)"
                                  }
                                },
                                "id": 1924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21914:52:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1925,
                              "nodeType": "EmitStatement",
                              "src": "21909:57:8"
                            },
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 1926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21987:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1812,
                              "id": 1927,
                              "nodeType": "Return",
                              "src": "21980:12:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1930,
                              "name": "sub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1815,
                              "src": "22075:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                "typeString": "struct TomasSubscription.Subscription storage pointer"
                              }
                            },
                            "id": 1932,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "22079:20:8",
                            "memberName": "lastPaymentTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 479,
                            "src": "22075:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1933,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "22102:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22108:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "22102:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22075:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1936,
                        "nodeType": "ExpressionStatement",
                        "src": "22075:42:8"
                      },
                      {
                        "expression": {
                          "id": 1944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1937,
                              "name": "sub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1815,
                              "src": "22127:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                "typeString": "struct TomasSubscription.Subscription storage pointer"
                              }
                            },
                            "id": 1939,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "22131:20:8",
                            "memberName": "nextBillingTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 481,
                            "src": "22127:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1940,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "22154:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22160:9:8",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "22154:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1942,
                              "name": "BILLING_CYCLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "22172:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22154:31:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22127:58:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1945,
                        "nodeType": "ExpressionStatement",
                        "src": "22127:58:8"
                      },
                      {
                        "expression": {
                          "id": 1950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1946,
                              "name": "sub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1815,
                              "src": "22195:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                "typeString": "struct TomasSubscription.Subscription storage pointer"
                              }
                            },
                            "id": 1948,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "22199:17:8",
                            "memberName": "lastPaymentAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 485,
                            "src": "22195:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1949,
                            "name": "requiredAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1808,
                            "src": "22219:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22195:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1951,
                        "nodeType": "ExpressionStatement",
                        "src": "22195:38:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1953,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1806,
                              "src": "22274:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1954,
                              "name": "requiredAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1808,
                              "src": "22280:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1955,
                                "name": "sub",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1815,
                                "src": "22296:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Subscription_$488_storage_ptr",
                                  "typeString": "struct TomasSubscription.Subscription storage pointer"
                                }
                              },
                              "id": 1956,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "22300:20:8",
                              "memberName": "nextBillingTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 481,
                              "src": "22296:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1952,
                            "name": "SubscriptionPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "22257:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22257:64:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1958,
                        "nodeType": "EmitStatement",
                        "src": "22252:69:8"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22338:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1812,
                        "id": 1960,
                        "nodeType": "Return",
                        "src": "22331:11:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1804,
                    "nodeType": "StructuredDocumentation",
                    "src": "20212:224:8",
                    "text": " @notice Process payment for a specific user\n @param user Address of the user\n @param requiredAmount Amount required for payment\n @return success True if payment was processed successfully"
                  },
                  "id": 1962,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_processUserPayment",
                  "nameLocation": "20450:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1806,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "20478:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1962,
                        "src": "20470:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20470:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1808,
                        "mutability": "mutable",
                        "name": "requiredAmount",
                        "nameLocation": "20492:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1962,
                        "src": "20484:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1807,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20484:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20469:38:8"
                  },
                  "returnParameters": {
                    "id": 1812,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1811,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1962,
                        "src": "20526:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1810,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "20526:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20525:6:8"
                  },
                  "scope": 1998,
                  "src": "20441:1908:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1974,
                    "nodeType": "Block",
                    "src": "22556:45:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1970,
                            "name": "lastAutomationTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "22566:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1971,
                            "name": "newTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1965,
                            "src": "22587:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22566:28:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1973,
                        "nodeType": "ExpressionStatement",
                        "src": "22566:28:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1963,
                    "nodeType": "StructuredDocumentation",
                    "src": "22359:126:8",
                    "text": " @notice Emergency function to update automation time (only owner)\n @param newTime New automation time"
                  },
                  "functionSelector": "76fc0d24",
                  "id": 1975,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1968,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1967,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "22546:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 172,
                        "src": "22546:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "22546:9:8"
                    }
                  ],
                  "name": "updateAutomationTime",
                  "nameLocation": "22499:20:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1965,
                        "mutability": "mutable",
                        "name": "newTime",
                        "nameLocation": "22528:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1975,
                        "src": "22520:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1964,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22520:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22519:17:8"
                  },
                  "returnParameters": {
                    "id": 1969,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "22556:0:8"
                  },
                  "scope": 1998,
                  "src": "22490:111:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1996,
                    "nodeType": "Block",
                    "src": "22822:154:8",
                    "statements": [
                      {
                        "assignments": [
                          1984
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1984,
                            "mutability": "mutable",
                            "name": "requiredAmount",
                            "nameLocation": "22840:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1996,
                            "src": "22832:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1983,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22832:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1987,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1985,
                            "name": "getRequiredWETHAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "22857:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22857:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22832:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1990,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1978,
                                  "src": "22918:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1991,
                                  "name": "requiredAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1984,
                                  "src": "22924:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1989,
                                "name": "_processUserPayment",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1962,
                                "src": "22898:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) returns (bool)"
                                }
                              },
                              "id": 1992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22898:41:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061796d656e742070726f63657373696e67206661696c6564",
                              "id": 1993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22941:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_261a063c5943a387a7bb51ba31737bace8ec1a9985870ac513526b4a9a7a5d16",
                                "typeString": "literal_string \"Payment processing failed\""
                              },
                              "value": "Payment processing failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_261a063c5943a387a7bb51ba31737bace8ec1a9985870ac513526b4a9a7a5d16",
                                "typeString": "literal_string \"Payment processing failed\""
                              }
                            ],
                            "id": 1988,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "22890:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22890:79:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1995,
                        "nodeType": "ExpressionStatement",
                        "src": "22890:79:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1976,
                    "nodeType": "StructuredDocumentation",
                    "src": "22611:141:8",
                    "text": " @notice Emergency function to manually process a user's payment (only owner)\n @param user Address of user to process"
                  },
                  "functionSelector": "bfb8e2f2",
                  "id": 1997,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1981,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1980,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "22812:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 172,
                        "src": "22812:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "22812:9:8"
                    }
                  ],
                  "name": "manuallyProcessPayment",
                  "nameLocation": "22766:22:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1979,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1978,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "22797:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1997,
                        "src": "22789:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1977,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "22789:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22788:14:8"
                  },
                  "returnParameters": {
                    "id": 1982,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "22822:0:8"
                  },
                  "scope": 1998,
                  "src": "22757:219:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1999,
              "src": "807:22171:8",
              "usedErrors": [
                127,
                132,
                383
              ],
              "usedEvents": [
                138,
                516,
                522,
                528,
                534,
                540,
                546,
                552,
                556,
                560
              ]
            }
          ],
          "src": "32:22946:8"
        },
        "id": 8
      }
    },
    "contracts": {
      "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
        "AutomationBase": {
          "abi": [
            {
              "inputs": [],
              "name": "OnlySimulatedBackend",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601357603a908160198239f35b600080fdfe600080fdfea26469706673582212200d2c039a88e91e3cf15131c067aa0dafa9a3948802d6ba2eb2ce934e128be05164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x2C SUB SWAP11 DUP9 0xE9 0x1E EXTCODECOPY CALL MLOAD BALANCE 0xC0 PUSH8 0xAA0DAFA9A3948802 0xD6 0xBA 0x2E 0xB2 0xCE SWAP4 0x4E SLT DUP12 0xE0 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "57:634:0:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea26469706673582212200d2c039a88e91e3cf15131c067aa0dafa9a3948802d6ba2eb2ce934e128be05164736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x2C SUB SWAP11 DUP9 0xE9 0x1E EXTCODECOPY CALL MLOAD BALANCE 0xC0 PUSH8 0xAA0DAFA9A3948802 0xD6 0xBA 0x2E 0xB2 0xCE SWAP4 0x4E SLT DUP12 0xE0 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "57:634:0:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
        "AutomationCompatible": {
          "abi": [
            {
              "inputs": [],
              "name": "OnlySimulatedBackend",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "checkData",
                  "type": "bytes"
                }
              ],
              "name": "checkUpkeep",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "upkeepNeeded",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "performData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "performData",
                  "type": "bytes"
                }
              ],
              "name": "performUpkeep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "checkUpkeep(bytes)": "6e04ff0d",
              "performUpkeep(bytes)": "4585e33b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
        "AutomationCompatibleInterface": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "checkData",
                  "type": "bytes"
                }
              ],
              "name": "checkUpkeep",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "upkeepNeeded",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "performData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "performData",
                  "type": "bytes"
                }
              ],
              "name": "performUpkeep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "checkUpkeep(bytes)": "6e04ff0d",
              "performUpkeep(bytes)": "4585e33b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}"
        }
      },
      "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
        "AggregatorV3Interface": {
          "abi": [
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "description",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint80",
                  "name": "_roundId",
                  "type": "uint80"
                }
              ],
              "name": "getRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "description()": "7284e416",
              "getRoundData(uint80)": "9a6fc8f5",
              "latestRoundData()": "feaf968c",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "contracts/TomasSubscription.sol": {
        "TomasSubscription": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_wethToken",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "AutomaticPaymentFailed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "usersProcessed",
                  "type": "uint256"
                }
              ],
              "name": "AutomationTriggered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "SubscriptionCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "SubscriptionExpired",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountWETH",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "nextBilling",
                  "type": "uint256"
                }
              ],
              "name": "SubscriptionPaid",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "UserAddedToTracking",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "UserRemovedFromTracking",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "isWhitelisted",
                  "type": "bool"
                }
              ],
              "name": "UserWhitelisted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "WETHApprovalUpdated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "AUTOMATION_INTERVAL",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "BILLING_CYCLE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "GRACE_PERIOD",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_PRICE_USD",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_USERS_PER_UPKEEP",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PRICE_STALENESS_THRESHOLD",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "SUBSCRIPTION_COST_USD",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "activeUsers",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "users",
                  "type": "address[]"
                },
                {
                  "internalType": "bool",
                  "name": "isWhitelisted",
                  "type": "bool"
                }
              ],
              "name": "batchSetWhitelist",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "cancelSubscription",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "checkUpkeep",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "upkeepNeeded",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "performData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "disableWETHAutoPay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "enableWETHAutoPay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "getActiveUserAtIndex",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLatestPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPricingInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "usdPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "wethAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "ethPrice",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRequiredWETHAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getServiceDetails",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "usdPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "wethAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "ethPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "billingCycle",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gracePeriod",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxUsers",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentUsers",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getSubscriptionDetails",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lastPayment",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nextBilling",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "lastAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isWhitelisted",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paymentDue",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "hasExpired",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "hasWETHApproval",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalActiveUsers",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "hasActiveSubscription",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "isPaymentDue",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "isSubscriptionExpired",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isUserTracked",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lastAutomationTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "manuallyProcessPayment",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "payWithETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "performUpkeep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isWhitelisted",
                  "type": "bool"
                }
              ],
              "name": "setWhitelist",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "setupWETHSubscription",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "subscriptions",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "lastPaymentTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nextBillingTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "lastPaymentAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "hasWETHApproval",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newTime",
                  "type": "uint256"
                }
              ],
              "name": "updateAutomationTime",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "userIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wethToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "whitelist",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawWETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 461,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a0346101b257601f61265338819003918201601f19168301916001600160401b038311848410176101b75780849260409485528339810103126101b257610052602061004b836101cd565b92016101cd565b331561019c5760008054336001600160a01b0319821681178355604051949290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556001600160a01b031691821561015a57506001600160a01b031690811561011557600280546001600160a01b0319169190911790556080524260085560405161247190816101e28239608051818181610d3b0152818161111c01528181611250015281816115f4015261206e0152f35b60405162461bcd60e51b815260206004820152601460248201527f496e76616c6964205745544820616464726573730000000000000000000000006044820152606490fd5b62461bcd60e51b815260206004820152601a60248201527f496e76616c6964207072696365206665656420616464726573730000000000006044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101b25756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806309612a981461157b57806313621a21146115605780631ec249a11461152157806324e9edb014611492578063374f6d5d146114565780633afb0551146114335780634585e33b1461127f5780634b57b0be1461123a5780634c02f62e146110ee5780635051a05f146110d2578063507b1e4e146110b4578063511671ee1461109657806353d6fd5914611002578063544af5f214610fe45780635f5028b514610ccf57806367aa682b14610caf5780636c7327a214610a965780636c87d2c214610a325780636e04ff0d1461090b578063715018a6146108b257806376fc0d2414610891578063803ae5181461084f57806388447175146107f65780638886fcc5146107d85780638da5cb5b146107af5780638e15f4731461078c57806397ad7e02146107695780639b19251a1461072a578063a095e8f91461060d578063b0fd8954146105a8578063bebe4a571461057b578063bfb8e2f2146104fd578063bfd97cd6146104dd578063c1a287e2146104bf578063c96679fe14610485578063d474f84f146103aa578063e086e5ec146102f3578063f046395a14610283578063f25b9caa146102665763f2fde38b0361000e5734610261576020366003190112610261576101f16116ef565b6101f96123d0565b6001600160a01b0316801561024b57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b34610261576000366003190112610261576020604051610e108152f35b34610261576020366003190112610261576001600160a01b036102a46116ef565b16600052600360205260a0604060002080549060018101549060ff60028201541660ff600460038401549301541692604051948552602085015215156040840152606083015215156080820152f35b346102615760003660031901126102615761030c6123d0565b4780156103705760008080809360018060a01b038254165af161032d611a93565b501561033557005b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b6044820152606490fd5b34610261576020366003190112610261576101006103c66116ef565b60018060a01b03811690816000526003602052604060002090604051906103ec826117db565b82549384835260018401549384602085015260ff600282015416151591826040860152608060ff60046003850154948560608a015201541695019415158552600052600760205260ff604060002054169161044f61044985611cdc565b946118cc565b945115159560405197885260208801526040870152606086015215156080850152151560a0840152151560c083015260e0820152f35b34610261576020366003190112610261576001600160a01b036104a66116ef565b1660005260056020526020604060002054604051908152f35b346102615760003660031901126102615760206040516203f4808152f35b3461026157600036600319011261026157602060405164e8d4a510008152f35b346102615760203660031901126102615761052f6105196116ef565b6105216123d0565b610529611874565b90612002565b1561053657005b60405162461bcd60e51b815260206004820152601960248201527f5061796d656e742070726f63657373696e67206661696c6564000000000000006044820152606490fd5b3461026157602036600319011261026157602061059e6105996116ef565b611d8c565b6040519015158152f35b34610261576000366003190112610261576101006105c4611aea565b6105cc611874565b9060045490604051926402540be40084526020840152604083015262278d0060608301526203f4806080830152601460a083015260c08201523060e0820152f35b346102615760403660031901126102615760043567ffffffffffffffff8111610261573660238201121561026157806004013567ffffffffffffffff8111610261576024820191602436918360051b0101116102615761066b611756565b6106736123d0565b8015159060005b83811061068357005b6001906001600160a01b036106a161069c83888a611d68565b611d78565b166000526007602052826106c58160406000209060ff801983541691151516179055565b61070f575b818060a01b036106de61069c83888a611d68565b167f995d2434d36c9bceaab42c56efe51e8ffe41fd11cabefd9e2cb83700d8b2035e6020604051878152a20161067a565b61072561072061069c83888a611d68565b611eec565b6106ca565b34610261576020366003190112610261576001600160a01b0361074b6116ef565b166000526007602052602060ff604060002054166040519015158152f35b3461026157602036600319011261026157602061059e6107876116ef565b611cdc565b346102615760003660031901126102615760206107a7611aea565b604051908152f35b34610261576000366003190112610261576000546040516001600160a01b039091168152602090f35b34610261576000366003190112610261576020600454604051908152f35b3461026157600036600319011261026157336000526003602052600460406000200160ff198154169055604051600081527fb347c6bf445109e788a01515e0dba872723ddf737844d1e8bffb97c1fc2f3c2260203392a2005b346102615760203660031901126102615760043560045481101561026157610878602091611765565b905460405160039290921b1c6001600160a01b03168152f35b34610261576020366003190112610261576108aa6123d0565b600435600855005b34610261576000366003190112610261576108cb6123d0565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102615761091936611705565b50506201518061092b6008544261196a565b101560006004549060005b82811080610a28575b15610a205761094d81611765565b905460039190911b1c6001600160a01b031661096881611cdc565b9081610a04575b506109825761097d9061198f565b610936565b50505060015b816109fc575b5060405160209161099f838361180d565b60008252604051928391151582526040818301528251908160408401526000935b8285106109e3575050606092506000838284010152601f80199101168101030190f35b84810182015186860160600152938101938593506109c0565b90508161098e565b9050600052600360205260ff600460406000200154168561096f565b509050610988565b506014811061093f565b3461026157602036600319011261026157600435600454811015610a5b57610878602091611765565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fd5b600036600319011261026157610aaa6123f9565b336000526007602052610ac560ff6040600020541615611a0d565b33600052600360205260ff6002604060002001541615610c9c575b610ae8611874565b803410610c6057600090803411610c4f575b5062278d004201804211610c3957610b96610b15833461196a565b600460405191610b24836117db565b4283526020830190858252610b7a604085016001815260608601928352608086019360008552336000526003602052604060002096518755516001870155511515600286019060ff801983541691151516179055565b51600384015551151591019060ff801983541691151516179055565b610b9f33611e1a565b610ba9823461196a565b9060405191825260208201527f6cd9d6bebf8cc2076dd424f83deb0559d8774d1c44178b4f676f9d50709fb1be60403392a280610be7575b60018055005b600080808093335af1610bf8611a93565b5015610c045780610be1565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b610c5a91503461196a565b81610afa565b60405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606490fd5b610caa601460045410611a4f565b610ae0565b346102615760003660031901126102615760206040516402540be4008152f35b3461026157600036600319011261026157610ce86123f9565b336000526007602052610d0360ff6040600020541615611a0d565b33600052600360205260ff6002604060002001541615610fd1575b610d26611874565b6040516370a0823160e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa8015610f19578391600091610f9c575b5010610f5b57604051636eb1769f60e11b8152336004820152306024820152602081604481855afa8015610f19578390600090610f25575b610dc19250101561182f565b6040516323b872dd60e01b81523360048201523060248201526044810183905290602090829060649082906000905af18015610f1957610e0991600091610eea575b506119ca565b62278d004201804211610c3957610e7d604051610e25816117db565b4281526004602082018481526040830160018152610b7a6060850191888352608086019360018552336000526003602052604060002096518755516001870155511515600286019060ff801983541691151516179055565b610e8633611e1a565b60405191825260208201527f6cd9d6bebf8cc2076dd424f83deb0559d8774d1c44178b4f676f9d50709fb1be60403392a2604051600181527fb347c6bf445109e788a01515e0dba872723ddf737844d1e8bffb97c1fc2f3c2260203392a260018055005b610f0c915060203d602011610f12575b610f04818361180d565b8101906119b2565b83610e03565b503d610efa565b6040513d6000823e3d90fd5b50506020813d602011610f53575b81610f406020938361180d565b810103126102615782610dc19151610db5565b3d9150610f33565b60405162461bcd60e51b8152602060048201526019602482015278496e73756666696369656e7420574554482062616c616e636560381b6044820152606490fd5b9150506020813d602011610fc9575b81610fb86020938361180d565b810103126102615782905184610d7d565b3d9150610fab565b610fdf601460045410611a4f565b610d1e565b3461026157600036600319011261026157602060405162278d008152f35b346102615760403660031901126102615761101b6116ef565b7f995d2434d36c9bceaab42c56efe51e8ffe41fd11cabefd9e2cb83700d8b2035e6020611046611756565b61104e6123d0565b6001600160a01b03841660008181526007845260409020805460ff191660ff841515161790559381611087575b506040519015158152a2005b61109090611eec565b8461107b565b34610261576000366003190112610261576020600854604051908152f35b34610261576000366003190112610261576020604051620151808152f35b3461026157600036600319011261026157602060405160148152f35b34610261576000366003190112610261576111076123d0565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa908115610f1957600091611205575b5080156111ca57602090604460018060a01b03600054166000604051958694859363a9059cbb60e01b8552600485015260248401525af18015610f1957610019916000916111ab57506119ca565b6111c4915060203d602011610f1257610f04818361180d565b82610e03565b60405162461bcd60e51b81526020600482015260136024820152724e6f205745544820746f20776974686472617760681b6044820152606490fd5b906020823d602011611232575b8161121f6020938361180d565b8101031261122f5750518261115d565b80fd5b3d9150611212565b34610261576000366003190112610261576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346102615761128d36611705565b50506201518061129f6008544261196a565b1061140257426008556112b0611874565b6004546000916112bf82611977565b906112cd604051928361180d565b828252601f196112dc84611977565b013660208401378390845b848110806113f8575b1561136c576112fe81611765565b905460039190911b1c6001600160a01b031661131981611cdc565b80611353575b611333575b5061132e9061198f565b6112e7565b8361134c9161134661132e94968861199e565b5261198f565b9290611324565b50808752600360205260ff60046040892001541661131f565b508492835b8381106113ab575b7f37aeb7a78769e88660e2546f8ac9047631d3969faaa2dce0188f6a220ac99c176040868151904282526020820152a1005b620186a05a106113f3576113d2836001600160a01b036113cb848661199e565b5116612002565b6113df575b600101611371565b936113eb60019161198f565b9490506113d7565b611379565b50601483106112f0565b60405162461bcd60e51b8152602060048201526009602482015268546f6f206561726c7960b81b6044820152606490fd5b3461026157602036600319011261026157602061059e6114516116ef565b6118cc565b34610261576000366003190112610261576060611471611aea565b611479611874565b90604051916402540be400835260208301526040820152f35b34610261576000366003190112610261573360005260036020526114c060ff60026040600020015416611796565b33600081815260036020526040902060028101805460ff199081169091556004909101805490911690556114f390611eec565b6040514281527f75703d723c382baf9126c0b27310a322412b9e2bbaf52e74afcf50b107a7905f60203392a2005b34610261576020366003190112610261576001600160a01b036115426116ef565b166000526006602052602060ff604060002054166040519015158152f35b346102615760003660031901126102615760206107a7611874565b34610261576000366003190112610261573360005260036020526115a960ff60026040600020015416611796565b33600052600360205260ff600460406000200154166116b8576115ca611874565b604051636eb1769f60e11b8152336004820152306024820152906020826044816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa8015610f1957600090611684575b6116309250101561182f565b3360005260036020526004604060002001600160ff1982541617905561165533611e1a565b604051600181527fb347c6bf445109e788a01515e0dba872723ddf737844d1e8bffb97c1fc2f3c2260203392a2005b506020823d6020116116b0575b8161169e6020938361180d565b81010312610261576116309151611624565b3d9150611691565b60405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e48195b98589b1959608a1b6044820152606490fd5b600435906001600160a01b038216820361026157565b9060206003198301126102615760043567ffffffffffffffff811161026157826023820112156102615780600401359267ffffffffffffffff84116102615760248483010111610261576024019190565b60243590811515820361026157565b60045481101561178057600460005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b1561179d57565b60405162461bcd60e51b815260206004820152601660248201527527379030b1ba34bb329039bab139b1b934b83a34b7b760511b6044820152606490fd5b60a0810190811067ffffffffffffffff8211176117f757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176117f757604052565b1561183657565b60405162461bcd60e51b815260206004820152601660248201527515d1551208185c1c1c9bdd985b081c995c5d5a5c995960521b6044820152606490fd5b61187c611aea565b8015611893576b204fce5e3e250261100000000490565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c69642045544820707269636560781b6044820152606490fd5b6001600160a01b0316600081815260036020526040908190209051916118f1836117db565b815483526001820154926020810193845260ff6002840154161590608060ff600484159687604086015260038101546060860152015416151591015291611951575b5061194b57516203f4808101809111610c3957421190565b50600090565b9050600052600760205260ff6040600020541638611933565b91908203918211610c3957565b67ffffffffffffffff81116117f75760051b60200190565b6000198114610c395760010190565b80518210156117805760209160051b010190565b90816020910312610261575180151581036102615790565b156119d157565b60405162461bcd60e51b815260206004820152601460248201527315d15512081d1c985b9cd9995c8819985a5b195960621b6044820152606490fd5b15611a1457565b60405162461bcd60e51b8152602060048201526013602482015272155cd95c881a5cc81dda1a5d195b1a5cdd1959606a1b6044820152606490fd5b15611a5657565b60405162461bcd60e51b815260206004820152601560248201527413585e1a5b5d5b481d5cd95c9cc81c995858da1959605a1b6044820152606490fd5b3d15611ace573d9067ffffffffffffffff82116117f75760405191611ac2601f8201601f19166020018461180d565b82523d6000602084013e565b606090565b519069ffffffffffffffffffff8216820361026157565b600254604051633fabe5a360e21b81529060a090829060049082906001600160a01b03165afa8015610f19576000809281908293611c85575b506000841315611c4b578015611c1157611b40610e10914261196a565b11611bd75769ffffffffffffffffffff809116911610611b9f5764e8d4a510008111611b695790565b60405162461bcd60e51b815260206004820152600e60248201526d0a0e4d2c6ca40e8dede40d0d2ced60931b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f5374616c65207072696365206461746160801b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271141c9a58d94819185d18481d1bdbc81bdb1960721b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271526f756e64206e6f7420636f6d706c65746560701b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606490fd5b935050905060a0823d60a011611cd4575b81611ca360a0938361180d565b8101031261122f5750611cb581611ad3565b6020820151611ccb608060608501519401611ad3565b91909238611b23565b3d9150611c96565b6001600160a01b031660008181526003602052604090819020905191611d01836117db565b815483526001820154926020810193845260ff6002840154161590608060ff600484159687604086015260038101546060860152015416151591015291611d4f575b5061194b575142101590565b9050600052600760205260ff6040600020541638611d43565b91908110156117805760051b0190565b356001600160a01b03811681036102615790565b6001600160a01b031660008181526007602052604090205460ff16611e14576000526003602052604060002060405190611dc5826117db565b80548252600181015491826020820152608060ff60048160028601541615948515604086015260038101546060860152015416151591015261194b576203f4808101809111610c395742111590565b50600190565b6001600160a01b03811660008181526006602052604090205490919060ff1615611e42575050565b60045490680100000000000000008210156117f757611e6a826001611e8e9401600455611765565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b6004546000198101908111610c39578160005260056020526040600020558060005260066020526040600020600160ff198254161790557fbff36ab077310ef747dcab7b87de0a2be21ee4ad9c8ed40251ffd3ff744235e7600080a2565b6001600160a01b031660008181526006602052604090205460ff16611f0e5750565b8060005260056020526040600020546004546000198101908111610c3957808203611fc5575b50506004548015611faf5760001901611f4c81611765565b81549060018060a01b039060031b1b1916905560045580600052600560205260006040812055806000526006602052604060002060ff1981541690557f8a52807acd44f50b6e4823de532df8cb7e684378369a85e00c4fd8da2bfd32c6600080a2565b634e487b7160e01b600052603160045260246000fd5b611fce90611765565b905460039190911b1c6001600160a01b0316611fed81611e6a84611765565b60005260056020526040600020553880611f34565b6001600160a01b0381166000818152600360205260409020600281018054929493919260ff81161580156123b8575b80156123a8575b61239d57612045836118cc565b61234f57505060ff6004830154161561230e576040516370a0823160e01b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa8015610f195785916000916122d9575b501061228a57604051636eb1769f60e11b81526001600160a01b0383166004820152306024820152602081604481855afa8015610f19578591600091612255575b5010612206576040516323b872dd60e01b81526001600160a01b0392909216600483015230602483015260448201849052602090829060649082906000905af1908115610f19576000916121e7575b50156121975742815562278d00420191824211610c395782816003847f6cd9d6bebf8cc2076dd424f83deb0559d8774d1c44178b4f676f9d50709fb1be9660016040970155015582519182526020820152a2600190565b505060008051602061241c833981519152604051806121df8160609060208152601460208201527315d15512081d1c985b9cd9995c8819985a5b195960621b60408201520190565b0390a2600090565b612200915060203d602011610f1257610f04818361180d565b38612140565b5050505060008051602061241c833981519152606060405160208152601b60208201527f496e73756666696369656e74205745544820616c6c6f77616e636500000000006040820152a2600090565b9150506020813d602011612282575b816122716020938361180d565b8101031261026157849051386120f1565b3d9150612264565b5050505060008051602061241c833981519152604051806121df81606090602081526019602082015278496e73756666696369656e7420574554482062616c616e636560381b60408201520190565b9150506020813d602011612306575b816122f56020938361180d565b8101031261026157849051386120b0565b3d91506122e8565b50505060008051602061241c833981519152606060405160208152601060208201526f139bc815d1551208185c1c1c9bdd985b60821b6040820152a2600090565b61236e945090600492939160ff191690550160ff198154169055611eec565b7faeab0094d0f4ba2e37ab9c32d5eae0cbc49edafca1f7366f8ee1b6946c6dacfe6020604051428152a2600090565b505050505050600090565b506123b283611cdc565b15612038565b5085600052600760205260ff60406000205416612031565b6000546001600160a01b031633036123e457565b63118cdaa760e01b6000523360045260246000fd5b60026001541461240a576002600155565b633ee5aeb560e01b60005260046000fdfe87951482dc5c1eb7f32ab93cd897d85fccfa58819bd33c0aecda71c42cd8898aa2646970667358221220da295d44a74ca6ff83f51034117fa872fd77e24d8c78bf4472157b02c27000b564736f6c634300081c0033",
              "opcodes": "PUSH1 0xA0 CALLVALUE PUSH2 0x1B2 JUMPI PUSH1 0x1F PUSH2 0x2653 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x1B7 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x1B2 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x1CD JUMP JUMPDEST SWAP3 ADD PUSH2 0x1CD JUMP JUMPDEST CALLER ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP5 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x15A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x115 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 MSTORE TIMESTAMP PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH2 0x2471 SWAP1 DUP2 PUSH2 0x1E2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD3B ADD MSTORE DUP2 DUP2 PUSH2 0x111C ADD MSTORE DUP2 DUP2 PUSH2 0x1250 ADD MSTORE DUP2 DUP2 PUSH2 0x15F4 ADD MSTORE PUSH2 0x206E ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420574554482061646472657373000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420707269636520666565642061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B2 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9612A98 EQ PUSH2 0x157B JUMPI DUP1 PUSH4 0x13621A21 EQ PUSH2 0x1560 JUMPI DUP1 PUSH4 0x1EC249A1 EQ PUSH2 0x1521 JUMPI DUP1 PUSH4 0x24E9EDB0 EQ PUSH2 0x1492 JUMPI DUP1 PUSH4 0x374F6D5D EQ PUSH2 0x1456 JUMPI DUP1 PUSH4 0x3AFB0551 EQ PUSH2 0x1433 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x127F JUMPI DUP1 PUSH4 0x4B57B0BE EQ PUSH2 0x123A JUMPI DUP1 PUSH4 0x4C02F62E EQ PUSH2 0x10EE JUMPI DUP1 PUSH4 0x5051A05F EQ PUSH2 0x10D2 JUMPI DUP1 PUSH4 0x507B1E4E EQ PUSH2 0x10B4 JUMPI DUP1 PUSH4 0x511671EE EQ PUSH2 0x1096 JUMPI DUP1 PUSH4 0x53D6FD59 EQ PUSH2 0x1002 JUMPI DUP1 PUSH4 0x544AF5F2 EQ PUSH2 0xFE4 JUMPI DUP1 PUSH4 0x5F5028B5 EQ PUSH2 0xCCF JUMPI DUP1 PUSH4 0x67AA682B EQ PUSH2 0xCAF JUMPI DUP1 PUSH4 0x6C7327A2 EQ PUSH2 0xA96 JUMPI DUP1 PUSH4 0x6C87D2C2 EQ PUSH2 0xA32 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x90B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0x76FC0D24 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0x803AE518 EQ PUSH2 0x84F JUMPI DUP1 PUSH4 0x88447175 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0x8886FCC5 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7AF JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x78C JUMPI DUP1 PUSH4 0x97AD7E02 EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x72A JUMPI DUP1 PUSH4 0xA095E8F9 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0xB0FD8954 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xBEBE4A57 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xBFB8E2F2 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xBFD97CD6 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xC1A287E2 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xC96679FE EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xD474F84F EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xF046395A EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xF25B9CAA EQ PUSH2 0x266 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x1F1 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0xE10 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A4 PUSH2 0x16EF JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x30C PUSH2 0x23D0 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND GAS CALL PUSH2 0x32D PUSH2 0x1A93 JUMP JUMPDEST POP ISZERO PUSH2 0x335 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2045544820746F207769746864726177 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x100 PUSH2 0x3C6 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3EC DUP3 PUSH2 0x17DB JUMP JUMPDEST DUP3 SLOAD SWAP4 DUP5 DUP4 MSTORE PUSH1 0x1 DUP5 ADD SLOAD SWAP4 DUP5 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND ISZERO ISZERO SWAP2 DUP3 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 DUP6 PUSH1 0x60 DUP11 ADD MSTORE ADD SLOAD AND SWAP6 ADD SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP2 PUSH2 0x44F PUSH2 0x449 DUP6 PUSH2 0x1CDC JUMP JUMPDEST SWAP5 PUSH2 0x18CC JUMP JUMPDEST SWAP5 MLOAD ISZERO ISZERO SWAP6 PUSH1 0x40 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4A6 PUSH2 0x16EF JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x3F480 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x52F PUSH2 0x519 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x521 PUSH2 0x23D0 JUMP JUMPDEST PUSH2 0x529 PUSH2 0x1874 JUMP JUMPDEST SWAP1 PUSH2 0x2002 JUMP JUMPDEST ISZERO PUSH2 0x536 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E742070726F63657373696E67206661696C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH2 0x59E PUSH2 0x599 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x100 PUSH2 0x5C4 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0x5CC PUSH2 0x1874 JUMP JUMPDEST SWAP1 PUSH1 0x4 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH5 0x2540BE400 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x278D00 PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x3F480 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x14 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE ADDRESS PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x261 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x261 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x261 JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x261 JUMPI PUSH2 0x66B PUSH2 0x1756 JUMP JUMPDEST PUSH2 0x673 PUSH2 0x23D0 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x683 JUMPI STOP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6A1 PUSH2 0x69C DUP4 DUP9 DUP11 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x1D78 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH2 0x6C5 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x70F JUMPI JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x6DE PUSH2 0x69C DUP4 DUP9 DUP11 PUSH2 0x1D68 JUMP JUMPDEST AND PUSH32 0x995D2434D36C9BCEAAB42C56EFE51E8FFE41FD11CABEFD9E2CB83700D8B2035E PUSH1 0x20 PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE LOG2 ADD PUSH2 0x67A JUMP JUMPDEST PUSH2 0x725 PUSH2 0x720 PUSH2 0x69C DUP4 DUP9 DUP11 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x1EEC JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x74B PUSH2 0x16EF JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH2 0x59E PUSH2 0x787 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x1CDC JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH2 0x7A7 PUSH2 0x1AEA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH32 0xB347C6BF445109E788A01515E0DBA872723DDF737844D1E8BFFB97C1FC2F3C22 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x261 JUMPI PUSH2 0x878 PUSH1 0x20 SWAP2 PUSH2 0x1765 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x8AA PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x8CB PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH2 0x919 CALLDATASIZE PUSH2 0x1705 JUMP JUMPDEST POP POP PUSH3 0x15180 PUSH2 0x92B PUSH1 0x8 SLOAD TIMESTAMP PUSH2 0x196A JUMP JUMPDEST LT ISZERO PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT DUP1 PUSH2 0xA28 JUMPI JUMPDEST ISZERO PUSH2 0xA20 JUMPI PUSH2 0x94D DUP2 PUSH2 0x1765 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x968 DUP2 PUSH2 0x1CDC JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xA04 JUMPI JUMPDEST POP PUSH2 0x982 JUMPI PUSH2 0x97D SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST POP POP POP PUSH1 0x1 JUMPDEST DUP2 PUSH2 0x9FC JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH2 0x99F DUP4 DUP4 PUSH2 0x180D JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 DUP2 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x9E3 JUMPI POP POP PUSH1 0x60 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x60 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0x9C0 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x98E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND DUP6 PUSH2 0x96F JUMP JUMPDEST POP SWAP1 POP PUSH2 0x988 JUMP JUMPDEST POP PUSH1 0x14 DUP2 LT PUSH2 0x93F JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xA5B JUMPI PUSH2 0x878 PUSH1 0x20 SWAP2 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0xAAA PUSH2 0x23F9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xAC5 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1A0D JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xC9C JUMPI JUMPDEST PUSH2 0xAE8 PUSH2 0x1874 JUMP JUMPDEST DUP1 CALLVALUE LT PUSH2 0xC60 JUMPI PUSH1 0x0 SWAP1 DUP1 CALLVALUE GT PUSH2 0xC4F JUMPI JUMPDEST POP PUSH3 0x278D00 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0xC39 JUMPI PUSH2 0xB96 PUSH2 0xB15 DUP4 CALLVALUE PUSH2 0x196A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xB24 DUP4 PUSH2 0x17DB JUMP JUMPDEST TIMESTAMP DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 DUP6 DUP3 MSTORE PUSH2 0xB7A PUSH1 0x40 DUP6 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 MLOAD DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD ISZERO ISZERO PUSH1 0x2 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB9F CALLER PUSH2 0x1E1A JUMP JUMPDEST PUSH2 0xBA9 DUP3 CALLVALUE PUSH2 0x196A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6CD9D6BEBF8CC2076DD424F83DEB0559D8774D1C44178B4F676F9D50709FB1BE PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 PUSH2 0xBE7 JUMPI JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 CALLER GAS CALL PUSH2 0xBF8 PUSH2 0x1A93 JUMP JUMPDEST POP ISZERO PUSH2 0xC04 JUMPI DUP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC5A SWAP2 POP CALLVALUE PUSH2 0x196A JUMP JUMPDEST DUP2 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xCAA PUSH1 0x14 PUSH1 0x4 SLOAD LT PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0xAE0 JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH5 0x2540BE400 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0xCE8 PUSH2 0x23F9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xD03 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1A0D JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xFD1 JUMPI JUMPDEST PUSH2 0xD26 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xF9C JUMPI JUMPDEST POP LT PUSH2 0xF5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xF25 JUMPI JUMPDEST PUSH2 0xDC1 SWAP3 POP LT ISZERO PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xF19 JUMPI PUSH2 0xE09 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xEEA JUMPI JUMPDEST POP PUSH2 0x19CA JUMP JUMPDEST PUSH3 0x278D00 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0xC39 JUMPI PUSH2 0xE7D PUSH1 0x40 MLOAD PUSH2 0xE25 DUP2 PUSH2 0x17DB JUMP JUMPDEST TIMESTAMP DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x40 DUP4 ADD PUSH1 0x1 DUP2 MSTORE PUSH2 0xB7A PUSH1 0x60 DUP6 ADD SWAP2 DUP9 DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP4 PUSH1 0x1 DUP6 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 MLOAD DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD ISZERO ISZERO PUSH1 0x2 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE86 CALLER PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6CD9D6BEBF8CC2076DD424F83DEB0559D8774D1C44178B4F676F9D50709FB1BE PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xB347C6BF445109E788A01515E0DBA872723DDF737844D1E8BFFB97C1FC2F3C22 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0xF0C SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF12 JUMPI JUMPDEST PUSH2 0xF04 DUP2 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x19B2 JUMP JUMPDEST DUP4 PUSH2 0xE03 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF53 JUMPI JUMPDEST DUP2 PUSH2 0xF40 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI DUP3 PUSH2 0xDC1 SWAP2 MLOAD PUSH2 0xDB5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x496E73756666696369656E7420574554482062616C616E6365 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xFC9 JUMPI JUMPDEST DUP2 PUSH2 0xFB8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI DUP3 SWAP1 MLOAD DUP5 PUSH2 0xD7D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFAB JUMP JUMPDEST PUSH2 0xFDF PUSH1 0x14 PUSH1 0x4 SLOAD LT PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x101B PUSH2 0x16EF JUMP JUMPDEST PUSH32 0x995D2434D36C9BCEAAB42C56EFE51E8FFE41FD11CABEFD9E2CB83700D8B2035E PUSH1 0x20 PUSH2 0x1046 PUSH2 0x1756 JUMP JUMPDEST PUSH2 0x104E PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 ISZERO ISZERO AND OR SWAP1 SSTORE SWAP4 DUP2 PUSH2 0x1087 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST PUSH2 0x1090 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST DUP5 PUSH2 0x107B JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x1107 PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xF19 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1205 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x11CA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x44 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xF19 JUMPI PUSH2 0x19 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x11AB JUMPI POP PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x11C4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF12 JUMPI PUSH2 0xF04 DUP2 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP3 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F205745544820746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1232 JUMPI JUMPDEST DUP2 PUSH2 0x121F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x122F JUMPI POP MLOAD DUP3 PUSH2 0x115D JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1212 JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH2 0x128D CALLDATASIZE PUSH2 0x1705 JUMP JUMPDEST POP POP PUSH3 0x15180 PUSH2 0x129F PUSH1 0x8 SLOAD TIMESTAMP PUSH2 0x196A JUMP JUMPDEST LT PUSH2 0x1402 JUMPI TIMESTAMP PUSH1 0x8 SSTORE PUSH2 0x12B0 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x12BF DUP3 PUSH2 0x1977 JUMP JUMPDEST SWAP1 PUSH2 0x12CD PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x12DC DUP5 PUSH2 0x1977 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY DUP4 SWAP1 DUP5 JUMPDEST DUP5 DUP2 LT DUP1 PUSH2 0x13F8 JUMPI JUMPDEST ISZERO PUSH2 0x136C JUMPI PUSH2 0x12FE DUP2 PUSH2 0x1765 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1319 DUP2 PUSH2 0x1CDC JUMP JUMPDEST DUP1 PUSH2 0x1353 JUMPI JUMPDEST PUSH2 0x1333 JUMPI JUMPDEST POP PUSH2 0x132E SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH2 0x12E7 JUMP JUMPDEST DUP4 PUSH2 0x134C SWAP2 PUSH2 0x1346 PUSH2 0x132E SWAP5 SWAP7 DUP9 PUSH2 0x199E JUMP JUMPDEST MSTORE PUSH2 0x198F JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1324 JUMP JUMPDEST POP DUP1 DUP8 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 DUP10 KECCAK256 ADD SLOAD AND PUSH2 0x131F JUMP JUMPDEST POP DUP5 SWAP3 DUP4 JUMPDEST DUP4 DUP2 LT PUSH2 0x13AB JUMPI JUMPDEST PUSH32 0x37AEB7A78769E88660E2546F8AC9047631D3969FAAA2DCE0188F6A220AC99C17 PUSH1 0x40 DUP7 DUP2 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH3 0x186A0 GAS LT PUSH2 0x13F3 JUMPI PUSH2 0x13D2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13CB DUP5 DUP7 PUSH2 0x199E JUMP JUMPDEST MLOAD AND PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x13DF JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1371 JUMP JUMPDEST SWAP4 PUSH2 0x13EB PUSH1 0x1 SWAP2 PUSH2 0x198F JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1379 JUMP JUMPDEST POP PUSH1 0x14 DUP4 LT PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x546F6F206561726C79 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH2 0x59E PUSH2 0x1451 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x18CC JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x60 PUSH2 0x1471 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0x1479 PUSH2 0x1874 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH5 0x2540BE400 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x14C0 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x1796 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH2 0x14F3 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x75703D723C382BAF9126C0B27310A322412B9E2BBAF52E74AFCF50B107A7905F PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1542 PUSH2 0x16EF JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH2 0x7A7 PUSH2 0x1874 JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x15A9 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x1796 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x16B8 JUMPI PUSH2 0x15CA PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x44 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x1684 JUMPI JUMPDEST PUSH2 0x1630 SWAP3 POP LT ISZERO PUSH2 0x182F JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x1655 CALLER PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xB347C6BF445109E788A01515E0DBA872723DDF737844D1E8BFFB97C1FC2F3C22 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x16B0 JUMPI JUMPDEST DUP2 PUSH2 0x169E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI PUSH2 0x1630 SWAP2 MLOAD PUSH2 0x1624 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E48195B98589B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x261 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x261 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x261 JUMPI DUP3 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x261 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x261 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x261 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x261 JUMPI JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x179D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379030B1BA34BB329039BAB139B1B934B83A34B7B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1836 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x15D1551208185C1C1C9BDD985B081C995C5D5A5C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x187C PUSH2 0x1AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1893 JUMPI PUSH12 0x204FCE5E3E25026110000000 DIV SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420455448207072696365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP2 PUSH2 0x18F1 DUP4 PUSH2 0x17DB JUMP JUMPDEST DUP2 SLOAD DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 PUSH1 0x20 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND ISZERO SWAP1 PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 DUP5 ISZERO SWAP7 DUP8 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE SWAP2 PUSH2 0x1951 JUMPI JUMPDEST POP PUSH2 0x194B JUMPI MLOAD PUSH3 0x3F480 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xC39 JUMPI TIMESTAMP GT SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CODESIZE PUSH2 0x1933 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC39 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x17F7 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xC39 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x261 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x19D1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15D15512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A14 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x155CD95C881A5CC81DDA1A5D195B1A5CDD1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A56 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13585E1A5B5D5B481D5CD95C9CC81C995858DA1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1ACE JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x17F7 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1AC2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x180D JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x261 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 PUSH1 0xA0 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI PUSH1 0x0 DUP1 SWAP3 DUP2 SWAP1 DUP3 SWAP4 PUSH2 0x1C85 JUMPI JUMPDEST POP PUSH1 0x0 DUP5 SGT ISZERO PUSH2 0x1C4B JUMPI DUP1 ISZERO PUSH2 0x1C11 JUMPI PUSH2 0x1B40 PUSH2 0xE10 SWAP2 TIMESTAMP PUSH2 0x196A JUMP JUMPDEST GT PUSH2 0x1BD7 JUMPI PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 AND LT PUSH2 0x1B9F JUMPI PUSH5 0xE8D4A51000 DUP2 GT PUSH2 0x1B69 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0xA0E4D2C6CA40E8DEDE40D0D2CED PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5374616C652070726963652064617461 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141C9A58D94819185D18481D1BDBC81BDB19 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x526F756E64206E6F7420636F6D706C657465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP4 POP POP SWAP1 POP PUSH1 0xA0 DUP3 RETURNDATASIZE PUSH1 0xA0 GT PUSH2 0x1CD4 JUMPI JUMPDEST DUP2 PUSH2 0x1CA3 PUSH1 0xA0 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x122F JUMPI POP PUSH2 0x1CB5 DUP2 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1CCB PUSH1 0x80 PUSH1 0x60 DUP6 ADD MLOAD SWAP5 ADD PUSH2 0x1AD3 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 CODESIZE PUSH2 0x1B23 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP2 PUSH2 0x1D01 DUP4 PUSH2 0x17DB JUMP JUMPDEST DUP2 SLOAD DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 PUSH1 0x20 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND ISZERO SWAP1 PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 DUP5 ISZERO SWAP7 DUP8 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE SWAP2 PUSH2 0x1D4F JUMPI JUMPDEST POP PUSH2 0x194B JUMPI MLOAD TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CODESIZE PUSH2 0x1D43 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1E14 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1DC5 DUP3 PUSH2 0x17DB JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP2 DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 DUP2 PUSH1 0x2 DUP7 ADD SLOAD AND ISZERO SWAP5 DUP6 ISZERO PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE PUSH2 0x194B JUMPI PUSH3 0x3F480 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xC39 JUMPI TIMESTAMP GT ISZERO SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1E42 JUMPI POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x17F7 JUMPI PUSH2 0x1E6A DUP3 PUSH1 0x1 PUSH2 0x1E8E SWAP5 ADD PUSH1 0x4 SSTORE PUSH2 0x1765 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL SWAP4 SWAP1 SWAP2 SHL NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xC39 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xBFF36AB077310EF747DCAB7B87DE0A2BE21EE4AD9C8ED40251FFD3FF744235E7 PUSH1 0x0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F0E JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xC39 JUMPI DUP1 DUP3 SUB PUSH2 0x1FC5 JUMPI JUMPDEST POP POP PUSH1 0x4 SLOAD DUP1 ISZERO PUSH2 0x1FAF JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1F4C DUP2 PUSH2 0x1765 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x4 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0x8A52807ACD44F50B6E4823DE532DF8CB7E684378369A85E00C4FD8DA2BFD32C6 PUSH1 0x0 DUP1 LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1FCE SWAP1 PUSH2 0x1765 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FED DUP2 PUSH2 0x1E6A DUP5 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CODESIZE DUP1 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP3 SWAP5 SWAP4 SWAP2 SWAP3 PUSH1 0xFF DUP2 AND ISZERO DUP1 ISZERO PUSH2 0x23B8 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x23A8 JUMPI JUMPDEST PUSH2 0x239D JUMPI PUSH2 0x2045 DUP4 PUSH2 0x18CC JUMP JUMPDEST PUSH2 0x234F JUMPI POP POP PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND ISZERO PUSH2 0x230E JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI DUP6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x22D9 JUMPI JUMPDEST POP LT PUSH2 0x228A JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI DUP6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2255 JUMPI JUMPDEST POP LT PUSH2 0x2206 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF19 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x21E7 JUMPI JUMPDEST POP ISZERO PUSH2 0x2197 JUMPI TIMESTAMP DUP2 SSTORE PUSH3 0x278D00 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xC39 JUMPI DUP3 DUP2 PUSH1 0x3 DUP5 PUSH32 0x6CD9D6BEBF8CC2076DD424F83DEB0559D8774D1C44178B4F676F9D50709FB1BE SWAP7 PUSH1 0x1 PUSH1 0x40 SWAP8 ADD SSTORE ADD SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x241C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x21DF DUP2 PUSH1 0x60 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x15D15512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2200 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF12 JUMPI PUSH2 0xF04 DUP2 DUP4 PUSH2 0x180D JUMP JUMPDEST CODESIZE PUSH2 0x2140 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x241C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205745544820616C6C6F77616E63650000000000 PUSH1 0x40 DUP3 ADD MSTORE LOG2 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2282 JUMPI JUMPDEST DUP2 PUSH2 0x2271 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI DUP5 SWAP1 MLOAD CODESIZE PUSH2 0x20F1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2264 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x241C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x21DF DUP2 PUSH1 0x60 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 DUP3 ADD MSTORE PUSH25 0x496E73756666696369656E7420574554482062616C616E6365 PUSH1 0x38 SHL PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2306 JUMPI JUMPDEST DUP2 PUSH2 0x22F5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI DUP5 SWAP1 MLOAD CODESIZE PUSH2 0x20B0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x22E8 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x241C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 DUP3 ADD MSTORE PUSH16 0x139BC815D1551208185C1C1C9BDD985B PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE LOG2 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x236E SWAP5 POP SWAP1 PUSH1 0x4 SWAP3 SWAP4 SWAP2 PUSH1 0xFF NOT AND SWAP1 SSTORE ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0x1EEC JUMP JUMPDEST PUSH32 0xAEAB0094D0F4BA2E37AB9C32D5EAE0CBC49EDAFCA1F7366F8EE1B6946C6DACFE PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG2 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x23B2 DUP4 PUSH2 0x1CDC JUMP JUMPDEST ISZERO PUSH2 0x2038 JUMP JUMPDEST POP DUP6 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2031 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x23E4 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x240A JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID DUP8 SWAP6 EQ DUP3 0xDC TLOAD 0x1E 0xB7 RETURN 0x2A 0xB9 EXTCODECOPY 0xD8 SWAP8 0xD8 PUSH0 0xCC STATICCALL PC DUP2 SWAP12 0xD3 EXTCODECOPY EXP 0xEC 0xDA PUSH18 0xC42CD8898AA2646970667358221220DA295D PREVRANDAO 0xA7 0x4C 0xA6 SELFDESTRUCT DUP4 CREATE2 LT CALLVALUE GT PUSH32 0xA872FD77E24D8C78BF4472157B02C27000B564736F6C634300081C0033000000 ",
              "sourceMap": "807:22171:8:-:0;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;-1:-1:-1;;;;;807:22171:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;3527:10;1273:26:4;1269:95;;-1:-1:-1;807:22171:8;;3527:10;-1:-1:-1;;;;;;807:22171:8;;;;;;;;;;3527:10;;-1:-1:-1;;;;;807:22171:8;;3052:40:4;;-1:-1:-1;3052:40:4;1857:1:7;807:22171:8;;-1:-1:-1;;;;;807:22171:8;;3557:24;;807:22171;;-1:-1:-1;;;;;;807:22171:8;;3630:24;;807:22171;;3698:45;807:22171;;-1:-1:-1;;;;;;807:22171:8;;;;;;;3753:30;;3814:15;3793:36;807:22171;;;;;;;;;3753:30;807:22171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;;;;;;;;;1269:95:4;1322:31;;;-1:-1:-1;1322:31:4;-1:-1:-1;1322:31:4;807:22171:8;;-1:-1:-1;1322:31:4;807:22171:8;-1:-1:-1;807:22171:8;;;;;;-1:-1:-1;807:22171:8;;;;;-1:-1:-1;807:22171:8;;;;-1:-1:-1;;;;;807:22171:8;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 5871,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool": {
                  "entryPoint": 5974,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 6578,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes_calldata": {
                  "entryPoint": 5893,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "abi_decode_uint80_fromMemory": {
                  "entryPoint": 6867,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_address_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_bc06": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_bf46": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 6519,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "calldata_array_index_access_address_dyn_calldata": {
                  "entryPoint": 7528,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 6506,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_returndata": {
                  "entryPoint": 6803,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 6157,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_20411": {
                  "entryPoint": 6107,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_addUser": {
                  "entryPoint": 7706,
                  "id": 758,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 9168,
                  "id": 198,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getLatestPrice": {
                  "entryPoint": 6890,
                  "id": 682,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_getRequiredWETHAmount": {
                  "entryPoint": 6260,
                  "id": 720,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_hasActiveSubscription": {
                  "entryPoint": 7564,
                  "id": 1229,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_isPaymentDue": {
                  "entryPoint": 7388,
                  "id": 1262,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_isSubscriptionExpired": {
                  "entryPoint": 6348,
                  "id": 1298,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 9209,
                  "id": 418,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_processUserPayment": {
                  "entryPoint": 8194,
                  "id": 1962,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_removeUser": {
                  "entryPoint": 7916,
                  "id": 826,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 6543,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_address_dyn": {
                  "entryPoint": 6558,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_calldatat_address": {
                  "entryPoint": 7544,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 6669,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_3d9e": {
                  "entryPoint": 6038,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_bf46": {
                  "entryPoint": 6602,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_c3d7": {
                  "entryPoint": 6735,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ca02": {
                  "entryPoint": 6191,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 5989,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "458": [
                  {
                    "length": 32,
                    "start": 3387
                  },
                  {
                    "length": 32,
                    "start": 4380
                  },
                  {
                    "length": 32,
                    "start": 4688
                  },
                  {
                    "length": 32,
                    "start": 5620
                  },
                  {
                    "length": 32,
                    "start": 8302
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806309612a981461157b57806313621a21146115605780631ec249a11461152157806324e9edb014611492578063374f6d5d146114565780633afb0551146114335780634585e33b1461127f5780634b57b0be1461123a5780634c02f62e146110ee5780635051a05f146110d2578063507b1e4e146110b4578063511671ee1461109657806353d6fd5914611002578063544af5f214610fe45780635f5028b514610ccf57806367aa682b14610caf5780636c7327a214610a965780636c87d2c214610a325780636e04ff0d1461090b578063715018a6146108b257806376fc0d2414610891578063803ae5181461084f57806388447175146107f65780638886fcc5146107d85780638da5cb5b146107af5780638e15f4731461078c57806397ad7e02146107695780639b19251a1461072a578063a095e8f91461060d578063b0fd8954146105a8578063bebe4a571461057b578063bfb8e2f2146104fd578063bfd97cd6146104dd578063c1a287e2146104bf578063c96679fe14610485578063d474f84f146103aa578063e086e5ec146102f3578063f046395a14610283578063f25b9caa146102665763f2fde38b0361000e5734610261576020366003190112610261576101f16116ef565b6101f96123d0565b6001600160a01b0316801561024b57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b34610261576000366003190112610261576020604051610e108152f35b34610261576020366003190112610261576001600160a01b036102a46116ef565b16600052600360205260a0604060002080549060018101549060ff60028201541660ff600460038401549301541692604051948552602085015215156040840152606083015215156080820152f35b346102615760003660031901126102615761030c6123d0565b4780156103705760008080809360018060a01b038254165af161032d611a93565b501561033557005b60405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b6044820152606490fd5b34610261576020366003190112610261576101006103c66116ef565b60018060a01b03811690816000526003602052604060002090604051906103ec826117db565b82549384835260018401549384602085015260ff600282015416151591826040860152608060ff60046003850154948560608a015201541695019415158552600052600760205260ff604060002054169161044f61044985611cdc565b946118cc565b945115159560405197885260208801526040870152606086015215156080850152151560a0840152151560c083015260e0820152f35b34610261576020366003190112610261576001600160a01b036104a66116ef565b1660005260056020526020604060002054604051908152f35b346102615760003660031901126102615760206040516203f4808152f35b3461026157600036600319011261026157602060405164e8d4a510008152f35b346102615760203660031901126102615761052f6105196116ef565b6105216123d0565b610529611874565b90612002565b1561053657005b60405162461bcd60e51b815260206004820152601960248201527f5061796d656e742070726f63657373696e67206661696c6564000000000000006044820152606490fd5b3461026157602036600319011261026157602061059e6105996116ef565b611d8c565b6040519015158152f35b34610261576000366003190112610261576101006105c4611aea565b6105cc611874565b9060045490604051926402540be40084526020840152604083015262278d0060608301526203f4806080830152601460a083015260c08201523060e0820152f35b346102615760403660031901126102615760043567ffffffffffffffff8111610261573660238201121561026157806004013567ffffffffffffffff8111610261576024820191602436918360051b0101116102615761066b611756565b6106736123d0565b8015159060005b83811061068357005b6001906001600160a01b036106a161069c83888a611d68565b611d78565b166000526007602052826106c58160406000209060ff801983541691151516179055565b61070f575b818060a01b036106de61069c83888a611d68565b167f995d2434d36c9bceaab42c56efe51e8ffe41fd11cabefd9e2cb83700d8b2035e6020604051878152a20161067a565b61072561072061069c83888a611d68565b611eec565b6106ca565b34610261576020366003190112610261576001600160a01b0361074b6116ef565b166000526007602052602060ff604060002054166040519015158152f35b3461026157602036600319011261026157602061059e6107876116ef565b611cdc565b346102615760003660031901126102615760206107a7611aea565b604051908152f35b34610261576000366003190112610261576000546040516001600160a01b039091168152602090f35b34610261576000366003190112610261576020600454604051908152f35b3461026157600036600319011261026157336000526003602052600460406000200160ff198154169055604051600081527fb347c6bf445109e788a01515e0dba872723ddf737844d1e8bffb97c1fc2f3c2260203392a2005b346102615760203660031901126102615760043560045481101561026157610878602091611765565b905460405160039290921b1c6001600160a01b03168152f35b34610261576020366003190112610261576108aa6123d0565b600435600855005b34610261576000366003190112610261576108cb6123d0565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102615761091936611705565b50506201518061092b6008544261196a565b101560006004549060005b82811080610a28575b15610a205761094d81611765565b905460039190911b1c6001600160a01b031661096881611cdc565b9081610a04575b506109825761097d9061198f565b610936565b50505060015b816109fc575b5060405160209161099f838361180d565b60008252604051928391151582526040818301528251908160408401526000935b8285106109e3575050606092506000838284010152601f80199101168101030190f35b84810182015186860160600152938101938593506109c0565b90508161098e565b9050600052600360205260ff600460406000200154168561096f565b509050610988565b506014811061093f565b3461026157602036600319011261026157600435600454811015610a5b57610878602091611765565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606490fd5b600036600319011261026157610aaa6123f9565b336000526007602052610ac560ff6040600020541615611a0d565b33600052600360205260ff6002604060002001541615610c9c575b610ae8611874565b803410610c6057600090803411610c4f575b5062278d004201804211610c3957610b96610b15833461196a565b600460405191610b24836117db565b4283526020830190858252610b7a604085016001815260608601928352608086019360008552336000526003602052604060002096518755516001870155511515600286019060ff801983541691151516179055565b51600384015551151591019060ff801983541691151516179055565b610b9f33611e1a565b610ba9823461196a565b9060405191825260208201527f6cd9d6bebf8cc2076dd424f83deb0559d8774d1c44178b4f676f9d50709fb1be60403392a280610be7575b60018055005b600080808093335af1610bf8611a93565b5015610c045780610be1565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b610c5a91503461196a565b81610afa565b60405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606490fd5b610caa601460045410611a4f565b610ae0565b346102615760003660031901126102615760206040516402540be4008152f35b3461026157600036600319011261026157610ce86123f9565b336000526007602052610d0360ff6040600020541615611a0d565b33600052600360205260ff6002604060002001541615610fd1575b610d26611874565b6040516370a0823160e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa8015610f19578391600091610f9c575b5010610f5b57604051636eb1769f60e11b8152336004820152306024820152602081604481855afa8015610f19578390600090610f25575b610dc19250101561182f565b6040516323b872dd60e01b81523360048201523060248201526044810183905290602090829060649082906000905af18015610f1957610e0991600091610eea575b506119ca565b62278d004201804211610c3957610e7d604051610e25816117db565b4281526004602082018481526040830160018152610b7a6060850191888352608086019360018552336000526003602052604060002096518755516001870155511515600286019060ff801983541691151516179055565b610e8633611e1a565b60405191825260208201527f6cd9d6bebf8cc2076dd424f83deb0559d8774d1c44178b4f676f9d50709fb1be60403392a2604051600181527fb347c6bf445109e788a01515e0dba872723ddf737844d1e8bffb97c1fc2f3c2260203392a260018055005b610f0c915060203d602011610f12575b610f04818361180d565b8101906119b2565b83610e03565b503d610efa565b6040513d6000823e3d90fd5b50506020813d602011610f53575b81610f406020938361180d565b810103126102615782610dc19151610db5565b3d9150610f33565b60405162461bcd60e51b8152602060048201526019602482015278496e73756666696369656e7420574554482062616c616e636560381b6044820152606490fd5b9150506020813d602011610fc9575b81610fb86020938361180d565b810103126102615782905184610d7d565b3d9150610fab565b610fdf601460045410611a4f565b610d1e565b3461026157600036600319011261026157602060405162278d008152f35b346102615760403660031901126102615761101b6116ef565b7f995d2434d36c9bceaab42c56efe51e8ffe41fd11cabefd9e2cb83700d8b2035e6020611046611756565b61104e6123d0565b6001600160a01b03841660008181526007845260409020805460ff191660ff841515161790559381611087575b506040519015158152a2005b61109090611eec565b8461107b565b34610261576000366003190112610261576020600854604051908152f35b34610261576000366003190112610261576020604051620151808152f35b3461026157600036600319011261026157602060405160148152f35b34610261576000366003190112610261576111076123d0565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa908115610f1957600091611205575b5080156111ca57602090604460018060a01b03600054166000604051958694859363a9059cbb60e01b8552600485015260248401525af18015610f1957610019916000916111ab57506119ca565b6111c4915060203d602011610f1257610f04818361180d565b82610e03565b60405162461bcd60e51b81526020600482015260136024820152724e6f205745544820746f20776974686472617760681b6044820152606490fd5b906020823d602011611232575b8161121f6020938361180d565b8101031261122f5750518261115d565b80fd5b3d9150611212565b34610261576000366003190112610261576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346102615761128d36611705565b50506201518061129f6008544261196a565b1061140257426008556112b0611874565b6004546000916112bf82611977565b906112cd604051928361180d565b828252601f196112dc84611977565b013660208401378390845b848110806113f8575b1561136c576112fe81611765565b905460039190911b1c6001600160a01b031661131981611cdc565b80611353575b611333575b5061132e9061198f565b6112e7565b8361134c9161134661132e94968861199e565b5261198f565b9290611324565b50808752600360205260ff60046040892001541661131f565b508492835b8381106113ab575b7f37aeb7a78769e88660e2546f8ac9047631d3969faaa2dce0188f6a220ac99c176040868151904282526020820152a1005b620186a05a106113f3576113d2836001600160a01b036113cb848661199e565b5116612002565b6113df575b600101611371565b936113eb60019161198f565b9490506113d7565b611379565b50601483106112f0565b60405162461bcd60e51b8152602060048201526009602482015268546f6f206561726c7960b81b6044820152606490fd5b3461026157602036600319011261026157602061059e6114516116ef565b6118cc565b34610261576000366003190112610261576060611471611aea565b611479611874565b90604051916402540be400835260208301526040820152f35b34610261576000366003190112610261573360005260036020526114c060ff60026040600020015416611796565b33600081815260036020526040902060028101805460ff199081169091556004909101805490911690556114f390611eec565b6040514281527f75703d723c382baf9126c0b27310a322412b9e2bbaf52e74afcf50b107a7905f60203392a2005b34610261576020366003190112610261576001600160a01b036115426116ef565b166000526006602052602060ff604060002054166040519015158152f35b346102615760003660031901126102615760206107a7611874565b34610261576000366003190112610261573360005260036020526115a960ff60026040600020015416611796565b33600052600360205260ff600460406000200154166116b8576115ca611874565b604051636eb1769f60e11b8152336004820152306024820152906020826044816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa8015610f1957600090611684575b6116309250101561182f565b3360005260036020526004604060002001600160ff1982541617905561165533611e1a565b604051600181527fb347c6bf445109e788a01515e0dba872723ddf737844d1e8bffb97c1fc2f3c2260203392a2005b506020823d6020116116b0575b8161169e6020938361180d565b81010312610261576116309151611624565b3d9150611691565b60405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e48195b98589b1959608a1b6044820152606490fd5b600435906001600160a01b038216820361026157565b9060206003198301126102615760043567ffffffffffffffff811161026157826023820112156102615780600401359267ffffffffffffffff84116102615760248483010111610261576024019190565b60243590811515820361026157565b60045481101561178057600460005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b1561179d57565b60405162461bcd60e51b815260206004820152601660248201527527379030b1ba34bb329039bab139b1b934b83a34b7b760511b6044820152606490fd5b60a0810190811067ffffffffffffffff8211176117f757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176117f757604052565b1561183657565b60405162461bcd60e51b815260206004820152601660248201527515d1551208185c1c1c9bdd985b081c995c5d5a5c995960521b6044820152606490fd5b61187c611aea565b8015611893576b204fce5e3e250261100000000490565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c69642045544820707269636560781b6044820152606490fd5b6001600160a01b0316600081815260036020526040908190209051916118f1836117db565b815483526001820154926020810193845260ff6002840154161590608060ff600484159687604086015260038101546060860152015416151591015291611951575b5061194b57516203f4808101809111610c3957421190565b50600090565b9050600052600760205260ff6040600020541638611933565b91908203918211610c3957565b67ffffffffffffffff81116117f75760051b60200190565b6000198114610c395760010190565b80518210156117805760209160051b010190565b90816020910312610261575180151581036102615790565b156119d157565b60405162461bcd60e51b815260206004820152601460248201527315d15512081d1c985b9cd9995c8819985a5b195960621b6044820152606490fd5b15611a1457565b60405162461bcd60e51b8152602060048201526013602482015272155cd95c881a5cc81dda1a5d195b1a5cdd1959606a1b6044820152606490fd5b15611a5657565b60405162461bcd60e51b815260206004820152601560248201527413585e1a5b5d5b481d5cd95c9cc81c995858da1959605a1b6044820152606490fd5b3d15611ace573d9067ffffffffffffffff82116117f75760405191611ac2601f8201601f19166020018461180d565b82523d6000602084013e565b606090565b519069ffffffffffffffffffff8216820361026157565b600254604051633fabe5a360e21b81529060a090829060049082906001600160a01b03165afa8015610f19576000809281908293611c85575b506000841315611c4b578015611c1157611b40610e10914261196a565b11611bd75769ffffffffffffffffffff809116911610611b9f5764e8d4a510008111611b695790565b60405162461bcd60e51b815260206004820152600e60248201526d0a0e4d2c6ca40e8dede40d0d2ced60931b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f5374616c65207072696365206461746160801b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271141c9a58d94819185d18481d1bdbc81bdb1960721b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271526f756e64206e6f7420636f6d706c65746560701b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606490fd5b935050905060a0823d60a011611cd4575b81611ca360a0938361180d565b8101031261122f5750611cb581611ad3565b6020820151611ccb608060608501519401611ad3565b91909238611b23565b3d9150611c96565b6001600160a01b031660008181526003602052604090819020905191611d01836117db565b815483526001820154926020810193845260ff6002840154161590608060ff600484159687604086015260038101546060860152015416151591015291611d4f575b5061194b575142101590565b9050600052600760205260ff6040600020541638611d43565b91908110156117805760051b0190565b356001600160a01b03811681036102615790565b6001600160a01b031660008181526007602052604090205460ff16611e14576000526003602052604060002060405190611dc5826117db565b80548252600181015491826020820152608060ff60048160028601541615948515604086015260038101546060860152015416151591015261194b576203f4808101809111610c395742111590565b50600190565b6001600160a01b03811660008181526006602052604090205490919060ff1615611e42575050565b60045490680100000000000000008210156117f757611e6a826001611e8e9401600455611765565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b6004546000198101908111610c39578160005260056020526040600020558060005260066020526040600020600160ff198254161790557fbff36ab077310ef747dcab7b87de0a2be21ee4ad9c8ed40251ffd3ff744235e7600080a2565b6001600160a01b031660008181526006602052604090205460ff16611f0e5750565b8060005260056020526040600020546004546000198101908111610c3957808203611fc5575b50506004548015611faf5760001901611f4c81611765565b81549060018060a01b039060031b1b1916905560045580600052600560205260006040812055806000526006602052604060002060ff1981541690557f8a52807acd44f50b6e4823de532df8cb7e684378369a85e00c4fd8da2bfd32c6600080a2565b634e487b7160e01b600052603160045260246000fd5b611fce90611765565b905460039190911b1c6001600160a01b0316611fed81611e6a84611765565b60005260056020526040600020553880611f34565b6001600160a01b0381166000818152600360205260409020600281018054929493919260ff81161580156123b8575b80156123a8575b61239d57612045836118cc565b61234f57505060ff6004830154161561230e576040516370a0823160e01b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa8015610f195785916000916122d9575b501061228a57604051636eb1769f60e11b81526001600160a01b0383166004820152306024820152602081604481855afa8015610f19578591600091612255575b5010612206576040516323b872dd60e01b81526001600160a01b0392909216600483015230602483015260448201849052602090829060649082906000905af1908115610f19576000916121e7575b50156121975742815562278d00420191824211610c395782816003847f6cd9d6bebf8cc2076dd424f83deb0559d8774d1c44178b4f676f9d50709fb1be9660016040970155015582519182526020820152a2600190565b505060008051602061241c833981519152604051806121df8160609060208152601460208201527315d15512081d1c985b9cd9995c8819985a5b195960621b60408201520190565b0390a2600090565b612200915060203d602011610f1257610f04818361180d565b38612140565b5050505060008051602061241c833981519152606060405160208152601b60208201527f496e73756666696369656e74205745544820616c6c6f77616e636500000000006040820152a2600090565b9150506020813d602011612282575b816122716020938361180d565b8101031261026157849051386120f1565b3d9150612264565b5050505060008051602061241c833981519152604051806121df81606090602081526019602082015278496e73756666696369656e7420574554482062616c616e636560381b60408201520190565b9150506020813d602011612306575b816122f56020938361180d565b8101031261026157849051386120b0565b3d91506122e8565b50505060008051602061241c833981519152606060405160208152601060208201526f139bc815d1551208185c1c1c9bdd985b60821b6040820152a2600090565b61236e945090600492939160ff191690550160ff198154169055611eec565b7faeab0094d0f4ba2e37ab9c32d5eae0cbc49edafca1f7366f8ee1b6946c6dacfe6020604051428152a2600090565b505050505050600090565b506123b283611cdc565b15612038565b5085600052600760205260ff60406000205416612031565b6000546001600160a01b031633036123e457565b63118cdaa760e01b6000523360045260246000fd5b60026001541461240a576002600155565b633ee5aeb560e01b60005260046000fdfe87951482dc5c1eb7f32ab93cd897d85fccfa58819bd33c0aecda71c42cd8898aa2646970667358221220da295d44a74ca6ff83f51034117fa872fd77e24d8c78bf4472157b02c27000b564736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9612A98 EQ PUSH2 0x157B JUMPI DUP1 PUSH4 0x13621A21 EQ PUSH2 0x1560 JUMPI DUP1 PUSH4 0x1EC249A1 EQ PUSH2 0x1521 JUMPI DUP1 PUSH4 0x24E9EDB0 EQ PUSH2 0x1492 JUMPI DUP1 PUSH4 0x374F6D5D EQ PUSH2 0x1456 JUMPI DUP1 PUSH4 0x3AFB0551 EQ PUSH2 0x1433 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x127F JUMPI DUP1 PUSH4 0x4B57B0BE EQ PUSH2 0x123A JUMPI DUP1 PUSH4 0x4C02F62E EQ PUSH2 0x10EE JUMPI DUP1 PUSH4 0x5051A05F EQ PUSH2 0x10D2 JUMPI DUP1 PUSH4 0x507B1E4E EQ PUSH2 0x10B4 JUMPI DUP1 PUSH4 0x511671EE EQ PUSH2 0x1096 JUMPI DUP1 PUSH4 0x53D6FD59 EQ PUSH2 0x1002 JUMPI DUP1 PUSH4 0x544AF5F2 EQ PUSH2 0xFE4 JUMPI DUP1 PUSH4 0x5F5028B5 EQ PUSH2 0xCCF JUMPI DUP1 PUSH4 0x67AA682B EQ PUSH2 0xCAF JUMPI DUP1 PUSH4 0x6C7327A2 EQ PUSH2 0xA96 JUMPI DUP1 PUSH4 0x6C87D2C2 EQ PUSH2 0xA32 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x90B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0x76FC0D24 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0x803AE518 EQ PUSH2 0x84F JUMPI DUP1 PUSH4 0x88447175 EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0x8886FCC5 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7AF JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x78C JUMPI DUP1 PUSH4 0x97AD7E02 EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x72A JUMPI DUP1 PUSH4 0xA095E8F9 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0xB0FD8954 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xBEBE4A57 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xBFB8E2F2 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xBFD97CD6 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xC1A287E2 EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xC96679FE EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xD474F84F EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xF046395A EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xF25B9CAA EQ PUSH2 0x266 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x1F1 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0xE10 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A4 PUSH2 0x16EF JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x30C PUSH2 0x23D0 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND GAS CALL PUSH2 0x32D PUSH2 0x1A93 JUMP JUMPDEST POP ISZERO PUSH2 0x335 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2045544820746F207769746864726177 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x100 PUSH2 0x3C6 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3EC DUP3 PUSH2 0x17DB JUMP JUMPDEST DUP3 SLOAD SWAP4 DUP5 DUP4 MSTORE PUSH1 0x1 DUP5 ADD SLOAD SWAP4 DUP5 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND ISZERO ISZERO SWAP2 DUP3 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 DUP6 PUSH1 0x60 DUP11 ADD MSTORE ADD SLOAD AND SWAP6 ADD SWAP5 ISZERO ISZERO DUP6 MSTORE PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP2 PUSH2 0x44F PUSH2 0x449 DUP6 PUSH2 0x1CDC JUMP JUMPDEST SWAP5 PUSH2 0x18CC JUMP JUMPDEST SWAP5 MLOAD ISZERO ISZERO SWAP6 PUSH1 0x40 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4A6 PUSH2 0x16EF JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x3F480 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH5 0xE8D4A51000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x52F PUSH2 0x519 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x521 PUSH2 0x23D0 JUMP JUMPDEST PUSH2 0x529 PUSH2 0x1874 JUMP JUMPDEST SWAP1 PUSH2 0x2002 JUMP JUMPDEST ISZERO PUSH2 0x536 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E742070726F63657373696E67206661696C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH2 0x59E PUSH2 0x599 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x100 PUSH2 0x5C4 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0x5CC PUSH2 0x1874 JUMP JUMPDEST SWAP1 PUSH1 0x4 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH5 0x2540BE400 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0x278D00 PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0x3F480 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x14 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE ADDRESS PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x261 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x261 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x261 JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x261 JUMPI PUSH2 0x66B PUSH2 0x1756 JUMP JUMPDEST PUSH2 0x673 PUSH2 0x23D0 JUMP JUMPDEST DUP1 ISZERO ISZERO SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x683 JUMPI STOP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6A1 PUSH2 0x69C DUP4 DUP9 DUP11 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x1D78 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 PUSH2 0x6C5 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x70F JUMPI JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x6DE PUSH2 0x69C DUP4 DUP9 DUP11 PUSH2 0x1D68 JUMP JUMPDEST AND PUSH32 0x995D2434D36C9BCEAAB42C56EFE51E8FFE41FD11CABEFD9E2CB83700D8B2035E PUSH1 0x20 PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE LOG2 ADD PUSH2 0x67A JUMP JUMPDEST PUSH2 0x725 PUSH2 0x720 PUSH2 0x69C DUP4 DUP9 DUP11 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x1EEC JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x74B PUSH2 0x16EF JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH2 0x59E PUSH2 0x787 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x1CDC JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH2 0x7A7 PUSH2 0x1AEA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH32 0xB347C6BF445109E788A01515E0DBA872723DDF737844D1E8BFFB97C1FC2F3C22 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x261 JUMPI PUSH2 0x878 PUSH1 0x20 SWAP2 PUSH2 0x1765 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x8AA PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x8CB PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH2 0x919 CALLDATASIZE PUSH2 0x1705 JUMP JUMPDEST POP POP PUSH3 0x15180 PUSH2 0x92B PUSH1 0x8 SLOAD TIMESTAMP PUSH2 0x196A JUMP JUMPDEST LT ISZERO PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT DUP1 PUSH2 0xA28 JUMPI JUMPDEST ISZERO PUSH2 0xA20 JUMPI PUSH2 0x94D DUP2 PUSH2 0x1765 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x968 DUP2 PUSH2 0x1CDC JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xA04 JUMPI JUMPDEST POP PUSH2 0x982 JUMPI PUSH2 0x97D SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST POP POP POP PUSH1 0x1 JUMPDEST DUP2 PUSH2 0x9FC JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH2 0x99F DUP4 DUP4 PUSH2 0x180D JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 DUP2 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x9E3 JUMPI POP POP PUSH1 0x60 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x60 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0x9C0 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x98E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND DUP6 PUSH2 0x96F JUMP JUMPDEST POP SWAP1 POP PUSH2 0x988 JUMP JUMPDEST POP PUSH1 0x14 DUP2 LT PUSH2 0x93F JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xA5B JUMPI PUSH2 0x878 PUSH1 0x20 SWAP2 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0xAAA PUSH2 0x23F9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xAC5 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1A0D JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xC9C JUMPI JUMPDEST PUSH2 0xAE8 PUSH2 0x1874 JUMP JUMPDEST DUP1 CALLVALUE LT PUSH2 0xC60 JUMPI PUSH1 0x0 SWAP1 DUP1 CALLVALUE GT PUSH2 0xC4F JUMPI JUMPDEST POP PUSH3 0x278D00 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0xC39 JUMPI PUSH2 0xB96 PUSH2 0xB15 DUP4 CALLVALUE PUSH2 0x196A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xB24 DUP4 PUSH2 0x17DB JUMP JUMPDEST TIMESTAMP DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 DUP6 DUP3 MSTORE PUSH2 0xB7A PUSH1 0x40 DUP6 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 MLOAD DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD ISZERO ISZERO PUSH1 0x2 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB9F CALLER PUSH2 0x1E1A JUMP JUMPDEST PUSH2 0xBA9 DUP3 CALLVALUE PUSH2 0x196A JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6CD9D6BEBF8CC2076DD424F83DEB0559D8774D1C44178B4F676F9D50709FB1BE PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 PUSH2 0xBE7 JUMPI JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 CALLER GAS CALL PUSH2 0xBF8 PUSH2 0x1A93 JUMP JUMPDEST POP ISZERO PUSH2 0xC04 JUMPI DUP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1499599D5B990819985A5B1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC5A SWAP2 POP CALLVALUE PUSH2 0x196A JUMP JUMPDEST DUP2 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xCAA PUSH1 0x14 PUSH1 0x4 SLOAD LT PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0xAE0 JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH5 0x2540BE400 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0xCE8 PUSH2 0x23F9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xD03 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1A0D JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xFD1 JUMPI JUMPDEST PUSH2 0xD26 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xF9C JUMPI JUMPDEST POP LT PUSH2 0xF5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xF25 JUMPI JUMPDEST PUSH2 0xDC1 SWAP3 POP LT ISZERO PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0xF19 JUMPI PUSH2 0xE09 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xEEA JUMPI JUMPDEST POP PUSH2 0x19CA JUMP JUMPDEST PUSH3 0x278D00 TIMESTAMP ADD DUP1 TIMESTAMP GT PUSH2 0xC39 JUMPI PUSH2 0xE7D PUSH1 0x40 MLOAD PUSH2 0xE25 DUP2 PUSH2 0x17DB JUMP JUMPDEST TIMESTAMP DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x40 DUP4 ADD PUSH1 0x1 DUP2 MSTORE PUSH2 0xB7A PUSH1 0x60 DUP6 ADD SWAP2 DUP9 DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP4 PUSH1 0x1 DUP6 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 MLOAD DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD ISZERO ISZERO PUSH1 0x2 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE86 CALLER PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6CD9D6BEBF8CC2076DD424F83DEB0559D8774D1C44178B4F676F9D50709FB1BE PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xB347C6BF445109E788A01515E0DBA872723DDF737844D1E8BFFB97C1FC2F3C22 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH2 0xF0C SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF12 JUMPI JUMPDEST PUSH2 0xF04 DUP2 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x19B2 JUMP JUMPDEST DUP4 PUSH2 0xE03 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF53 JUMPI JUMPDEST DUP2 PUSH2 0xF40 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI DUP3 PUSH2 0xDC1 SWAP2 MLOAD PUSH2 0xDB5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x496E73756666696369656E7420574554482062616C616E6365 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xFC9 JUMPI JUMPDEST DUP2 PUSH2 0xFB8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI DUP3 SWAP1 MLOAD DUP5 PUSH2 0xD7D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xFAB JUMP JUMPDEST PUSH2 0xFDF PUSH1 0x14 PUSH1 0x4 SLOAD LT PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x101B PUSH2 0x16EF JUMP JUMPDEST PUSH32 0x995D2434D36C9BCEAAB42C56EFE51E8FFE41FD11CABEFD9E2CB83700D8B2035E PUSH1 0x20 PUSH2 0x1046 PUSH2 0x1756 JUMP JUMPDEST PUSH2 0x104E PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 ISZERO ISZERO AND OR SWAP1 SSTORE SWAP4 DUP2 PUSH2 0x1087 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST PUSH2 0x1090 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST DUP5 PUSH2 0x107B JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x1107 PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xF19 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1205 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x11CA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x44 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xF19 JUMPI PUSH2 0x19 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x11AB JUMPI POP PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x11C4 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF12 JUMPI PUSH2 0xF04 DUP2 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP3 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F205745544820746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1232 JUMPI JUMPDEST DUP2 PUSH2 0x121F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x122F JUMPI POP MLOAD DUP3 PUSH2 0x115D JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1212 JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH2 0x128D CALLDATASIZE PUSH2 0x1705 JUMP JUMPDEST POP POP PUSH3 0x15180 PUSH2 0x129F PUSH1 0x8 SLOAD TIMESTAMP PUSH2 0x196A JUMP JUMPDEST LT PUSH2 0x1402 JUMPI TIMESTAMP PUSH1 0x8 SSTORE PUSH2 0x12B0 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x12BF DUP3 PUSH2 0x1977 JUMP JUMPDEST SWAP1 PUSH2 0x12CD PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x12DC DUP5 PUSH2 0x1977 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY DUP4 SWAP1 DUP5 JUMPDEST DUP5 DUP2 LT DUP1 PUSH2 0x13F8 JUMPI JUMPDEST ISZERO PUSH2 0x136C JUMPI PUSH2 0x12FE DUP2 PUSH2 0x1765 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1319 DUP2 PUSH2 0x1CDC JUMP JUMPDEST DUP1 PUSH2 0x1353 JUMPI JUMPDEST PUSH2 0x1333 JUMPI JUMPDEST POP PUSH2 0x132E SWAP1 PUSH2 0x198F JUMP JUMPDEST PUSH2 0x12E7 JUMP JUMPDEST DUP4 PUSH2 0x134C SWAP2 PUSH2 0x1346 PUSH2 0x132E SWAP5 SWAP7 DUP9 PUSH2 0x199E JUMP JUMPDEST MSTORE PUSH2 0x198F JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1324 JUMP JUMPDEST POP DUP1 DUP8 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 DUP10 KECCAK256 ADD SLOAD AND PUSH2 0x131F JUMP JUMPDEST POP DUP5 SWAP3 DUP4 JUMPDEST DUP4 DUP2 LT PUSH2 0x13AB JUMPI JUMPDEST PUSH32 0x37AEB7A78769E88660E2546F8AC9047631D3969FAAA2DCE0188F6A220AC99C17 PUSH1 0x40 DUP7 DUP2 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH3 0x186A0 GAS LT PUSH2 0x13F3 JUMPI PUSH2 0x13D2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13CB DUP5 DUP7 PUSH2 0x199E JUMP JUMPDEST MLOAD AND PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x13DF JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1371 JUMP JUMPDEST SWAP4 PUSH2 0x13EB PUSH1 0x1 SWAP2 PUSH2 0x198F JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1379 JUMP JUMPDEST POP PUSH1 0x14 DUP4 LT PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x546F6F206561726C79 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH2 0x59E PUSH2 0x1451 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x18CC JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x60 PUSH2 0x1471 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0x1479 PUSH2 0x1874 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH5 0x2540BE400 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x14C0 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x1796 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH2 0x14F3 SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x75703D723C382BAF9126C0B27310A322412B9E2BBAF52E74AFCF50B107A7905F PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1542 PUSH2 0x16EF JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 PUSH2 0x7A7 PUSH2 0x1874 JUMP JUMPDEST CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x15A9 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x1796 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x16B8 JUMPI PUSH2 0x15CA PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x44 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x1684 JUMPI JUMPDEST PUSH2 0x1630 SWAP3 POP LT ISZERO PUSH2 0x182F JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x1655 CALLER PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xB347C6BF445109E788A01515E0DBA872723DDF737844D1E8BFFB97C1FC2F3C22 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x16B0 JUMPI JUMPDEST DUP2 PUSH2 0x169E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI PUSH2 0x1630 SWAP2 MLOAD PUSH2 0x1624 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E48195B98589B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x261 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x261 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x261 JUMPI DUP3 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x261 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x261 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x261 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x261 JUMPI JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x179D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27379030B1BA34BB329039BAB139B1B934B83A34B7B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1836 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x15D1551208185C1C1C9BDD985B081C995C5D5A5C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x187C PUSH2 0x1AEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1893 JUMPI PUSH12 0x204FCE5E3E25026110000000 DIV SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420455448207072696365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP2 PUSH2 0x18F1 DUP4 PUSH2 0x17DB JUMP JUMPDEST DUP2 SLOAD DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 PUSH1 0x20 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND ISZERO SWAP1 PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 DUP5 ISZERO SWAP7 DUP8 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE SWAP2 PUSH2 0x1951 JUMPI JUMPDEST POP PUSH2 0x194B JUMPI MLOAD PUSH3 0x3F480 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xC39 JUMPI TIMESTAMP GT SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CODESIZE PUSH2 0x1933 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xC39 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x17F7 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xC39 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x261 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x19D1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15D15512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A14 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x155CD95C881A5CC81DDA1A5D195B1A5CDD1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A56 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13585E1A5B5D5B481D5CD95C9CC81C995858DA1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1ACE JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x17F7 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1AC2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x180D JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x261 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 PUSH1 0xA0 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI PUSH1 0x0 DUP1 SWAP3 DUP2 SWAP1 DUP3 SWAP4 PUSH2 0x1C85 JUMPI JUMPDEST POP PUSH1 0x0 DUP5 SGT ISZERO PUSH2 0x1C4B JUMPI DUP1 ISZERO PUSH2 0x1C11 JUMPI PUSH2 0x1B40 PUSH2 0xE10 SWAP2 TIMESTAMP PUSH2 0x196A JUMP JUMPDEST GT PUSH2 0x1BD7 JUMPI PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 AND LT PUSH2 0x1B9F JUMPI PUSH5 0xE8D4A51000 DUP2 GT PUSH2 0x1B69 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0xA0E4D2C6CA40E8DEDE40D0D2CED PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5374616C652070726963652064617461 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141C9A58D94819185D18481D1BDBC81BDB19 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x526F756E64206E6F7420636F6D706C657465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP4 POP POP SWAP1 POP PUSH1 0xA0 DUP3 RETURNDATASIZE PUSH1 0xA0 GT PUSH2 0x1CD4 JUMPI JUMPDEST DUP2 PUSH2 0x1CA3 PUSH1 0xA0 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x122F JUMPI POP PUSH2 0x1CB5 DUP2 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1CCB PUSH1 0x80 PUSH1 0x60 DUP6 ADD MLOAD SWAP5 ADD PUSH2 0x1AD3 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 CODESIZE PUSH2 0x1B23 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP2 PUSH2 0x1D01 DUP4 PUSH2 0x17DB JUMP JUMPDEST DUP2 SLOAD DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 PUSH1 0x20 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND ISZERO SWAP1 PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 DUP5 ISZERO SWAP7 DUP8 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE SWAP2 PUSH2 0x1D4F JUMPI JUMPDEST POP PUSH2 0x194B JUMPI MLOAD TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CODESIZE PUSH2 0x1D43 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1E14 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1DC5 DUP3 PUSH2 0x17DB JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP2 DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 DUP2 PUSH1 0x2 DUP7 ADD SLOAD AND ISZERO SWAP5 DUP6 ISZERO PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE PUSH2 0x194B JUMPI PUSH3 0x3F480 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xC39 JUMPI TIMESTAMP GT ISZERO SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1E42 JUMPI POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x17F7 JUMPI PUSH2 0x1E6A DUP3 PUSH1 0x1 PUSH2 0x1E8E SWAP5 ADD PUSH1 0x4 SSTORE PUSH2 0x1765 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL SWAP4 SWAP1 SWAP2 SHL NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xC39 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xBFF36AB077310EF747DCAB7B87DE0A2BE21EE4AD9C8ED40251FFD3FF744235E7 PUSH1 0x0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1F0E JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xC39 JUMPI DUP1 DUP3 SUB PUSH2 0x1FC5 JUMPI JUMPDEST POP POP PUSH1 0x4 SLOAD DUP1 ISZERO PUSH2 0x1FAF JUMPI PUSH1 0x0 NOT ADD PUSH2 0x1F4C DUP2 PUSH2 0x1765 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x4 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0x8A52807ACD44F50B6E4823DE532DF8CB7E684378369A85E00C4FD8DA2BFD32C6 PUSH1 0x0 DUP1 LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1FCE SWAP1 PUSH2 0x1765 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FED DUP2 PUSH2 0x1E6A DUP5 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CODESIZE DUP1 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP3 SWAP5 SWAP4 SWAP2 SWAP3 PUSH1 0xFF DUP2 AND ISZERO DUP1 ISZERO PUSH2 0x23B8 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x23A8 JUMPI JUMPDEST PUSH2 0x239D JUMPI PUSH2 0x2045 DUP4 PUSH2 0x18CC JUMP JUMPDEST PUSH2 0x234F JUMPI POP POP PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND ISZERO PUSH2 0x230E JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI DUP6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x22D9 JUMPI JUMPDEST POP LT PUSH2 0x228A JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xF19 JUMPI DUP6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2255 JUMPI JUMPDEST POP LT PUSH2 0x2206 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF19 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x21E7 JUMPI JUMPDEST POP ISZERO PUSH2 0x2197 JUMPI TIMESTAMP DUP2 SSTORE PUSH3 0x278D00 TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0xC39 JUMPI DUP3 DUP2 PUSH1 0x3 DUP5 PUSH32 0x6CD9D6BEBF8CC2076DD424F83DEB0559D8774D1C44178B4F676F9D50709FB1BE SWAP7 PUSH1 0x1 PUSH1 0x40 SWAP8 ADD SSTORE ADD SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x241C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x21DF DUP2 PUSH1 0x60 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0x15D15512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2200 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF12 JUMPI PUSH2 0xF04 DUP2 DUP4 PUSH2 0x180D JUMP JUMPDEST CODESIZE PUSH2 0x2140 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x241C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205745544820616C6C6F77616E63650000000000 PUSH1 0x40 DUP3 ADD MSTORE LOG2 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2282 JUMPI JUMPDEST DUP2 PUSH2 0x2271 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI DUP5 SWAP1 MLOAD CODESIZE PUSH2 0x20F1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2264 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x241C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x21DF DUP2 PUSH1 0x60 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x19 PUSH1 0x20 DUP3 ADD MSTORE PUSH25 0x496E73756666696369656E7420574554482062616C616E6365 PUSH1 0x38 SHL PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2306 JUMPI JUMPDEST DUP2 PUSH2 0x22F5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI DUP5 SWAP1 MLOAD CODESIZE PUSH2 0x20B0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x22E8 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x241C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x60 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 DUP3 ADD MSTORE PUSH16 0x139BC815D1551208185C1C1C9BDD985B PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE LOG2 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x236E SWAP5 POP SWAP1 PUSH1 0x4 SWAP3 SWAP4 SWAP2 PUSH1 0xFF NOT AND SWAP1 SSTORE ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0x1EEC JUMP JUMPDEST PUSH32 0xAEAB0094D0F4BA2E37AB9C32D5EAE0CBC49EDAFCA1F7366F8EE1B6946C6DACFE PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG2 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x23B2 DUP4 PUSH2 0x1CDC JUMP JUMPDEST ISZERO PUSH2 0x2038 JUMP JUMPDEST POP DUP6 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x2031 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x23E4 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x240A JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID DUP8 SWAP6 EQ DUP3 0xDC TLOAD 0x1E 0xB7 RETURN 0x2A 0xB9 EXTCODECOPY 0xD8 SWAP8 0xD8 PUSH0 0xCC STATICCALL PC DUP2 SWAP12 0xD3 EXTCODECOPY EXP 0xEC 0xDA PUSH18 0xC42CD8898AA2646970667358221220DA295D PREVRANDAO 0xA7 0x4C 0xA6 SELFDESTRUCT DUP4 CREATE2 LT CALLVALUE GT PUSH32 0xA872FD77E24D8C78BF4472157B02C27000B564736F6C634300081C0033000000 ",
              "sourceMap": "807:22171:8:-:0;;;;;;;;;-1:-1:-1;807:22171:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;:::i;:::-;1500:62:4;;:::i;:::-;-1:-1:-1;;;;;807:22171:8;2627:22:4;;2623:91;;807:22171:8;;;-1:-1:-1;;;;;;807:22171:8;;;;;;-1:-1:-1;;;;;807:22171:8;;3052:40:4;;807:22171:8;3052:40:4;807:22171:8;2623:91:4;2672:31;;;807:22171:8;2672:31:4;807:22171:8;;;;;2672:31:4;807:22171:8;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;1642:4;807:22171;;;;;;;;;-1:-1:-1;;807:22171:8;;;;-1:-1:-1;;;;;807:22171:8;;:::i;:::-;;;;2082:53;807:22171;;;;;;;;2082:53;;;;807:22171;2082:53;807:22171;2082:53;;;807:22171;;;;2082:53;;;807:22171;2082:53;;807:22171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;1500:62:4;;:::i;:::-;15248:21:8;15287:11;;807:22171;;;;;;;;;;;;;;;15359:41;;;;:::i;:::-;;807:22171;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;:::i;:::-;;;;;;;;;;;;13382:13;807:22171;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13382:13;807:22171;;;;;;;;;;;;;;;;;;;;;13569:9;807:22171;;;;;;;;13598:18;13630:27;13598:18;;;:::i;:::-;13630:27;;:::i;:::-;807:22171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;-1:-1:-1;;;;;807:22171:8;;:::i;:::-;;;;2245:44;807:22171;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;1526:6;807:22171;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;1293:11;807:22171;;;;;;;;;-1:-1:-1;;807:22171:8;;;;22898:41;807:22171;;:::i;:::-;1500:62:4;;:::i;:::-;22857:23:8;;:::i;:::-;22898:41;;:::i;:::-;807:22171;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;17007:16;;:::i;:::-;17089:23;;:::i;:::-;807:22171;;;;;;;1174:9;807:22171;;;;;;;;;;1412:7;807:22171;;;;1526:6;807:22171;;;;3414:2;807:22171;;;;;;;;17282:4;807:22171;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:4;;:::i;:::-;807:22171:8;;;;;14519:16;;;;;;807:22171;14537:3;807:22171;;-1:-1:-1;;;;;14566:8:8;;807:22171;14566:8;;;:::i;:::-;;:::i;:::-;807:22171;;;14556:9;807:22171;;;14556:35;807:22171;;;;;;;;;;;;;;;;;;;14556:35;14618:73;;14537:3;807:22171;;;;;14738:8;;;;;;:::i;:::-;807:22171;14722:40;807:22171;;;;;;14722:40;807:22171;14504:13;;14618:73;14667:8;;;;;;;:::i;:::-;;:::i;:::-;14618:73;;807:22171;;;;;;-1:-1:-1;;807:22171:8;;;;-1:-1:-1;;;;;807:22171:8;;:::i;:::-;;;;2462:41;807:22171;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;807:22171:8;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;;-1:-1:-1;;;;;807:22171:8;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;10450:10;807:22171;;10436:13;807:22171;;;;;;10436:41;807:22171;;;;;;;;;;;;10500:38;807:22171;10450:10;10500:38;;807:22171;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;;2211:28;;;;;;807:22171;2211:28;;:::i;:::-;807:22171;;;;;;;;;;-1:-1:-1;;;;;807:22171:8;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;1500:62:4;;:::i;:::-;807:22171:8;;22566:28;807:22171;;;;;;;;-1:-1:-1;;807:22171:8;;;;1500:62:4;;:::i;:::-;807:22171:8;;;-1:-1:-1;;;;;;807:22171:8;;;;-1:-1:-1;;;;;807:22171:8;3052:40:4;807:22171:8;;3052:40:4;807:22171:8;;;;;;;;:::i;:::-;;;3274:6;18341:36;18359:18;807:22171;18341:15;:36;:::i;:::-;18340:61;;807:22171;;;18567:13;807:22171;18626:3;18582:14;;;:42;;;18626:3;18582:42;;;18660:14;;;:::i;:::-;807:22171;;;;;;;;-1:-1:-1;;;;;807:22171:8;18692:18;807:22171;18692:18;:::i;:::-;:57;;;;18626:3;18688:133;;;18626:3;;;:::i;:::-;18567:13;;18688:133;18769:14;;;18779:4;18562:269;18864:24;;;18562:269;-1:-1:-1;807:22171:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;807:22171:8;;18864:24;;;;;;18692:57;807:22171;;;;;;;;;;;;18714:35;807:22171;;18692:57;;;18582:42;;;;;;;18600:24;3414:2;18600:24;;18582:42;;807:22171;;;;;;-1:-1:-1;;807:22171:8;;;;;;;;17760:26;;807:22171;;;17827:18;807:22171;17827:18;;:::i;807:22171::-;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;2466:103:7;;:::i;:::-;6425:10:8;807:22171;;6415:9;807:22171;;6406:54;807:22171;;;;;;6414:22;6406:54;:::i;:::-;6425:10;807:22171;;6544:13;807:22171;;;6544:34;807:22171;;;6544:34;807:22171;;6543:35;6539:141;;807:22171;6723:23;;:::i;:::-;6764:9;;:27;807:22171;;;6764:9;;;6908:26;6904:98;;807:22171;7042:15;1412:7;7042:15;807:22171;7042:15;;807:22171;;;;7360:24;6764:9;;7360:24;:::i;:::-;807:22171;;;;;;;:::i;:::-;7042:15;807:22171;;;7188:316;;807:22171;;;;;;7188:316;;7323:4;807:22171;;7188:316;;;807:22171;;;7188:316;;;807:22171;;;;6425:10;807:22171;;6544:13;807:22171;;;;;;;;;;7323:4;807:22171;;;;;;6544:34;807:22171;;;;;;;;;;;;;;;;;;;6544:13;807:22171;;;;;;;;;;;;;;;;;;;;;;;;7619:10;6425;7619;:::i;:::-;7683:24;6764:9;;7683:24;:::i;:::-;807:22171;;;;;;;;;;7654:67;807:22171;6425:10;7654:67;;7800:16;7796:162;;807:22171;7323:4;807:22171;;;7796:162;807:22171;6425:10;;;;;7851:49;;;;:::i;:::-;;807:22171;;;7796:162;;;807:22171;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;;;;;;;;6904:98;6965:26;6764:9;;;6965:26;:::i;:::-;6904:98;;;807:22171;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;6539:141;6594:75;3414:2;807:22171;;6602:41;6594:75;:::i;:::-;6539:141;;807:22171;;;;;;-1:-1:-1;;807:22171:8;;;;;;;1174:9;807:22171;;;;;;;;;-1:-1:-1;;807:22171:8;;;;2466:103:7;;:::i;:::-;8142:10:8;807:22171;;8132:9;807:22171;;8123:54;807:22171;;;;;;8131:22;8123:54;:::i;:::-;8142:10;807:22171;;8261:13;807:22171;;;8261:34;807:22171;;;8261:34;807:22171;;8260:35;8256:141;;807:22171;8440:23;;:::i;:::-;807:22171;;-1:-1:-1;;;8531:31:8;;8142:10;807:22171;8531:31;;807:22171;8531:9;-1:-1:-1;;;;;807:22171:8;;;;8531:31;807:22171;;8531:31;;;;;;;;807:22171;8531:31;;;807:22171;8531:49;;807:22171;;;;-1:-1:-1;;;8703:46:8;;8142:10;807:22171;8703:46;;807:22171;8743:4;807:22171;;;;;;;;8703:46;;;;;;;;;807:22171;8703:46;;;807:22171;8695:99;8703:64;;;;8695:99;:::i;:::-;807:22171;;-1:-1:-1;;;8864:65:8;;8142:10;807:22171;8864:65;;807:22171;8743:4;807:22171;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8864:65:8;;;;;;8856:98;8864:65;807:22171;8864:65;;;807:22171;8856:98;;:::i;:::-;1412:7;8995:15;807:22171;8995:15;;807:22171;;;;;;;;;:::i;:::-;8995:15;807:22171;;;;9104:232;;807:22171;;;;9104:232;;9239:4;807:22171;;;9104:232;;;807:22171;;;;9104:232;;;807:22171;9239:4;807:22171;;8142:10;807:22171;;8261:13;807:22171;;;;;;;;;;9239:4;807:22171;;;;;;8261:34;807:22171;;;;;;;;;;;;;;;;;;9411:10;8142;9411;:::i;:::-;807:22171;;;;;;;;;9446:57;807:22171;8142:10;9446:57;;807:22171;;9239:4;807:22171;;9518:37;807:22171;8142:10;9518:37;;9239:4;807:22171;;;8864:65;;;;807:22171;8864:65;807:22171;8864:65;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;807:22171;;;;;;;;;8703:46;;;807:22171;8703:46;;807:22171;8703:46;;;;;;807:22171;8703:46;;;:::i;:::-;;;807:22171;;;;;8695:99;807:22171;;8703:46;;;;;-1:-1:-1;8703:46:8;;807:22171;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;8531:31;;;;807:22171;8531:31;;807:22171;8531:31;;;;;;807:22171;8531:31;;;:::i;:::-;;;807:22171;;;;;;;8531:31;;;;;;-1:-1:-1;8531:31:8;;8256:141;8311:75;3414:2;807:22171;;8319:41;8311:75;:::i;:::-;8256:141;;807:22171;;;;;;-1:-1:-1;;807:22171:8;;;;;;;1412:7;807:22171;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;:::i;:::-;14161:36;807:22171;;;:::i;:::-;1500:62:4;;:::i;:::-;-1:-1:-1;;;;;807:22171:8;;;;;;13980:9;807:22171;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;;;;;14077:61;;807:22171;;;;;;;;;14161:36;807:22171;14077:61;14122:4;;;:::i;:::-;14077:61;;;807:22171;;;;;;-1:-1:-1;;807:22171:8;;;;;3189:33;807:22171;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;3274:6;807:22171;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;3414:2;807:22171;;;;;;;;;-1:-1:-1;;807:22171:8;;;;1500:62:4;;:::i;:::-;807:22171:8;;-1:-1:-1;;;14928:34:8;;14956:4;807:22171;14928:34;;807:22171;14928:9;-1:-1:-1;;;;;807:22171:8;;;;14928:34;807:22171;;14928:34;;;;;;;807:22171;14928:34;;;807:22171;14980:11;;;807:22171;;;;15033:36;807:22171;;;;;;;;;;;;;;;;;;;15033:36;;807:22171;15033:36;;807:22171;14928:34;807:22171;;;15033:36;;;;;;15025:69;15033:36;807:22171;15033:36;;;15025:69;;:::i;15033:36::-;;;;807:22171;15033:36;807:22171;15033:36;;;;;;;:::i;:::-;;;;807:22171;;;-1:-1:-1;;;807:22171:8;;;;;;;;14928:34;807:22171;;;-1:-1:-1;;;807:22171:8;;;;;;;14928:34;;807:22171;14928:34;;807:22171;14928:34;;;;;;807:22171;14928:34;;;:::i;:::-;;;807:22171;;;;;;14928:34;;;807:22171;;;14928:34;;;-1:-1:-1;14928:34:8;;807:22171;;;;;;-1:-1:-1;;807:22171:8;;;;;;1016:33;-1:-1:-1;;;;;807:22171:8;;;;;;;;;;;;;:::i;:::-;;;3274:6;19099:36;19117:18;807:22171;19099:15;:36;:::i;:::-;19098:61;807:22171;;19099:15;19117:18;807:22171;19251:23;;:::i;:::-;807:22171;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;807:22171:8;;;:::i;:::-;;;;;;;19467:26;19573:13;;19653:3;19588:22;;;:63;;;19653:3;19588:63;;;19683:14;;;:::i;:::-;807:22171;;;;;;;;-1:-1:-1;;;;;807:22171:8;19711:18;807:22171;19711:18;:::i;:::-;:57;;;19653:3;19707:154;;19653:3;;;;;:::i;:::-;19573:13;;19707:154;19784:36;19834:16;19784:36;;19653:3;19784:36;;;;:::i;:::-;807:22171;19834:16;:::i;:::-;19707:154;;;;19711:57;807:22171;;;;;;;;;;;;19733:35;807:22171;;19711:57;;19588:63;;;;19907:13;19922:18;;;;;;19902:230;20147:52;807:22171;;;;19099:15;;807:22171;;;;;;20147:52;807:22171;19942:3;19973:6;19961:9;:18;19957:29;;20030:53;807:22171;-1:-1:-1;;;;;20050:16:8;;;;:::i;:::-;807:22171;;20030:53;:::i;:::-;20026:100;;19942:3;807:22171;;19907:13;;20026:100;20099:16;;807:22171;20099:16;;:::i;:::-;20026:100;;;;;19957:29;19981:5;;19588:63;19614:37;3414:2;19614:37;;19588:63;;807:22171;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;807:22171:8;;;;;15936:16;;:::i;:::-;16018:23;;:::i;:::-;807:22171;;;;1174:9;807:22171;;;;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;10677:10;807:22171;;10663:13;807:22171;;10655:69;807:22171;10663:34;807:22171;;;10663:34;807:22171;;10655:69;:::i;:::-;10677:10;807:22171;;;;10663:13;807:22171;;;;;10663:34;10743;;807:22171;;-1:-1:-1;;807:22171:8;;;;;;;10795:41;;;807:22171;;;;;;;10866:10;;;:::i;:::-;807:22171;;10934:15;807:22171;;10901:49;807:22171;10677:10;10901:49;;807:22171;;;;;;;-1:-1:-1;;807:22171:8;;;;-1:-1:-1;;;;;807:22171:8;;:::i;:::-;;;;2325:45;807:22171;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;807:22171:8;;;;9730:10;807:22171;;9716:13;807:22171;;9708:69;807:22171;9716:34;807:22171;;;9716:34;807:22171;;9708:69;:::i;:::-;9730:10;807:22171;;9716:13;807:22171;;;;;;;9796:41;807:22171;;;;9901:23;;:::i;:::-;807:22171;;-1:-1:-1;;;10017:46:8;;9730:10;807:22171;10017:46;;807:22171;10057:4;807:22171;;;;;;;;;-1:-1:-1;;;;;10017:9:8;807:22171;10017:46;;;;;;807:22171;10017:46;;;807:22171;10009:99;10017:64;;;;10009:99;:::i;:::-;9730:10;807:22171;;9716:13;807:22171;;;;;;10127:41;10171:4;807:22171;;;;;;;;10194:10;9730;10194;:::i;:::-;807:22171;;10171:4;807:22171;;10270:37;807:22171;9730:10;10270:37;;807:22171;10017:46;;807:22171;10017:46;;807:22171;10017:46;;;;;;807:22171;10017:46;;;:::i;:::-;;;807:22171;;;;10009:99;807:22171;;10017:46;;;;;-1:-1:-1;10017:46:8;;807:22171;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;-1:-1:-1;;;;;807:22171:8;;;;;;:::o;:::-;;;-1:-1:-1;;807:22171:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;807:22171:8;;-1:-1:-1;807:22171:8;;;-1:-1:-1;807:22171:8;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;807:22171:8;;;;;-1:-1:-1;807:22171:8;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;4802:392;4894:16;;:::i;:::-;5107:12;;807:22171;;;;4802:392;:::o;807:22171::-;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;12189:312;-1:-1:-1;;;;;807:22171:8;;;;;12297:13;807:22171;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12297:13;807:22171;;;;;;;;;;;;;;;12339:32;;;12189:312;12335:75;;;807:22171;1526:6;807:22171;;;;;;;12435:15;:59;12189:312;:::o;12335:75::-;12387:12;807:22171;12387:12;:::o;12339:32::-;807:22171;;;;12356:9;807:22171;;;;;;;;12339:32;;;807:22171;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;-1:-1:-1;;807:22171:8;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;807:22171:8;;;;;:::i;:::-;;;;-1:-1:-1;807:22171:8;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;:::o;3991:631::-;4205:9;807:22171;;;-1:-1:-1;;;4205:27:8;;807:22171;4205:27;;807:22171;;4205:27;;807:22171;;-1:-1:-1;;;;;807:22171:8;4205:27;;;;;;-1:-1:-1;;;;;;4205:27:8;;;3991:631;4259:9;-1:-1:-1;4259:9:8;;807:22171;;;4309:13;;807:22171;;4363:27;1642:4;4363:15;;:27;:::i;:::-;:56;807:22171;;;;;;;;4460:26;807:22171;;1293:11;4525:31;;807:22171;;3991:631;:::o;807:22171::-;;;-1:-1:-1;;;807:22171:8;;;4205:27;807:22171;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;4205:27;807:22171;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;4205:27;807:22171;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;4205:27;807:22171;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;4205:27;807:22171;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;4205:27;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;807:22171;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4205:27;;;;;;;;;-1:-1:-1;4205:27:8;;11736:287;-1:-1:-1;;;;;807:22171:8;;;;;11835:13;807:22171;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11835:13;807:22171;;;;;;;;;;;;;;;11877:32;;;11736:287;11873:75;;;807:22171;11973:15;:43;;11736:287;:::o;11877:32::-;807:22171;;;;11894:9;807:22171;;;;;;;;11877:32;;;807:22171;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;807:22171:8;;;;;;;:::o;11138:435::-;-1:-1:-1;;;;;807:22171:8;;;;;11226:9;807:22171;;;;;;;;11222:57;;807:22171;;11323:13;807:22171;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11323:13;807:22171;;;;;;;;;;;;;;;11352:56;;1526:6;807:22171;;;;;;;11506:15;:60;;11138:435;:::o;11222:57::-;11257:11;11264:4;11257:11;:::o;5296:268::-;-1:-1:-1;;;;;807:22171:8;;-1:-1:-1;807:22171:8;;;5352:13;807:22171;;;;;;;;;;;5351:20;5347:211;;5296:268;;:::o;5347:211::-;5387:11;807:22171;;;;;;;;;;;;;;5387:11;807:22171;;:::i;:::-;;;-1:-1:-1;;;;;807:22171:8;;;;;;;;;;;;;;;;;;;;;;;;;5387:11;807:22171;-1:-1:-1;;807:22171:8;;;;;;;;-1:-1:-1;807:22171:8;5423:9;807:22171;;;-1:-1:-1;807:22171:8;;;-1:-1:-1;807:22171:8;5352:13;807:22171;;;-1:-1:-1;807:22171:8;;;;;;;;;;5522:25;-1:-1:-1;5522:25:8;;5296:268::o;5674:582::-;-1:-1:-1;;;;;807:22171:8;-1:-1:-1;807:22171:8;;;5732:13;807:22171;;;;;;;;5728:522;;5674:582;:::o;5728:522::-;807:22171;-1:-1:-1;807:22171:8;5783:9;807:22171;;;-1:-1:-1;807:22171:8;;5832:11;807:22171;;;;;;;;;;5885:18;;;5881:190;;5728:522;807:22171;;5832:11;807:22171;;;;;-1:-1:-1;;807:22171:8;;;;:::i;:::-;;;;;;;;;;;;;;;;;5832:11;807:22171;;-1:-1:-1;807:22171:8;5783:9;807:22171;;-1:-1:-1;807:22171:8;;;;;-1:-1:-1;807:22171:8;5732:13;807:22171;;;-1:-1:-1;807:22171:8;;;;;;;;6210:29;-1:-1:-1;6210:29:8;;5674:582::o;807:22171::-;;;;-1:-1:-1;807:22171:8;;5832:11;807:22171;;-1:-1:-1;807:22171:8;5881:190;5942:22;;;:::i;:::-;807:22171;;;;;;;;-1:-1:-1;;;;;807:22171:8;5982:29;807:22171;5982:18;;;:::i;:29::-;-1:-1:-1;807:22171:8;5783:9;807:22171;;;-1:-1:-1;807:22171:8;;5881:190;;;;20441:1908;-1:-1:-1;;;;;807:22171:8;;;;;;20569:13;807:22171;;;;;20655:12;;;807:22171;;;;20441:1908;807:22171;;;;;20654:13;807:22171;;20654:32;;20441:1908;20654:55;;;;20441:1908;20650:98;;20835:27;;;:::i;:::-;20831:276;;21173:19;;807:22171;21173:19;;;807:22171;;21172:20;21168:130;;807:22171;;-1:-1:-1;;;21361:25:8;;21173:19;21361:25;;807:22171;;;21361:9;-1:-1:-1;;;;;807:22171:8;;;;21361:25;807:22171;;21361:25;;;;;;;;807:22171;21361:25;;;20441:1908;21361:42;;21357:161;;807:22171;;-1:-1:-1;;;21590:40:8;;-1:-1:-1;;;;;807:22171:8;;21173:19;21590:40;;807:22171;21624:4;807:22171;;;;;;;;21590:40;;;;;;;;;807:22171;21590:40;;;20441:1908;21590:57;;21586:178;;807:22171;;-1:-1:-1;;;21834:59:8;;-1:-1:-1;;;;;807:22171:8;;;;21173:19;21834:59;;807:22171;21624:4;807:22171;;;;;;;;;;;;;;;;;;-1:-1:-1;;21834:59:8;;;;;;;807:22171;21834:59;;;20441:1908;21833:60;;21829:174;;22102:15;807:22171;;1412:7;22102:15;807:22171;22102:15;;;807:22171;;;22127:24;;20569:13;22127:24;22257:64;22127:24;;807:22171;22127:24;;807:22171;22195:21;807:22171;;;;;;;;;;22257:64;22127:24;20441:1908;:::o;21829:174::-;807:22171;;-1:-1:-1;;;;;;;;;;;807:22171:8;;21914:52;;;807:22171;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;21914:52;;;;807:22171;21980:12;:::o;21834:59::-;;;;807:22171;21834:59;807:22171;21834:59;;;;;;;:::i;:::-;;;;21586:178;807:22171;;;;-1:-1:-1;;;;;;;;;;;21668:59:8;807:22171;;;;;;;;;;;;;;;21668:59;807:22171;21741:12;:::o;21590:40::-;;;;807:22171;21590:40;;807:22171;21590:40;;;;;;807:22171;21590:40;;;:::i;:::-;;;807:22171;;;;;;;21590:40;;;;;;-1:-1:-1;21590:40:8;;21357:161;807:22171;;;;-1:-1:-1;;;;;;;;;;;807:22171:8;;21424:57;;;807:22171;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;;;;21361:25;;;;807:22171;21361:25;;807:22171;21361:25;;;;;;807:22171;21361:25;;;:::i;:::-;;;807:22171;;;;;;;21361:25;;;;;;-1:-1:-1;21361:25:8;;21168:130;807:22171;;;-1:-1:-1;;;;;;;;;;;21213:48:8;807:22171;;;;;;;;;;-1:-1:-1;;;807:22171:8;;;;21213:48;807:22171;21275:12;:::o;20831:276::-;21004:4;807:22171;;;20951:19;807:22171;;;;;;;;20951:19;807:22171;;;;;;;21004:4;:::i;:::-;21028:42;807:22171;;;21054:15;807:22171;;21028:42;807:22171;21084:12;:::o;20650:98::-;20725:12;;;;;;807:22171;20725:12;:::o;20654:55::-;20691:18;;;;:::i;:::-;20690:19;20654:55;;:32;807:22171;;;;20671:9;807:22171;;;;;;;;20654:32;;1796:162:4;1710:6;807:22171:8;-1:-1:-1;;;;;807:22171:8;735:10:6;1855:23:4;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:6;1901:40:4;807:22171:8;;1710:6:4;1901:40;2575:307:7;1899:1;2702:7;807:22171:8;2702:18:7;2698:86;;1899:1;2702:7;807:22171:8;2575:307:7:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:7;;-1:-1:-1;2743:30:7"
            },
            "methodIdentifiers": {
              "AUTOMATION_INTERVAL()": "507b1e4e",
              "BILLING_CYCLE()": "544af5f2",
              "GRACE_PERIOD()": "c1a287e2",
              "MAX_PRICE_USD()": "bfd97cd6",
              "MAX_USERS_PER_UPKEEP()": "5051a05f",
              "PRICE_STALENESS_THRESHOLD()": "f25b9caa",
              "SUBSCRIPTION_COST_USD()": "67aa682b",
              "activeUsers(uint256)": "803ae518",
              "batchSetWhitelist(address[],bool)": "a095e8f9",
              "cancelSubscription()": "24e9edb0",
              "checkUpkeep(bytes)": "6e04ff0d",
              "disableWETHAutoPay()": "88447175",
              "enableWETHAutoPay()": "09612a98",
              "getActiveUserAtIndex(uint256)": "6c87d2c2",
              "getLatestPrice()": "8e15f473",
              "getPricingInfo()": "374f6d5d",
              "getRequiredWETHAmount()": "13621a21",
              "getServiceDetails()": "b0fd8954",
              "getSubscriptionDetails(address)": "d474f84f",
              "getTotalActiveUsers()": "8886fcc5",
              "hasActiveSubscription(address)": "bebe4a57",
              "isPaymentDue(address)": "97ad7e02",
              "isSubscriptionExpired(address)": "3afb0551",
              "isUserTracked(address)": "1ec249a1",
              "lastAutomationTime()": "511671ee",
              "manuallyProcessPayment(address)": "bfb8e2f2",
              "owner()": "8da5cb5b",
              "payWithETH()": "6c7327a2",
              "performUpkeep(bytes)": "4585e33b",
              "renounceOwnership()": "715018a6",
              "setWhitelist(address,bool)": "53d6fd59",
              "setupWETHSubscription()": "5f5028b5",
              "subscriptions(address)": "f046395a",
              "transferOwnership(address)": "f2fde38b",
              "updateAutomationTime(uint256)": "76fc0d24",
              "userIndex(address)": "c96679fe",
              "wethToken()": "4b57b0be",
              "whitelist(address)": "9b19251a",
              "withdrawETH()": "e086e5ec",
              "withdrawWETH()": "4c02f62e"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wethToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"AutomaticPaymentFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersProcessed\",\"type\":\"uint256\"}],\"name\":\"AutomationTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SubscriptionExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nextBilling\",\"type\":\"uint256\"}],\"name\":\"SubscriptionPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserAddedToTracking\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserRemovedFromTracking\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"UserWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"WETHApprovalUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AUTOMATION_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BILLING_CYCLE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GRACE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PRICE_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_USERS_PER_UPKEEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_STALENESS_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUBSCRIPTION_COST_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeUsers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"batchSetWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableWETHAutoPay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableWETHAutoPay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getActiveUserAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricingInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"usdPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequiredWETHAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getServiceDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"usdPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"billingCycle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gracePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUsers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentUsers\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getSubscriptionDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextBilling\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paymentDue\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasExpired\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasWETHApproval\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalActiveUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasActiveSubscription\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isPaymentDue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isSubscriptionExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isUserTracked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastAutomationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"manuallyProcessPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payWithETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"setWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setupWETHSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"subscriptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastPaymentTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextBillingTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastPaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasWETHApproval\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTime\",\"type\":\"uint256\"}],\"name\":\"updateAutomationTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wethToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Cristian Valdivia\",\"details\":\"Uses Chainlink Automations for monthly billing (every 30 days), Chainlink Price Feeds for ETH/USD conversion, and WETH for automatic payments\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"batchSetWhitelist(address[],bool)\":{\"params\":{\"isWhitelisted\":\"True to whitelist, false to remove\",\"users\":\"Array of addresses to modify\"}},\"checkUpkeep(bytes)\":{\"returns\":{\"performData\":\"Data to pass to performUpkeep\",\"upkeepNeeded\":\"True if automation should run\"}},\"getActiveUserAtIndex(uint256)\":{\"params\":{\"index\":\"Index of user to get\"},\"returns\":{\"_0\":\"User address\"}},\"getLatestPrice()\":{\"returns\":{\"_0\":\"The latest price with 8 decimals\"}},\"getPricingInfo()\":{\"returns\":{\"ethPrice\":\"Current ETH price in USD\",\"usdPrice\":\"The subscription price in USD\",\"wethAmount\":\"The required amount in WETH\"}},\"getRequiredWETHAmount()\":{\"returns\":{\"_0\":\"The amount of WETH required with 18 decimals\"}},\"getServiceDetails()\":{\"returns\":{\"billingCycle\":\"The billing cycle in seconds (30 days)\",\"contractAddress\":\"The address of this contract\",\"currentUsers\":\"The current number of active users\",\"ethPrice\":\"Current ETH price in USD\",\"gracePeriod\":\"The grace period in seconds (3 days)\",\"maxUsers\":\"The maximum number of users allowed\",\"usdPrice\":\"The subscription price in USD\",\"wethAmount\":\"The required amount in WETH\"}},\"getSubscriptionDetails(address)\":{\"params\":{\"user\":\"Address to check\"},\"returns\":{\"hasExpired\":\"If subscription has expired\",\"hasWETHApproval\":\"If user has enabled auto-pay\",\"isActive\":\"If subscription is currently active\",\"isWhitelisted\":\"If user is whitelisted\",\"lastAmount\":\"The last payment amount\",\"lastPayment\":\"When the last payment was made\",\"nextBilling\":\"When next payment is due\",\"paymentDue\":\"If payment is currently due\"}},\"getTotalActiveUsers()\":{\"returns\":{\"_0\":\"Total number of active users\"}},\"hasActiveSubscription(address)\":{\"params\":{\"user\":\"Address to check\"},\"returns\":{\"_0\":\"True if user has active subscription (not expired)\"}},\"isPaymentDue(address)\":{\"params\":{\"user\":\"Address to check\"},\"returns\":{\"_0\":\"True if payment is due\"}},\"isSubscriptionExpired(address)\":{\"params\":{\"user\":\"Address to check\"},\"returns\":{\"_0\":\"True if subscription has expired\"}},\"manuallyProcessPayment(address)\":{\"params\":{\"user\":\"Address of user to process\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setWhitelist(address,bool)\":{\"params\":{\"isWhitelisted\":\"True to whitelist, false to remove\",\"user\":\"Address to modify\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAutomationTime(uint256)\":{\"params\":{\"newTime\":\"New automation time\"}}},\"title\":\"TomasSubscription\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchSetWhitelist(address[],bool)\":{\"notice\":\"Batch whitelist operations (only owner)\"},\"cancelSubscription()\":{\"notice\":\"Cancel subscription\"},\"checkUpkeep(bytes)\":{\"notice\":\"Check if automation should be triggered\"},\"disableWETHAutoPay()\":{\"notice\":\"Disable WETH automatic payments\"},\"enableWETHAutoPay()\":{\"notice\":\"Enable WETH automatic payments for existing subscription\"},\"getActiveUserAtIndex(uint256)\":{\"notice\":\"Get user at specific index\"},\"getLatestPrice()\":{\"notice\":\"Get the latest ETH/USD price from Chainlink with staleness checks\"},\"getPricingInfo()\":{\"notice\":\"Get current pricing information\"},\"getRequiredWETHAmount()\":{\"notice\":\"Calculate the required WETH amount based on USD price with overflow protection\"},\"getServiceDetails()\":{\"notice\":\"Get comprehensive service details including pricing, billing cycle, and contract info\"},\"getSubscriptionDetails(address)\":{\"notice\":\"Get subscription details for a user\"},\"getTotalActiveUsers()\":{\"notice\":\"Get total number of tracked users\"},\"hasActiveSubscription(address)\":{\"notice\":\"Check if user has active subscription\"},\"isPaymentDue(address)\":{\"notice\":\"Check if user's subscription is due for payment\"},\"isSubscriptionExpired(address)\":{\"notice\":\"Check if user's subscription has expired\"},\"manuallyProcessPayment(address)\":{\"notice\":\"Emergency function to manually process a user's payment (only owner)\"},\"payWithETH()\":{\"notice\":\"Pay for subscription with ETH (manual payment)\"},\"performUpkeep(bytes)\":{\"notice\":\"Execute automation logic - process due payments with gas control\"},\"setWhitelist(address,bool)\":{\"notice\":\"Add or remove user from whitelist (only owner)\"},\"setupWETHSubscription()\":{\"notice\":\"Set up subscription with WETH for automatic payments\"},\"updateAutomationTime(uint256)\":{\"notice\":\"Emergency function to update automation time (only owner)\"},\"withdrawETH()\":{\"notice\":\"Withdraw collected ETH (only owner)\"},\"withdrawWETH()\":{\"notice\":\"Withdraw collected WETH (only owner)\"}},\"notice\":\"Contract for handling monthly subscriptions in WETH for Tomas web3 legal agent\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TomasSubscription.sol\":\"TomasSubscription\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/TomasSubscription.sol\":{\"keccak256\":\"0x766d53926fa6270c358c25d9096de5d817df2edd456568d72c87d6aad922461b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63aba41044839b8e230fe6a45374a809f7963e4086cc6537476a2e0392e500\",\"dweb:/ipfs/QmSzHZhQ8vcxS5AeUsgJz3Ra39Mw5UNPwroseCsduuZtyP\"]}},\"version\":1}"
        }
      }
    }
  }
}